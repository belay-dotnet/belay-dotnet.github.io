import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"CLAUDE.md - Documentation Website Development Guide","description":"","frontmatter":{},"headers":[],"relativePath":"CLAUDE.md","filePath":"CLAUDE.md"}'),l={name:"CLAUDE.md"};function t(p,s,r,o,h,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="claude-md-documentation-website-development-guide" tabindex="-1">CLAUDE.md - Documentation Website Development Guide <a class="header-anchor" href="#claude-md-documentation-website-development-guide" aria-label="Permalink to &quot;CLAUDE.md - Documentation Website Development Guide&quot;">‚Äã</a></h1><p>This file provides specific guidance for working on the belay-dotnet.github.io documentation website.</p><h2 id="local-build-testing" tabindex="-1">Local Build Testing <a class="header-anchor" href="#local-build-testing" aria-label="Permalink to &quot;Local Build Testing&quot;">‚Äã</a></h2><p><strong>MANDATORY PRE-COMMIT REQUIREMENT</strong>: The local build script MUST be run and MUST pass before every single commit. This is non-negotiable to prevent CI failures and website breaks.</p><h3 id="required-pre-commit-workflow" tabindex="-1">REQUIRED Pre-Commit Workflow <a class="header-anchor" href="#required-pre-commit-workflow" aria-label="Permalink to &quot;REQUIRED Pre-Commit Workflow&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Optional: Set up local development environment (first time)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/setup-local-dev.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MANDATORY: Test locally before every commit - NO EXCEPTIONS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/local-build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ONLY commit if local build succeeds completely</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Your changes&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>‚ö†Ô∏è CRITICAL WARNING</strong>: Commits without successful local build testing will break CI and the deployed website. The script validates the complete documentation pipeline including DocFX generation and VitePress building.</p><h3 id="how-local-build-sh-works" tabindex="-1">How local-build.sh Works <a class="header-anchor" href="#how-local-build-sh-works" aria-label="Permalink to &quot;How local-build.sh Works&quot;">‚Äã</a></h3><p>The script automatically handles local development vs CI differences:</p><h4 id="local-development-mode" tabindex="-1">Local Development Mode: <a class="header-anchor" href="#local-development-mode" aria-label="Permalink to &quot;Local Development Mode:&quot;">‚Äã</a></h4><ol><li><strong>Creates belay-source symlink</strong>: <code>ln -sf ../ belay-source</code> to link to live source files</li><li><strong>Builds .NET projects</strong>: Compiles all projects for XML documentation generation</li><li><strong>Generates DocFX API docs</strong>: Creates 442+ markdown files from XML comments</li><li><strong>Tests VitePress build</strong>: Validates complete website generation</li><li><strong>Cleans up</strong>: Removes build artifacts (keeps symlink for next run)</li></ol><h4 id="ci-compatibility" tabindex="-1">CI Compatibility: <a class="header-anchor" href="#ci-compatibility" aria-label="Permalink to &quot;CI Compatibility:&quot;">‚Äã</a></h4><ul><li><strong>docfx.json</strong> uses <code>belay-source/src/</code> paths (not <code>../src/</code>)</li><li><strong>GitHub Actions</strong> clones main repository to <code>./belay-source/</code></li><li><strong>Same paths work</strong> for both local symlink and CI clone</li></ul><h3 id="expected-output" tabindex="-1">Expected Output <a class="header-anchor" href="#expected-output" aria-label="Permalink to &quot;Expected Output&quot;">‚Äã</a></h3><p>Successful run should show:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>üîß Local VitePress build test script</span></span>
<span class="line"><span>üîó Creating belay-source symlink for local development...</span></span>
<span class="line"><span>üî® Building .NET projects for XML documentation...</span></span>
<span class="line"><span>‚úÖ Generated 442 API documentation files</span></span>
<span class="line"><span>‚úÖ VitePress output validation passed</span></span>
<span class="line"><span>‚úÖ Local build completed successfully!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="prerequisites-and-setup" tabindex="-1">Prerequisites and Setup <a class="header-anchor" href="#prerequisites-and-setup" aria-label="Permalink to &quot;Prerequisites and Setup&quot;">‚Äã</a></h3><h4 id="required-tools" tabindex="-1">Required Tools: <a class="header-anchor" href="#required-tools" aria-label="Permalink to &quot;Required Tools:&quot;">‚Äã</a></h4><ul><li><strong>Node.js 18+</strong>: For VitePress (<code>node --version</code>)</li><li><strong>.NET 8 SDK</strong>: For building source projects (<code>dotnet --version</code>)</li><li><strong>DocFX 2.78.3</strong>: Auto-downloaded by script to <code>/tmp/docfx/</code></li></ul><h4 id="first-time-setup" tabindex="-1">First-Time Setup: <a class="header-anchor" href="#first-time-setup" aria-label="Permalink to &quot;First-Time Setup:&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install Node.js dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set up local development environment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/setup-local-dev.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Test the build pipeline</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/tmp/docfx:$PATH  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># May be needed for DocFX</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/local-build.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="docfx-installation-manual" tabindex="-1">DocFX Installation (Manual): <a class="header-anchor" href="#docfx-installation-manual" aria-label="Permalink to &quot;DocFX Installation (Manual):&quot;">‚Äã</a></h4><p>If the script fails to find DocFX, install manually:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Download and install DocFX</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/dotnet/docfx/releases/download/v2.78.3/docfx-linux-x64-v2.78.3.zip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docfx-linux-x64-v2.78.3.zip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/docfx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/docfx/docfx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/tmp/docfx:$PATH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Verify installation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docfx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="api-documentation-pipeline" tabindex="-1">API Documentation Pipeline <a class="header-anchor" href="#api-documentation-pipeline" aria-label="Permalink to &quot;API Documentation Pipeline&quot;">‚Äã</a></h2><p>The documentation website includes auto-generated API documentation through this pipeline:</p><ol><li><strong>Source Build</strong>: Build Belay.NET projects to generate XML documentation</li><li><strong>DocFX Native Markdown</strong>: Generate markdown directly from XML comments using DocFX <code>--outputFormat markdown</code></li><li><strong>VitePress Build</strong>: Generate the final static website</li></ol><h3 id="key-files" tabindex="-1">Key Files <a class="header-anchor" href="#key-files" aria-label="Permalink to &quot;Key Files&quot;">‚Äã</a></h3><ul><li><code>docfx.json</code>: DocFX configuration for API documentation generation</li><li><code>.github/workflows/deploy.yml</code>: CI/CD pipeline that builds and deploys the website</li></ul><h3 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">‚Äã</a></h3><h4 id="missing-api-documentation" tabindex="-1">Missing API Documentation <a class="header-anchor" href="#missing-api-documentation" aria-label="Permalink to &quot;Missing API Documentation&quot;">‚Äã</a></h4><p><strong>Symptom</strong>: API pages show minimal content <strong>Cause</strong>: DocFX configuration issues with native markdown output <strong>Fix</strong>: Ensure <code>outputFormat: &quot;markdown&quot;</code>, <code>memberLayout: &quot;separatePages&quot;</code> in <code>docfx.json</code></p><h4 id="build-artifacts-in-git" tabindex="-1">Build Artifacts in Git <a class="header-anchor" href="#build-artifacts-in-git" aria-label="Permalink to &quot;Build Artifacts in Git&quot;">‚Äã</a></h4><p><strong>Symptom</strong>: Large commits with generated files <strong>Fix</strong>: The <code>.vitepress/dist/</code> directory should not be committed - it contains build artifacts</p><h3 id="testing-changes" tabindex="-1">Testing Changes <a class="header-anchor" href="#testing-changes" aria-label="Permalink to &quot;Testing Changes&quot;">‚Äã</a></h3><ol><li><strong>MANDATORY</strong>: Run <code>./scripts/local-build.sh</code> - NO EXCEPTIONS</li><li><strong>Validate generation</strong>: Ensure 442+ API files are created</li><li><strong>Verify VitePress build</strong>: Script will fail if website build breaks</li><li><strong>Check output</strong>: Review script output for any warnings or issues</li></ol><h3 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">‚Äã</a></h3><h4 id="common-issues-1" tabindex="-1">Common Issues: <a class="header-anchor" href="#common-issues-1" aria-label="Permalink to &quot;Common Issues:&quot;">‚Äã</a></h4><p><strong>DocFX not found:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/tmp/docfx:$PATH</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/local-build.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>belay-source missing:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/setup-local-dev.sh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Creates symlink</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>Node modules missing:</strong></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ci</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Install dependencies</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>VitePress build fails:</strong></p><ul><li>Check for malformed markdown in generated files</li><li>Verify all internal links are valid</li><li>Review console output for specific errors</li></ul><h3 id="mandatory-development-workflow" tabindex="-1">MANDATORY Development Workflow <a class="header-anchor" href="#mandatory-development-workflow" aria-label="Permalink to &quot;MANDATORY Development Workflow&quot;">‚Äã</a></h3><p><strong>‚ö†Ô∏è ZERO-TOLERANCE POLICY</strong>: Local build testing is MANDATORY for every commit. Any commit that breaks CI due to skipped local testing is a process violation.</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. Make any changes to documentation</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docfx.json</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # or any other files</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. MANDATORY: Test locally BEFORE committing - NO EXCEPTIONS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/tmp/docfx:$PATH  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ensure DocFX is available</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./scripts/local-build.sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. ONLY proceed if local build passes completely</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$?</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -eq</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;‚úÖ Local build passed - safe to commit&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Update documentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;‚ùå FIX LOCAL BUILD ISSUES BEFORE COMMITTING&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;‚ùå DO NOT COMMIT until ./scripts/local-build.sh succeeds&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. Monitor CI (should succeed if local build passed)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --limit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="critical-success-criteria" tabindex="-1">Critical Success Criteria: <a class="header-anchor" href="#critical-success-criteria" aria-label="Permalink to &quot;Critical Success Criteria:&quot;">‚Äã</a></h4><ul><li>‚úÖ <strong>442+ API files generated</strong> (DocFX working)</li><li>‚úÖ <strong>VitePress build completes</strong> (No syntax errors)</li><li>‚úÖ <strong>No build script errors</strong> (All validations pass)</li></ul><h4 id="enforcement" tabindex="-1">Enforcement: <a class="header-anchor" href="#enforcement" aria-label="Permalink to &quot;Enforcement:&quot;">‚Äã</a></h4><p>The local build script catches 99% of issues before they reach CI. This prevents:</p><ul><li>‚ùå Broken documentation website deployments</li><li>‚ùå CI failures that waste time and resources</li><li>‚ùå Broken links or malformed documentation pages</li></ul><p><strong>REMEMBER</strong>: Better to spend time on proper validation than fix broken deployments.</p>`,55)]))}const k=i(l,[["render",t]]);export{u as __pageData,k as default};
