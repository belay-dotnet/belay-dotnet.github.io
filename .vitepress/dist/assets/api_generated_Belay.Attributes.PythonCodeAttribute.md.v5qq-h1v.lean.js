import{_ as i,C as n,c as m,o as l,ag as o,j as e,a as r,G as a}from"./chunks/framework.CUqMdM43.js";const g=JSON.parse('{"title":"Class PythonCodeAttribute","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Attributes.PythonCodeAttribute.md","filePath":"api/generated/Belay.Attributes.PythonCodeAttribute.md"}'),b={name:"api/generated/Belay.Attributes.PythonCodeAttribute.md"};function u(y,t,c,p,d,f){const s=n("xref");return l(),m("div",null,[t[6]||(t[6]=o("",14)),e("p",null,[t[0]||(t[0]=r(" The ",-1)),a(s,{href:"Belay.Attributes.PythonCodeAttribute","data-throw-if-not-resolved":"false"}),t[1]||(t[1]=r(" enables direct embedding of Python code that will be executed on the connected MicroPython device. This is useful for simple operations that don't require complex C# logic. ",-1))]),t[7]||(t[7]=e("p",null," The Python code can include parameter placeholders using C# string interpolation syntax (e.g., {parameterName}) that will be replaced with actual parameter values at runtime. ",-1)),t[8]||(t[8]=e("h2",{id:"constructors",tabindex:"-1"},[r("Constructors "),e("a",{class:"header-anchor",href:"#constructors","aria-label":'Permalink to "Constructors"'},"â€‹")],-1)),t[9]||(t[9]=e("p",null,[e("a",{href:"./Belay.Attributes.PythonCodeAttribute.-ctor.html#Belay_Attributes_PythonCodeAttribute__ctor_System_String_"},"PythonCodeAttribute(string)")],-1)),e("p",null,[t[2]||(t[2]=r("Initializes a new instance of the ",-1)),a(s,{href:"Belay.Attributes.PythonCodeAttribute","data-throw-if-not-resolved":"false"}),t[3]||(t[3]=r(" class.",-1))]),t[10]||(t[10]=o("",7)),e("p",null,[t[4]||(t[4]=r("Returns a string that represents the current ",-1)),a(s,{href:"Belay.Attributes.PythonCodeAttribute","data-throw-if-not-resolved":"false"}),t[5]||(t[5]=r(".",-1))])])}const A=i(b,[["render",u]]);export{g as __pageData,A as default};
