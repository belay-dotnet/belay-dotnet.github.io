import{_ as t,c as a,o as i,ag as r}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Property Critical","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Attributes.SetupAttribute.Critical.md","filePath":"api/generated/Belay.Attributes.SetupAttribute.Critical.md"}'),l={name:"api/generated/Belay.Attributes.SetupAttribute.Critical.md"};function s(n,e,o,c,p,u){return i(),a("div",null,e[0]||(e[0]=[r(`<h1 id="property-critical" tabindex="-1"><a id="Belay_Attributes_SetupAttribute_Critical"></a> Property Critical <a class="header-anchor" href="#property-critical" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Attributes_SetupAttribute_Critical&quot;&gt;&lt;/a&gt; Property Critical&quot;">​</a></h1><p>Namespace: <a href="./Belay.Attributes.html">Belay.Attributes</a><br> Assembly: Belay.Attributes.dll</p><h2 id="critical" tabindex="-1"><a id="Belay_Attributes_SetupAttribute_Critical"></a> Critical <a class="header-anchor" href="#critical" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Attributes_SetupAttribute_Critical&quot;&gt;&lt;/a&gt; Critical&quot;">​</a></h2><p>Gets or sets a value indicating whether gets or sets whether setup failure should be treated as a critical error. When true, setup failure will cause device connection to fail completely. When false, setup failure will be logged but connection will proceed.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Critical { get; set; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><pre><code class="lang-csharp">public class IoTDevice : Device
{
    [Setup(Critical = true)]
    private async Task InitializeCore()
    {
        // Essential initialization - must succeed
        await ExecuteAsync(&quot;initialize_core_systems()&quot;);
    }

    [Setup(Critical = false)]
    private async Task LoadOptionalConfig()
    {
        // Optional configuration - can fail gracefully
        await ExecuteAsync(&quot;load_user_preferences()&quot;);
    }
}</code></pre><h3 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h3><p> Set Critical to false for optional setup operations that should not prevent device usage if they fail, such as loading optional configuration or initializing non-essential peripherals. </p><p> Critical setup methods that fail will prevent the device from being marked as connected, and subsequent setup methods will not execute. </p>`,12)]))}const b=t(l,[["render",s]]);export{h as __pageData,b as default};
