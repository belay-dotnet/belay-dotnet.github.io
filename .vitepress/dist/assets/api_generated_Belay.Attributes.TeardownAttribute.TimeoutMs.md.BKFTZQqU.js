import{_ as t,c as a,o as r,ag as s}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Property TimeoutMs","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Attributes.TeardownAttribute.TimeoutMs.md","filePath":"api/generated/Belay.Attributes.TeardownAttribute.TimeoutMs.md"}'),i={name:"api/generated/Belay.Attributes.TeardownAttribute.TimeoutMs.md"};function o(n,e,l,u,p,d){return r(),a("div",null,e[0]||(e[0]=[s(`<h1 id="property-timeoutms" tabindex="-1"><a id="Belay_Attributes_TeardownAttribute_TimeoutMs"></a> Property TimeoutMs <a class="header-anchor" href="#property-timeoutms" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Attributes_TeardownAttribute_TimeoutMs&quot;&gt;&lt;/a&gt; Property TimeoutMs&quot;">​</a></h1><p>Namespace: <a href="./Belay.Attributes.html">Belay.Attributes</a><br> Assembly: Belay.Attributes.dll</p><h2 id="timeoutms" tabindex="-1"><a id="Belay_Attributes_TeardownAttribute_TimeoutMs"></a> TimeoutMs <a class="header-anchor" href="#timeoutms" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Attributes_TeardownAttribute_TimeoutMs&quot;&gt;&lt;/a&gt; TimeoutMs&quot;">​</a></h2><p>Gets or sets the timeout for teardown method execution in milliseconds. Teardown operations have limited time to complete before forcible disconnection.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimeoutMs { get; set; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a>?</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><pre><code class="lang-csharp">[Teardown(TimeoutMs = 5000)] // 5 seconds for data save
private async Task SaveLargeDatasetAsync()
{
    await ExecuteAsync(@&quot;
        # Save large dataset with progress indication
        if &#39;large_dataset&#39; in globals():
            print(&#39;Saving large dataset...&#39;)
            save_dataset_to_flash(large_dataset)
            print(&#39;Dataset saved successfully&#39;)
    &quot;);
}

[Teardown] // Use default timeout for quick operations
private async Task QuickCleanupAsync()
{
    await ExecuteAsync(&quot;quick_cleanup()&quot;);
}</code></pre><h3 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h3><p> Teardown operations should complete quickly to avoid delaying disconnection. The default timeout is typically much shorter than normal operation timeouts to ensure responsive disconnection behavior. </p><p> Use custom timeouts sparingly and only for operations that genuinely need more time, such as saving large amounts of data or performing complex hardware shutdown sequences. </p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noreferrer">ArgumentOutOfRangeException</a></p><p>Thrown when setting a timeout value that is less than or equal to zero.</p>`,15)]))}const h=t(i,[["render",o]]);export{m as __pageData,h as default};
