import{_ as a,c as t,o as r,ag as i}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Enum ThreadPriority","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Attributes.ThreadPriority.md","filePath":"api/generated/Belay.Attributes.ThreadPriority.md"}'),s={name:"api/generated/Belay.Attributes.ThreadPriority.md"};function o(d,e,n,l,p,h){return r(),t("div",null,e[0]||(e[0]=[i('<h1 id="enum-threadpriority" tabindex="-1"><a id="Belay_Attributes_ThreadPriority"></a> Enum ThreadPriority <a class="header-anchor" href="#enum-threadpriority" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Attributes_ThreadPriority&quot;&gt;&lt;/a&gt; Enum ThreadPriority&quot;">​</a></h1><p>Namespace: <a href="./Belay.Attributes.html">Belay.Attributes</a><br> Assembly: Belay.Attributes.dll</p><p>Defines the priority levels for thread execution.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThreadPriority</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p><code>High = 2</code></p><p>High priority thread for time-critical operations.</p><p><code>Low = 0</code></p><p>Low priority thread for background tasks.</p><p><code>Normal = 1</code></p><p>Normal priority thread for standard operations.</p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>Thread priority is a hint to the scheduler and may not be supported on all MicroPython platforms. Actual scheduling behavior depends on the underlying platform and available threading implementation.</p>',13)]))}const m=a(s,[["render",o]]);export{u as __pageData,m as default};
