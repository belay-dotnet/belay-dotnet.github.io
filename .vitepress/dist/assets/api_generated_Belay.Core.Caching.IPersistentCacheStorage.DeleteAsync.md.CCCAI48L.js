import{_ as i,C as a,c as l,o,ag as h,G as t,w as c,a as s}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Method DeleteAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Caching.IPersistentCacheStorage.DeleteAsync.md","filePath":"api/generated/Belay.Core.Caching.IPersistentCacheStorage.DeleteAsync.md"}'),d={name:"api/generated/Belay.Core.Caching.IPersistentCacheStorage.DeleteAsync.md"};function p(_,e,k,g,y,m){const n=a("xref"),r=a("placeholder");return o(),l("div",null,[e[2]||(e[2]=h('<h1 id="method-deleteasync" tabindex="-1"><a id="Belay_Core_Caching_IPersistentCacheStorage_DeleteAsync_System_String_System_Threading_CancellationToken_"></a> Method DeleteAsync <a class="header-anchor" href="#method-deleteasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Caching_IPersistentCacheStorage_DeleteAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method DeleteAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Caching.html">Belay.Core.Caching</a><br> Assembly: Belay.Core.dll</p><h2 id="deleteasync-string-cancellationtoken" tabindex="-1"><a id="Belay_Core_Caching_IPersistentCacheStorage_DeleteAsync_System_String_System_Threading_CancellationToken_"></a> DeleteAsync(string, CancellationToken) <a class="header-anchor" href="#deleteasync-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Caching_IPersistentCacheStorage_DeleteAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; DeleteAsync\\(string, CancellationToken\\)&quot;">​</a></h2><p>Removes a specific entry from persistent storage.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeleteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>key</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The cache key to remove.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token for the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',12)),t(r,null,{default:c(()=>[e[0]||(e[0]=s("A ",-1)),t(n,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=s(" representing the asynchronous operation.",-1))]),_:1,__:[0,1]})])}const f=i(d,[["render",p]]);export{u as __pageData,f as default};
