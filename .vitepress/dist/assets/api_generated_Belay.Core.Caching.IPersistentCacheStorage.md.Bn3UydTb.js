import{_ as a,c as t,o as s,ag as r}from"./chunks/framework.CUqMdM43.js";const g=JSON.parse('{"title":"Interface IPersistentCacheStorage","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Caching.IPersistentCacheStorage.md","filePath":"api/generated/Belay.Core.Caching.IPersistentCacheStorage.md"}'),n={name:"api/generated/Belay.Core.Caching.IPersistentCacheStorage.md"};function i(l,e,o,c,h,_){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="interface-ipersistentcachestorage" tabindex="-1"><a id="Belay_Core_Caching_IPersistentCacheStorage"></a> Interface IPersistentCacheStorage <a class="header-anchor" href="#interface-ipersistentcachestorage" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Caching_IPersistentCacheStorage&quot;&gt;&lt;/a&gt; Interface IPersistentCacheStorage&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Caching.html">Belay.Core.Caching</a><br> Assembly: Belay.Core.dll</p><p>Defines an interface for persistent cache storage in Belay.NET.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IPersistentCacheStorage</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p>This is a placeholder interface for future persistent cache storage implementations. Future implementations may include file-system, database, or distributed cache backends.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Caching.IPersistentCacheStorage.ClearAllAsync.html#Belay_Core_Caching_IPersistentCacheStorage_ClearAllAsync_System_Threading_CancellationToken_">ClearAllAsync(CancellationToken)</a></p><p>Clears all entries from persistent storage.</p><p><a href="./Belay.Core.Caching.IPersistentCacheStorage.DeleteAsync.html#Belay_Core_Caching_IPersistentCacheStorage_DeleteAsync_System_String_System_Threading_CancellationToken_">DeleteAsync(string, CancellationToken)</a></p><p>Removes a specific entry from persistent storage.</p><p><a href="./Belay.Core.Caching.IPersistentCacheStorage.ReadAsync.html#Belay_Core_Caching_IPersistentCacheStorage_ReadAsync__1_System_String_System_Threading_CancellationToken_">ReadAsync&lt;T&gt;(string, CancellationToken)</a></p><p>Reads a cached value from persistent storage.</p><p><a href="./Belay.Core.Caching.IPersistentCacheStorage.WriteAsync.html#Belay_Core_Caching_IPersistentCacheStorage_WriteAsync__1_System_String___0_System_Nullable_System_TimeSpan__System_Threading_CancellationToken_">WriteAsync&lt;T&gt;(string, T, TimeSpan?, CancellationToken)</a></p><p>Writes a value to persistent storage.</p>',15)]))}const C=a(n,[["render",i]]);export{g as __pageData,C as default};
