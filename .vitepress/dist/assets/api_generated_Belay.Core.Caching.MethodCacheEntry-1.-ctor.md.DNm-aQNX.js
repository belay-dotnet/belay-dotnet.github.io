import{_ as s,C as i,c as n,o,ag as a,j as h,a as t,G as l}from"./chunks/framework.CUqMdM43.js";const g=JSON.parse('{"title":"Constructor MethodCacheEntry","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Caching.MethodCacheEntry-1.-ctor.md","filePath":"api/generated/Belay.Core.Caching.MethodCacheEntry-1.-ctor.md"}'),_={name:"api/generated/Belay.Core.Caching.MethodCacheEntry-1.-ctor.md"};function c(d,e,p,m,C,y){const r=i("xref");return o(),n("div",null,[e[2]||(e[2]=a('<h1 id="constructor-methodcacheentry" tabindex="-1"><a id="Belay_Core_Caching_MethodCacheEntry_1__ctor__0_System_Nullable_System_TimeSpan__"></a> Constructor MethodCacheEntry <a class="header-anchor" href="#constructor-methodcacheentry" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Caching_MethodCacheEntry_1__ctor__0_System_Nullable_System_TimeSpan__&quot;&gt;&lt;/a&gt; Constructor MethodCacheEntry&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Caching.html">Belay.Core.Caching</a><br> Assembly: Belay.Core.dll</p><h2 id="methodcacheentry-t-timespan" tabindex="-1"><a id="Belay_Core_Caching_MethodCacheEntry_1__ctor__0_System_Nullable_System_TimeSpan__"></a> MethodCacheEntry(T, TimeSpan?) <a class="header-anchor" href="#methodcacheentry-t-timespan" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Caching_MethodCacheEntry_1__ctor__0_System_Nullable_System_TimeSpan__&quot;&gt;&lt;/a&gt; MethodCacheEntry\\(T, TimeSpan?\\)&quot;">​</a></h2>',3)),h("p",null,[e[0]||(e[0]=t("Initializes a new instance of the ",-1)),l(r,{href:"Belay.Core.Caching.MethodCacheEntry%601","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(" class. Creates a new cache entry with the specified value and expiration policy.",-1))]),e[3]||(e[3]=a('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MethodCacheEntry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(T value, TimeSpan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> expiresAfter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>value</code> T</p><p>The cached value.</p><p><code>expiresAfter</code> <a href="https://learn.microsoft.com/dotnet/api/system.timespan" target="_blank" rel="noreferrer">TimeSpan</a>?</p><p>Optional time-to-live duration.</p>',6))])}const k=s(_,[["render",c]]);export{g as __pageData,k as default};
