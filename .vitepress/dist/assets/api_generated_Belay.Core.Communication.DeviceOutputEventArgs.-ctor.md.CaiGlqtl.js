import{_ as t,c as a,o as i,ag as s}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Constructor DeviceOutputEventArgs","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DeviceOutputEventArgs.-ctor.md","filePath":"api/generated/Belay.Core.Communication.DeviceOutputEventArgs.-ctor.md"}'),r={name:"api/generated/Belay.Core.Communication.DeviceOutputEventArgs.-ctor.md"};function o(n,e,l,p,c,u){return i(),a("div",null,e[0]||(e[0]=[s('<h1 id="constructor-deviceoutputeventargs" tabindex="-1"><a id="Belay_Core_Communication_DeviceOutputEventArgs__ctor_System_String_System_Boolean_"></a> Constructor DeviceOutputEventArgs <a class="header-anchor" href="#constructor-deviceoutputeventargs" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DeviceOutputEventArgs__ctor_System_String_System_Boolean_&quot;&gt;&lt;/a&gt; Constructor DeviceOutputEventArgs&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="deviceoutputeventargs-string-bool" tabindex="-1"><a id="Belay_Core_Communication_DeviceOutputEventArgs__ctor_System_String_System_Boolean_"></a> DeviceOutputEventArgs(string, bool) <a class="header-anchor" href="#deviceoutputeventargs-string-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DeviceOutputEventArgs__ctor_System_String_System_Boolean_&quot;&gt;&lt;/a&gt; DeviceOutputEventArgs\\(string, bool\\)&quot;">​</a></h2><p>Represents the output received from a device.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceOutputEventArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> output, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> isError </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>output</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p><code>isError</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p>',8)]))}const h=t(r,[["render",o]]);export{d as __pageData,h as default};
