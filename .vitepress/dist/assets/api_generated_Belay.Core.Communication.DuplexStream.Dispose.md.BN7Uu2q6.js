import{_ as t,C as i,c as r,o as n,ag as a,j as l,a as s,G as p}from"./chunks/framework.CUqMdM43.js";const y=JSON.parse('{"title":"Method Dispose","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DuplexStream.Dispose.md","filePath":"api/generated/Belay.Core.Communication.DuplexStream.Dispose.md"}'),d={name:"api/generated/Belay.Core.Communication.DuplexStream.Dispose.md"};function m(h,e,_,u,c,g){const o=i("xref");return n(),r("div",null,[e[2]||(e[2]=a('<h1 id="method-dispose" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Dispose_System_Boolean_"></a> Method Dispose <a class="header-anchor" href="#method-dispose" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Dispose_System_Boolean_&quot;&gt;&lt;/a&gt; Method Dispose&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="dispose-bool" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Dispose_System_Boolean_"></a> Dispose(bool) <a class="header-anchor" href="#dispose-bool" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Dispose_System_Boolean_&quot;&gt;&lt;/a&gt; Dispose\\(bool\\)&quot;">​</a></h2>',3)),l("p",null,[e[0]||(e[0]=s("Releases the unmanaged resources used by the ",-1)),p(o,{href:"System.IO.Stream","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=s(" and optionally releases the managed resources.",-1))]),e[3]||(e[3]=a('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> disposing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>disposing</code> <a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p><a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> to release both managed and unmanaged resources; <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> to release only unmanaged resources.</p>',4))])}const b=t(d,[["render",m]]);export{y as __pageData,b as default};
