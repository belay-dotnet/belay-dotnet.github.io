import{_ as s,C as o,c as i,o as r,ag as a,j as l,a as t,G as h}from"./chunks/framework.CUqMdM43.js";const C=JSON.parse('{"title":"Method FlushAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DuplexStream.FlushAsync.md","filePath":"api/generated/Belay.Core.Communication.DuplexStream.FlushAsync.md"}'),c={name:"api/generated/Belay.Core.Communication.DuplexStream.FlushAsync.md"};function p(d,e,u,m,_,k){const n=o("xref");return r(),i("div",null,[e[2]||(e[2]=a('<h1 id="method-flushasync" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_FlushAsync_System_Threading_CancellationToken_"></a> Method FlushAsync <a class="header-anchor" href="#method-flushasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_FlushAsync_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method FlushAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="flushasync-cancellationtoken" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_FlushAsync_System_Threading_CancellationToken_"></a> FlushAsync(CancellationToken) <a class="header-anchor" href="#flushasync-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_FlushAsync_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; FlushAsync\\(CancellationToken\\)&quot;">​</a></h2><p>Asynchronously clears all buffers for this stream, causes any buffered data to be written to the underlying device, and monitors cancellation requests.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlushAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p>',7)),l("p",null,[e[0]||(e[0]=t("The token to monitor for cancellation requests. The default value is ",-1)),h(n,{href:"System.Threading.CancellationToken.None","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(".",-1))]),e[3]||(e[3]=a('<h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task that represents the asynchronous flush operation.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noreferrer">ObjectDisposedException</a></p><p>The stream has been disposed.</p>',6))])}const f=s(c,[["render",p]]);export{C as __pageData,f as default};
