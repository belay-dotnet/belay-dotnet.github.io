import{_ as t,c as a,o as r,ag as s}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method Read","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DuplexStream.Read.md","filePath":"api/generated/Belay.Core.Communication.DuplexStream.Read.md"}'),n={name:"api/generated/Belay.Core.Communication.DuplexStream.Read.md"};function o(i,e,p,l,d,c){return r(),a("div",null,e[0]||(e[0]=[s('<h1 id="method-read" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Read_System_Byte___System_Int32_System_Int32_"></a> Method Read <a class="header-anchor" href="#method-read" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Read_System_Byte___System_Int32_System_Int32_&quot;&gt;&lt;/a&gt; Method Read&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="read-byte-int-int" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Read_System_Byte___System_Int32_System_Int32_"></a> Read(byte[], int, int) <a class="header-anchor" href="#read-byte-int-int" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Read_System_Byte___System_Int32_System_Int32_&quot;&gt;&lt;/a&gt; Read\\(byte\\[\\], int, int\\)&quot;">​</a></h2><p>When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Read</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> count</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>buffer</code> <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>[]</p><p>An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <code class="paramref">offset</code> and (<code class="paramref">offset</code> + <code class="paramref">count</code> - 1) replaced by the bytes read from the current source.</p><p><code>offset</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>The zero-based byte offset in <code class="paramref">buffer</code> at which to begin storing the data read from the current stream.</p><p><code>count</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>The maximum number of bytes to be read from the current stream.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if <code class="paramref">count</code> is 0 or the end of the stream has been reached.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>The sum of <code class="paramref">offset</code> and <code class="paramref">count</code> is larger than the buffer length.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noreferrer">ArgumentNullException</a></p><p><code class="paramref">buffer</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception" target="_blank" rel="noreferrer">ArgumentOutOfRangeException</a></p><p><code class="paramref">offset</code> or <code class="paramref">count</code> is negative.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noreferrer">IOException</a></p><p>An I/O error occurs.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noreferrer">NotSupportedException</a></p><p>The stream does not support reading.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noreferrer">ObjectDisposedException</a></p><p>Methods were called after the stream was closed.</p>',28)]))}const f=t(n,[["render",o]]);export{m as __pageData,f as default};
