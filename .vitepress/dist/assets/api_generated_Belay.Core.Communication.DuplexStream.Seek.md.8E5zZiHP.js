import{_ as r,C as s,c as o,o as n,ag as t,j as p,a,G as l}from"./chunks/framework.CUqMdM43.js";const f=JSON.parse('{"title":"Method Seek","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DuplexStream.Seek.md","filePath":"api/generated/Belay.Core.Communication.DuplexStream.Seek.md"}'),h={name:"api/generated/Belay.Core.Communication.DuplexStream.Seek.md"};function d(m,e,c,k,_,u){const i=s("xref");return n(),o("div",null,[e[2]||(e[2]=t('<h1 id="method-seek" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Seek_System_Int64_System_IO_SeekOrigin_"></a> Method Seek <a class="header-anchor" href="#method-seek" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Seek_System_Int64_System_IO_SeekOrigin_&quot;&gt;&lt;/a&gt; Method Seek&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="seek-long-seekorigin" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_Seek_System_Int64_System_IO_SeekOrigin_"></a> Seek(long, SeekOrigin) <a class="header-anchor" href="#seek-long-seekorigin" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_Seek_System_Int64_System_IO_SeekOrigin_&quot;&gt;&lt;/a&gt; Seek\\(long, SeekOrigin\\)&quot;">​</a></h2><p>When overridden in a derived class, sets the position within the current stream.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> long</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Seek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> offset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SeekOrigin</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> origin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>offset</code> <a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a></p><p>A byte offset relative to the <code class="paramref">origin</code> parameter.</p><p><code>origin</code> <a href="https://learn.microsoft.com/dotnet/api/system.io.seekorigin" target="_blank" rel="noreferrer">SeekOrigin</a></p>',9)),p("p",null,[e[0]||(e[0]=a("A value of type ",-1)),l(i,{href:"System.IO.SeekOrigin","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" indicating the reference point used to obtain the new position.",-1))]),e[3]||(e[3]=t('<h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a></p><p>The new position within the current stream.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noreferrer">IOException</a></p><p>An I/O error occurs.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noreferrer">NotSupportedException</a></p><p>The stream does not support seeking, such as if the stream is constructed from a pipe or console output.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noreferrer">ObjectDisposedException</a></p><p>Methods were called after the stream was closed.</p>',10))])}const S=r(h,[["render",d]]);export{f as __pageData,S as default};
