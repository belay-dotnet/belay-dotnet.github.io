import{_ as t,c as a,o as n,ag as r}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method SetLength","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.DuplexStream.SetLength.md","filePath":"api/generated/Belay.Core.Communication.DuplexStream.SetLength.md"}'),s={name:"api/generated/Belay.Core.Communication.DuplexStream.SetLength.md"};function i(o,e,l,p,h,d){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="method-setlength" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_SetLength_System_Int64_"></a> Method SetLength <a class="header-anchor" href="#method-setlength" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_SetLength_System_Int64_&quot;&gt;&lt;/a&gt; Method SetLength&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="setlength-long" tabindex="-1"><a id="Belay_Core_Communication_DuplexStream_SetLength_System_Int64_"></a> SetLength(long) <a class="header-anchor" href="#setlength-long" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_DuplexStream_SetLength_System_Int64_&quot;&gt;&lt;/a&gt; SetLength\\(long\\)&quot;">​</a></h2><p>When overridden in a derived class, sets the length of the current stream.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetLength</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>value</code> <a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a></p><p>The desired length of the current stream in bytes.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noreferrer">IOException</a></p><p>An I/O error occurs.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.notsupportedexception" target="_blank" rel="noreferrer">NotSupportedException</a></p><p>The stream does not support both writing and seeking, such as if the stream is constructed from a pipe or console output.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noreferrer">ObjectDisposedException</a></p><p>Methods were called after the stream was closed.</p>',15)]))}const u=t(s,[["render",i]]);export{m as __pageData,u as default};
