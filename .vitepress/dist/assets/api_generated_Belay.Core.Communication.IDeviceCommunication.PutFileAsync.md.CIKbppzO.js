import{_ as i,C as n,c as s,o,ag as r,j as l,a,G as c}from"./chunks/framework.CUqMdM43.js";const g=JSON.parse('{"title":"Method PutFileAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.IDeviceCommunication.PutFileAsync.md","filePath":"api/generated/Belay.Core.Communication.IDeviceCommunication.PutFileAsync.md"}'),h={name:"api/generated/Belay.Core.Communication.IDeviceCommunication.PutFileAsync.md"};function p(m,e,d,k,_,u){const t=n("xref");return o(),s("div",null,[e[2]||(e[2]=r('<h1 id="method-putfileasync" tabindex="-1"><a id="Belay_Core_Communication_IDeviceCommunication_PutFileAsync_System_String_System_String_System_Threading_CancellationToken_"></a> Method PutFileAsync <a class="header-anchor" href="#method-putfileasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_IDeviceCommunication_PutFileAsync_System_String_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method PutFileAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="putfileasync-string-string-cancellationtoken" tabindex="-1"><a id="Belay_Core_Communication_IDeviceCommunication_PutFileAsync_System_String_System_String_System_Threading_CancellationToken_"></a> PutFileAsync(string, string, CancellationToken) <a class="header-anchor" href="#putfileasync-string-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_IDeviceCommunication_PutFileAsync_System_String_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; PutFileAsync\\(string, string, CancellationToken\\)&quot;">​</a></h2><p>Transfer a file from local system to device.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PutFileAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> localPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remotePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>localPath</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>Local file path.</p><p><code>remotePath</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>Remote file path on device.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',14)),l("p",null,[e[0]||(e[0]=a("A ",-1)),c(t,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" representing the asynchronous operation.",-1))])])}const C=i(h,[["render",p]]);export{g as __pageData,C as default};
