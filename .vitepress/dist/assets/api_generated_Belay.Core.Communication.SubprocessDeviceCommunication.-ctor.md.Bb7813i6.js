import{_ as o,C as a,c as n,o as r,ag as e,j as c,a as s,G as l}from"./chunks/framework.CUqMdM43.js";const C=JSON.parse('{"title":"Constructor SubprocessDeviceCommunication","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.SubprocessDeviceCommunication.-ctor.md","filePath":"api/generated/Belay.Core.Communication.SubprocessDeviceCommunication.-ctor.md"}'),p={name:"api/generated/Belay.Core.Communication.SubprocessDeviceCommunication.-ctor.md"};function m(u,i,_,h,g,d){const t=a("xref");return r(),n("div",null,[i[2]||(i[2]=e('<h1 id="constructor-subprocessdevicecommunication" tabindex="-1"><a id="Belay_Core_Communication_SubprocessDeviceCommunication__ctor_System_String_System_String___Microsoft_Extensions_Logging_ILogger_Belay_Core_Communication_SubprocessDeviceCommunication__"></a> Constructor SubprocessDeviceCommunication <a class="header-anchor" href="#constructor-subprocessdevicecommunication" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_SubprocessDeviceCommunication__ctor_System_String_System_String___Microsoft_Extensions_Logging_ILogger_Belay_Core_Communication_SubprocessDeviceCommunication__&quot;&gt;&lt;/a&gt; Constructor SubprocessDeviceCommunication&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Communication.html">Belay.Core.Communication</a><br> Assembly: Belay.Core.dll</p><h2 id="subprocessdevicecommunication-string-string-ilogger-subprocessdevicecommunication" tabindex="-1"><a id="Belay_Core_Communication_SubprocessDeviceCommunication__ctor_System_String_System_String___Microsoft_Extensions_Logging_ILogger_Belay_Core_Communication_SubprocessDeviceCommunication__"></a> SubprocessDeviceCommunication(string, string[]?, ILogger&lt;SubprocessDeviceCommunication&gt;?) <a class="header-anchor" href="#subprocessdevicecommunication-string-string-ilogger-subprocessdevicecommunication" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication_SubprocessDeviceCommunication__ctor_System_String_System_String___Microsoft_Extensions_Logging_ILogger_Belay_Core_Communication_SubprocessDeviceCommunication__&quot;&gt;&lt;/a&gt; SubprocessDeviceCommunication\\(string, string\\[\\]?, ILogger&lt;SubprocessDeviceCommunication\\&gt;?\\)&quot;">​</a></h2>',3)),c("p",null,[i[0]||(i[0]=s("Initializes a new instance of the ",-1)),l(t,{href:"Belay.Core.Communication.SubprocessDeviceCommunication","data-throw-if-not-resolved":"false"}),i[1]||(i[1]=s(" class.",-1))]),i[3]||(i[3]=e('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SubprocessDeviceCommunication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> micropythonExecutablePath </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;micropython&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> additionalArgs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ILogger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SubprocessDeviceCommunication</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>micropythonExecutablePath</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>Path to the MicroPython executable for subprocess communication.</p><p><code>additionalArgs</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>[]?</p><p>Additional command-line arguments to pass to MicroPython process.</p><p><code>logger</code> <a href="https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1" target="_blank" rel="noreferrer">ILogger</a>&lt;<a href="./Belay.Core.Communication.SubprocessDeviceCommunication.html">SubprocessDeviceCommunication</a>&gt;?</p><p>Optional logger for diagnostic output.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>Thrown when micropythonExecutablePath is null or empty.</p>',11))])}const y=o(p,[["render",m]]);export{C as __pageData,y as default};
