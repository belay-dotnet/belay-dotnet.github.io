import{_ as a,c as o,o as n,ag as i}from"./chunks/framework.CUqMdM43.js";const C=JSON.parse('{"title":"Namespace Belay.Core.Communication","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Communication.md","filePath":"api/generated/Belay.Core.Communication.md"}'),t={name:"api/generated/Belay.Core.Communication.md"};function c(r,e,m,p,s,l){return n(),o("div",null,e[0]||(e[0]=[i('<h1 id="namespace-belay-core-communication" tabindex="-1"><a id="Belay_Core_Communication"></a> Namespace Belay.Core.Communication <a class="header-anchor" href="#namespace-belay-core-communication" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Communication&quot;&gt;&lt;/a&gt; Namespace Belay.Core.Communication&quot;">​</a></h1><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><p><a href="./Belay.Core.Communication.DeviceConnectionException.html">DeviceConnectionException</a></p><p>Exception thrown when device connection fails.</p><p><a href="./Belay.Core.Communication.DeviceExecutionException.html">DeviceExecutionException</a></p><p>Exception thrown when device code execution fails.</p><p><a href="./Belay.Core.Communication.DeviceOutputEventArgs.html">DeviceOutputEventArgs</a></p><p>Represents the output received from a device.</p><p><a href="./Belay.Core.Communication.DeviceStateChangeEventArgs.html">DeviceStateChangeEventArgs</a></p><p>Represents a change in device connection state.</p><p><a href="./Belay.Core.Communication.DuplexStream.html">DuplexStream</a></p><p>Duplex stream implementation for combining stdin and stdout streams.</p><p><a href="./Belay.Core.Communication.ReconnectionPolicy.html">ReconnectionPolicy</a></p><p>Reconnection policy configuration for serial device communication.</p><p><a href="./Belay.Core.Communication.SerialDeviceCommunication.html">SerialDeviceCommunication</a></p><p>Serial/USB implementation of device communication for MicroPython devices.</p><p><a href="./Belay.Core.Communication.SubprocessDeviceCommunication.html">SubprocessDeviceCommunication</a></p><p>Subprocess-based device communication using MicroPython unix port for testing.</p><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><p><a href="./Belay.Core.Communication.IDeviceCommunication.html">IDeviceCommunication</a></p><p>Core interface for device communication implementations.</p><h3 id="enums" tabindex="-1">Enums <a class="header-anchor" href="#enums" aria-label="Permalink to &quot;Enums&quot;">​</a></h3><p><a href="./Belay.Core.Communication.DeviceConnectionState.html">DeviceConnectionState</a></p><p>Represents the connection state of a device.</p>',24)]))}const h=a(t,[["render",c]]);export{C as __pageData,h as default};
