import{_ as a,c as t,o as r,ag as o}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Property Executor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Device.Executor.md","filePath":"api/generated/Belay.Core.Device.Executor.md"}'),i={name:"api/generated/Belay.Core.Device.Executor.md"};function l(c,e,s,n,p,u){return r(),t("div",null,e[0]||(e[0]=[o('<h1 id="property-executor" tabindex="-1"><a id="Belay_Core_Device_Executor"></a> Property Executor <a class="header-anchor" href="#property-executor" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_Executor&quot;&gt;&lt;/a&gt; Property Executor&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="executor" tabindex="-1"><a id="Belay_Core_Device_Executor"></a> Executor <a class="header-anchor" href="#executor" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_Executor&quot;&gt;&lt;/a&gt; Executor&quot;">​</a></h2><p>Gets the direct executor that handles all attribute types via AttributeHandler.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DirectExecutor Executor { get; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h3><p><a href="./Belay.Core.DirectExecutor.html">DirectExecutor</a></p><h3 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h3><p>This unified executor replaces the complex hierarchy with a single implementation that handles [Task], [Setup], [Thread], and [Teardown] attributes using the AttributeHandler for policy enforcement and SimpleCache for caching.</p>',9)]))}const _=a(i,[["render",l]]);export{h as __pageData,_ as default};
