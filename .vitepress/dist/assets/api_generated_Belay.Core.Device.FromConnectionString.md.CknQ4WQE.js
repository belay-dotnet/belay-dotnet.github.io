import{_ as t,c as i,o as n,ag as r}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Method FromConnectionString","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Device.FromConnectionString.md","filePath":"api/generated/Belay.Core.Device.FromConnectionString.md"}'),o={name:"api/generated/Belay.Core.Device.FromConnectionString.md"};function a(s,e,c,l,g,p){return n(),i("div",null,e[0]||(e[0]=[r(`<h1 id="method-fromconnectionstring" tabindex="-1"><a id="Belay_Core_Device_FromConnectionString_System_String_Microsoft_Extensions_Logging_ILoggerFactory_"></a> Method FromConnectionString <a class="header-anchor" href="#method-fromconnectionstring" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_FromConnectionString_System_String_Microsoft_Extensions_Logging_ILoggerFactory_&quot;&gt;&lt;/a&gt; Method FromConnectionString&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="fromconnectionstring-string-iloggerfactory" tabindex="-1"><a id="Belay_Core_Device_FromConnectionString_System_String_Microsoft_Extensions_Logging_ILoggerFactory_"></a> FromConnectionString(string, ILoggerFactory?) <a class="header-anchor" href="#fromconnectionstring-string-iloggerfactory" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_FromConnectionString_System_String_Microsoft_Extensions_Logging_ILoggerFactory_&quot;&gt;&lt;/a&gt; FromConnectionString\\(string, ILoggerFactory?\\)&quot;">​</a></h2><p>Create a Device instance from a connection string.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Device</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FromConnectionString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> connectionString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ILoggerFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loggerFactory</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>connectionString</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>Connection string (e.g., &quot;serial:COM3&quot;, &quot;subprocess:micropython&quot;).</p><p><code>loggerFactory</code> <a href="https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggerfactory" target="_blank" rel="noreferrer">ILoggerFactory</a>?</p><p>Optional logger factory.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./Belay.Core.Device.html">Device</a></p><p>A configured Device instance.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><pre><code class="lang-csharp">// Connect to a device via serial port
var device = Device.FromConnectionString(&quot;serial:COM3&quot;);

// Connect to MicroPython subprocess for testing
var testDevice = Device.FromConnectionString(&quot;subprocess:micropython&quot;);

// With logging
var loggerFactory = LoggerFactory.Create(builder =&gt; builder.AddConsole());
var deviceWithLogging = Device.FromConnectionString(&quot;serial:/dev/ttyACM0&quot;, loggerFactory);</code></pre><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>Thrown when the connection string is invalid or unsupported.</p>`,18)]))}const m=t(o,[["render",a]]);export{d as __pageData,m as default};
