import{_ as a,c as t,o as r,ag as i}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Property State","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Device.State.md","filePath":"api/generated/Belay.Core.Device.State.md"}'),o={name:"api/generated/Belay.Core.Device.State.md"};function s(n,e,l,p,c,d){return r(),t("div",null,e[0]||(e[0]=[i(`<h1 id="property-state" tabindex="-1"><a id="Belay_Core_Device_State"></a> Property State <a class="header-anchor" href="#property-state" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_State&quot;&gt;&lt;/a&gt; Property State&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="state" tabindex="-1"><a id="Belay_Core_Device_State"></a> State <a class="header-anchor" href="#state" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Device_State&quot;&gt;&lt;/a&gt; State&quot;">​</a></h2><p>Gets the device state including capabilities, current operations, and connection status.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DeviceState State { get; }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="property-value" tabindex="-1">Property Value <a class="header-anchor" href="#property-value" aria-label="Permalink to &quot;Property Value&quot;">​</a></h3><p><a href="./Belay.Core.DeviceState.html">DeviceState</a></p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><pre><code class="lang-csharp">// Check if device supports GPIO
if (device.State.Capabilities?.SupportsFeature(SimpleDeviceFeatureSet.GPIO) == true)
{
    // Use GPIO functionality
}

// Monitor current operation
Console.WriteLine($&quot;Current operation: {device.State.CurrentOperation}&quot;);
Console.WriteLine($&quot;Last operation: {device.State.LastOperationTime}&quot;);</code></pre>`,9)]))}const _=a(o,[["render",s]]);export{h as __pageData,_ as default};
