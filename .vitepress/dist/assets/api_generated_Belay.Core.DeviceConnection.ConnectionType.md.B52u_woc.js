import{_ as n,c as i,o,ag as a}from"./chunks/framework.CUqMdM43.js";const C=JSON.parse('{"title":"Enum DeviceConnection.ConnectionType","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.DeviceConnection.ConnectionType.md","filePath":"api/generated/Belay.Core.DeviceConnection.ConnectionType.md"}'),t={name:"api/generated/Belay.Core.DeviceConnection.ConnectionType.md"};function c(s,e,p,r,l,d){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="enum-deviceconnection-connectiontype" tabindex="-1"><a id="Belay_Core_DeviceConnection_ConnectionType"></a> Enum DeviceConnection.ConnectionType <a class="header-anchor" href="#enum-deviceconnection-connectiontype" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_DeviceConnection_ConnectionType&quot;&gt;&lt;/a&gt; Enum DeviceConnection.ConnectionType&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><p>Connection types supported by this device connection.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.ConnectionType</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p><code>Serial = 0</code></p><p>Serial port connection (USB, UART, etc.).</p><p><code>Subprocess = 1</code></p><p>Subprocess connection (local MicroPython process).</p>',9)]))}const y=n(t,[["render",c]]);export{C as __pageData,y as default};
