import{_ as t,c as a,o as i,ag as n}from"./chunks/framework.CUqMdM43.js";const k=JSON.parse('{"title":"Method WriteFileAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.DeviceConnection.WriteFileAsync.md","filePath":"api/generated/Belay.Core.DeviceConnection.WriteFileAsync.md"}'),s={name:"api/generated/Belay.Core.DeviceConnection.WriteFileAsync.md"};function r(o,e,l,c,p,h){return i(),a("div",null,e[0]||(e[0]=[n('<h1 id="method-writefileasync" tabindex="-1"><a id="Belay_Core_DeviceConnection_WriteFileAsync_System_String_System_Byte___System_Threading_CancellationToken_"></a> Method WriteFileAsync <a class="header-anchor" href="#method-writefileasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_DeviceConnection_WriteFileAsync_System_String_System_Byte___System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method WriteFileAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="writefileasync-string-byte-cancellationtoken" tabindex="-1"><a id="Belay_Core_DeviceConnection_WriteFileAsync_System_String_System_Byte___System_Threading_CancellationToken_"></a> WriteFileAsync(string, byte[], CancellationToken) <a class="header-anchor" href="#writefileasync-string-byte-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_DeviceConnection_WriteFileAsync_System_String_System_Byte___System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; WriteFileAsync\\(string, byte\\[\\], CancellationToken\\)&quot;">​</a></h2><p>Writes data to a file on the device using adaptive chunked transfer. Automatically optimizes chunk size based on device communication performance. Based on official mpremote fs_writefile implementation with base64 encoding.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WriteFileAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remotePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>remotePath</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>Remote file path on device.</p><p><code>data</code> <a href="https://learn.microsoft.com/dotnet/api/system.byte" target="_blank" rel="noreferrer">byte</a>[]</p><p>Data to write.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>Thrown when remotePath is null, empty, or contains invalid characters.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noreferrer">ArgumentNullException</a></p><p>Thrown when data is null.</p><p><a href="./Belay.Core.DeviceException.html">DeviceException</a></p><p>Thrown when device communication fails or file operation fails.</p><p><a href="https://learn.microsoft.com/dotnet/api/system.operationcanceledexception" target="_blank" rel="noreferrer">OperationCanceledException</a></p><p>Thrown when the operation is canceled.</p>',23)]))}const _=t(s,[["render",r]]);export{k as __pageData,_ as default};
