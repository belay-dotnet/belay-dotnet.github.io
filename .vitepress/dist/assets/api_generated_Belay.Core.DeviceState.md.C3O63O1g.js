import{_ as t,c as a,o as r,ag as i}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Class DeviceState","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.DeviceState.md","filePath":"api/generated/Belay.Core.DeviceState.md"}'),o={name:"api/generated/Belay.Core.DeviceState.md"};function s(n,e,c,l,p,h){return r(),a("div",null,e[0]||(e[0]=[i(`<h1 id="class-devicestate" tabindex="-1"><a id="Belay_Core_DeviceState"></a> Class DeviceState <a class="header-anchor" href="#class-devicestate" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_DeviceState&quot;&gt;&lt;/a&gt; Class DeviceState&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><p>Simple state tracking for MicroPython device operations. Replaces complex session management with lightweight state tracking aligned with single-threaded MicroPython device constraints.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceState</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.DeviceState.html">DeviceState</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h2><p><strong>Basic Usage</strong></p><pre><code class="lang-csharp">using var device = Device.FromConnectionString(&quot;subprocess:micropython&quot;);
await device.ConnectAsync();

// Check device state
Console.WriteLine($&quot;Platform: {device.State.Capabilities?.Platform}&quot;);
Console.WriteLine($&quot;Features: {device.State.Capabilities?.SupportedFeatures}&quot;);
Console.WriteLine($&quot;Connection: {device.State.ConnectionState}&quot;);</code></pre><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p> This class provides minimal state tracking for MicroPython devices without the complexity of session management. It tracks basic device capabilities, current operations for debugging, and timing information for monitoring. </p><p> Unlike the previous session management system, this approach: <ul><li>Eliminates race conditions from concurrent session creation</li><li>Reduces memory overhead from session tracking</li><li>Provides direct device operations without session indirection</li><li>Aligns with single-threaded MicroPython device reality</li></ul></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.DeviceState.Capabilities.html#Belay_Core_DeviceState_Capabilities">Capabilities</a></p><p>Gets or sets the detected device capabilities.</p><p><a href="./Belay.Core.DeviceState.ConnectionState.html#Belay_Core_DeviceState_ConnectionState">ConnectionState</a></p><p>Gets the current connection state of the device.</p><p><a href="./Belay.Core.DeviceState.CurrentOperation.html#Belay_Core_DeviceState_CurrentOperation">CurrentOperation</a></p><p>Gets the name of the current operation being executed.</p><p><a href="./Belay.Core.DeviceState.LastOperationTime.html#Belay_Core_DeviceState_LastOperationTime">LastOperationTime</a></p><p>Gets the timestamp of the last completed operation.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.DeviceState.ClearExecutionHistory.html#Belay_Core_DeviceState_ClearExecutionHistory">ClearExecutionHistory()</a></p><p>Clears all execution history and operation tracking.</p><p><a href="./Belay.Core.DeviceState.CompleteOperation.html#Belay_Core_DeviceState_CompleteOperation">CompleteOperation()</a></p><p>Marks an operation as completed and updates timing information.</p><p><a href="./Belay.Core.DeviceState.SetCurrentOperation.html#Belay_Core_DeviceState_SetCurrentOperation_System_String_">SetCurrentOperation(string?)</a></p><p>Sets the current operation and updates internal tracking.</p><p><a href="./Belay.Core.DeviceState.ToString.html#Belay_Core_DeviceState_ToString">ToString()</a></p><p>Gets a summary of the current device state.</p>`,32)]))}const u=t(o,[["render",s]]);export{m as __pageData,u as default};
