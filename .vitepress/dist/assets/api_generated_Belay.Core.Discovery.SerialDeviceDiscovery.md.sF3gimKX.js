import{_ as i,c as r,o as a,ag as s}from"./chunks/framework.CUqMdM43.js";const D=JSON.parse('{"title":"Class SerialDeviceDiscovery","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Discovery.SerialDeviceDiscovery.md","filePath":"api/generated/Belay.Core.Discovery.SerialDeviceDiscovery.md"}'),o={name:"api/generated/Belay.Core.Discovery.SerialDeviceDiscovery.md"};function t(c,e,n,l,y,h){return a(),r("div",null,e[0]||(e[0]=[s('<h1 id="class-serialdevicediscovery" tabindex="-1"><a id="Belay_Core_Discovery_SerialDeviceDiscovery"></a> Class SerialDeviceDiscovery <a class="header-anchor" href="#class-serialdevicediscovery" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Discovery_SerialDeviceDiscovery&quot;&gt;&lt;/a&gt; Class SerialDeviceDiscovery&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Discovery.html">Belay.Core.Discovery</a><br> Assembly: Belay.Core.dll</p><p>Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SerialDeviceDiscovery</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Discovery.SerialDeviceDiscovery.html">SerialDeviceDiscovery</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.DiscoverDevicesAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_DiscoverDevicesAsync_System_Func_Belay_Core_Discovery_DeviceInfo_System_Boolean__System_Threading_CancellationToken_">DiscoverDevicesAsync(Func&lt;DeviceInfo, bool&gt;, CancellationToken)</a></p><p>Discover MicroPython devices matching specific criteria.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.DiscoverMicroPythonDevicesAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_DiscoverMicroPythonDevicesAsync_System_Threading_CancellationToken_">DiscoverMicroPythonDevicesAsync(CancellationToken)</a></p><p>Discover all MicroPython devices connected to the system.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.FindBestDeviceAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_FindBestDeviceAsync_System_Threading_CancellationToken_">FindBestDeviceAsync(CancellationToken)</a></p><p>Find the best MicroPython device automatically.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.FindCircuitPythonDevicesAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_FindCircuitPythonDevicesAsync_System_Threading_CancellationToken_">FindCircuitPythonDevicesAsync(CancellationToken)</a></p><p>Find devices running CircuitPython.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.FindDevicesOnPlatformAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_FindDevicesOnPlatformAsync_System_String_System_Threading_CancellationToken_">FindDevicesOnPlatformAsync(string, CancellationToken)</a></p><p>Find devices on a specific platform.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.FindMicroPythonDevicesAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_FindMicroPythonDevicesAsync_System_Threading_CancellationToken_">FindMicroPythonDevicesAsync(CancellationToken)</a></p><p>Find devices running MicroPython.</p><p><a href="./Belay.Core.Discovery.SerialDeviceDiscovery.ProbePortAsync.html#Belay_Core_Discovery_SerialDeviceDiscovery_ProbePortAsync_System_String_System_Threading_CancellationToken_">ProbePortAsync(string, CancellationToken)</a></p><p>Check if a specific port has a MicroPython device.</p>',23)]))}const _=i(o,[["render",t]]);export{D as __pageData,_ as default};
