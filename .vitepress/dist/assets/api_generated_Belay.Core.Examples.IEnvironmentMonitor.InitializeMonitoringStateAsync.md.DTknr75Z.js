import{_ as l,C as s,c as r,o as h,ag as p,G as a,w as k,a as t}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method InitializeMonitoringStateAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Examples.IEnvironmentMonitor.InitializeMonitoringStateAsync.md","filePath":"api/generated/Belay.Core.Examples.IEnvironmentMonitor.InitializeMonitoringStateAsync.md"}'),o={name:"api/generated/Belay.Core.Examples.IEnvironmentMonitor.InitializeMonitoringStateAsync.md"};function d(F,i,g,y,C,E){const n=s("xref"),e=s("placeholder");return h(),r("div",null,[i[2]||(i[2]=p(`<h1 id="method-initializemonitoringstateasync" tabindex="-1"><a id="Belay_Core_Examples_IEnvironmentMonitor_InitializeMonitoringStateAsync"></a> Method InitializeMonitoringStateAsync <a class="header-anchor" href="#method-initializemonitoringstateasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_IEnvironmentMonitor_InitializeMonitoringStateAsync&quot;&gt;&lt;/a&gt; Method InitializeMonitoringStateAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Examples.html">Belay.Core.Examples</a><br> Assembly: Belay.Core.dll</p><h2 id="initializemonitoringstateasync" tabindex="-1"><a id="Belay_Core_Examples_IEnvironmentMonitor_InitializeMonitoringStateAsync"></a> InitializeMonitoringStateAsync() <a class="header-anchor" href="#initializemonitoringstateasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_IEnvironmentMonitor_InitializeMonitoringStateAsync&quot;&gt;&lt;/a&gt; InitializeMonitoringStateAsync\\(\\)&quot;">​</a></h2><p>Initialize global monitoring state and data structures. This runs last in the setup sequence.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Critical</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PythonCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        # Global monitoring state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        monitoring_active = False</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        data_buffer = []</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        alert_thresholds = {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;max_temp&#39;: 35.0,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;min_temp&#39;: 0.0,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;max_humidity&#39;: 90.0,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &#39;min_light&#39;: 10</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        # Statistics tracking</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        reading_count = 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        error_count = 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        last_reading_time = 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        \\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        print(&#39;Monitoring state initialized&#39;)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitializeMonitoringStateAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>`,7)),a(e,null,{default:k(()=>[i[0]||(i[0]=t("A ",-1)),a(n,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),i[1]||(i[1]=t(" representing the asynchronous operation.",-1))]),_:1,__:[0,1]})])}const _=l(o,[["render",d]]);export{m as __pageData,_ as default};
