import{_ as a,c as s,o as i,ag as n}from"./chunks/framework.CUqMdM43.js";const k=JSON.parse('{"title":"Method InitializeSensorAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Examples.ISensorDevice.InitializeSensorAsync.md","filePath":"api/generated/Belay.Core.Examples.ISensorDevice.InitializeSensorAsync.md"}'),t={name:"api/generated/Belay.Core.Examples.ISensorDevice.InitializeSensorAsync.md"};function r(l,e,o,p,h,c){return i(),s("div",null,e[0]||(e[0]=[n(`<h1 id="method-initializesensorasync" tabindex="-1"><a id="Belay_Core_Examples_ISensorDevice_InitializeSensorAsync"></a> Method InitializeSensorAsync <a class="header-anchor" href="#method-initializesensorasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_ISensorDevice_InitializeSensorAsync&quot;&gt;&lt;/a&gt; Method InitializeSensorAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Examples.html">Belay.Core.Examples</a><br> Assembly: Belay.Core.dll</p><h2 id="initializesensorasync" tabindex="-1"><a id="Belay_Core_Examples_ISensorDevice_InitializeSensorAsync"></a> InitializeSensorAsync() <a class="header-anchor" href="#initializesensorasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_ISensorDevice_InitializeSensorAsync&quot;&gt;&lt;/a&gt; InitializeSensorAsync\\(\\)&quot;">​</a></h2><p>Sets up the device for sensor readings. Demonstrates [Setup] attribute for initialization.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitializeSensorAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task representing the setup operation.</p>`,8)]))}const y=a(t,[["render",r]]);export{k as __pageData,y as default};
