import{_ as a,c as s,o as r,ag as t}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ReadTemperatureAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Examples.ISensorDevice.ReadTemperatureAsync.md","filePath":"api/generated/Belay.Core.Examples.ISensorDevice.ReadTemperatureAsync.md"}'),i={name:"api/generated/Belay.Core.Examples.ISensorDevice.ReadTemperatureAsync.md"};function n(l,e,p,o,d,h){return r(),s("div",null,e[0]||(e[0]=[t(`<h1 id="method-readtemperatureasync" tabindex="-1"><a id="Belay_Core_Examples_ISensorDevice_ReadTemperatureAsync"></a> Method ReadTemperatureAsync <a class="header-anchor" href="#method-readtemperatureasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_ISensorDevice_ReadTemperatureAsync&quot;&gt;&lt;/a&gt; Method ReadTemperatureAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Examples.html">Belay.Core.Examples</a><br> Assembly: Belay.Core.dll</p><h2 id="readtemperatureasync" tabindex="-1"><a id="Belay_Core_Examples_ISensorDevice_ReadTemperatureAsync"></a> ReadTemperatureAsync() <a class="header-anchor" href="#readtemperatureasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_ISensorDevice_ReadTemperatureAsync&quot;&gt;&lt;/a&gt; ReadTemperatureAsync\\(\\)&quot;">​</a></h2><p>Reads the temperature from the device sensor. Demonstrates basic [Task] attribute usage.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadTemperatureAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.single" target="_blank" rel="noreferrer">float</a>&gt;</p><p>The temperature reading in Celsius.</p>`,8)]))}const u=a(i,[["render",n]]);export{m as __pageData,u as default};
