import{_ as a,c as s,o as t,ag as r}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Interface ISensorDevice","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Examples.ISensorDevice.md","filePath":"api/generated/Belay.Core.Examples.ISensorDevice.md"}'),i={name:"api/generated/Belay.Core.Examples.ISensorDevice.md"};function n(o,e,l,p,c,m){return t(),s("div",null,e[0]||(e[0]=[r('<h1 id="interface-isensordevice" tabindex="-1"><a id="Belay_Core_Examples_ISensorDevice"></a> Interface ISensorDevice <a class="header-anchor" href="#interface-isensordevice" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Examples_ISensorDevice&quot;&gt;&lt;/a&gt; Interface ISensorDevice&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Examples.html">Belay.Core.Examples</a><br> Assembly: Belay.Core.dll</p><p>Example interface demonstrating method interception with the [Task] attribute. This interface shows the recommended pattern for using Belay.NET&#39;s attribute-based programming model.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ISensorDevice</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Examples.ISensorDevice.CalibrateAsync.html#Belay_Core_Examples_ISensorDevice_CalibrateAsync">CalibrateAsync()</a></p><p>Calibrates the sensor. Demonstrates [Task] attribute with void return type and longer timeout.</p><p><a href="./Belay.Core.Examples.ISensorDevice.CleanupSensorAsync.html#Belay_Core_Examples_ISensorDevice_CleanupSensorAsync">CleanupSensorAsync()</a></p><p>Cleans up the device after use. Demonstrates [Teardown] attribute for cleanup.</p><p><a href="./Belay.Core.Examples.ISensorDevice.GetDeviceInfoAsync.html#Belay_Core_Examples_ISensorDevice_GetDeviceInfoAsync">GetDeviceInfoAsync()</a></p><p>Gets device information. Demonstrates [Task] attribute with string return type.</p><p><a href="./Belay.Core.Examples.ISensorDevice.InitializeSensorAsync.html#Belay_Core_Examples_ISensorDevice_InitializeSensorAsync">InitializeSensorAsync()</a></p><p>Sets up the device for sensor readings. Demonstrates [Setup] attribute for initialization.</p><p><a href="./Belay.Core.Examples.ISensorDevice.ReadHumidityAsync.html#Belay_Core_Examples_ISensorDevice_ReadHumidityAsync">ReadHumidityAsync()</a></p><p>Reads humidity from the device sensor. Demonstrates [Task] attribute with custom name and timeout.</p><p><a href="./Belay.Core.Examples.ISensorDevice.ReadTemperatureAsync.html#Belay_Core_Examples_ISensorDevice_ReadTemperatureAsync">ReadTemperatureAsync()</a></p><p>Reads the temperature from the device sensor. Demonstrates basic [Task] attribute usage.</p>',17)]))}const _=a(i,[["render",n]]);export{h as __pageData,_ as default};
