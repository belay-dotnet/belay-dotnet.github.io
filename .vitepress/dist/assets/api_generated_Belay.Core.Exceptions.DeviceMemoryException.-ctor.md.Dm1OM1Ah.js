import{_ as i,C as r,c as o,o as n,ag as t,j as l,a,G as p}from"./chunks/framework.CUqMdM43.js";const E=JSON.parse('{"title":"Constructor DeviceMemoryException","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Exceptions.DeviceMemoryException.-ctor.md","filePath":"api/generated/Belay.Core.Exceptions.DeviceMemoryException.-ctor.md"}'),_={name:"api/generated/Belay.Core.Exceptions.DeviceMemoryException.-ctor.md"};function c(m,e,h,d,y,g){const s=r("xref");return n(),o("div",null,[e[2]||(e[2]=t('<h1 id="constructor-devicememoryexception" tabindex="-1"><a id="Belay_Core_Exceptions_DeviceMemoryException__ctor_System_String_System_Nullable_System_Int64__System_Nullable_System_Int64__"></a> Constructor DeviceMemoryException <a class="header-anchor" href="#constructor-devicememoryexception" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Exceptions_DeviceMemoryException__ctor_System_String_System_Nullable_System_Int64__System_Nullable_System_Int64__&quot;&gt;&lt;/a&gt; Constructor DeviceMemoryException&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Exceptions.html">Belay.Core.Exceptions</a><br> Assembly: Belay.Core.dll</p><h2 id="devicememoryexception-string-long-long" tabindex="-1"><a id="Belay_Core_Exceptions_DeviceMemoryException__ctor_System_String_System_Nullable_System_Int64__System_Nullable_System_Int64__"></a> DeviceMemoryException(string, long?, long?) <a class="header-anchor" href="#devicememoryexception-string-long-long" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Exceptions_DeviceMemoryException__ctor_System_String_System_Nullable_System_Int64__System_Nullable_System_Int64__&quot;&gt;&lt;/a&gt; DeviceMemoryException\\(string, long?, long?\\)&quot;">​</a></h2>',3)),l("p",null,[e[0]||(e[0]=a("Initializes a new instance of the ",-1)),p(s,{href:"Belay.Core.Exceptions.DeviceMemoryException","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" class.",-1))]),e[3]||(e[3]=t('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceMemoryException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> availableMemory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">long?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requestedMemory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>message</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The error message.</p><p><code>availableMemory</code> <a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a>?</p><p>The available memory on the device, if known.</p><p><code>requestedMemory</code> <a href="https://learn.microsoft.com/dotnet/api/system.int64" target="_blank" rel="noreferrer">long</a>?</p><p>The requested memory amount, if known.</p>',8))])}const u=i(_,[["render",c]]);export{E as __pageData,u as default};
