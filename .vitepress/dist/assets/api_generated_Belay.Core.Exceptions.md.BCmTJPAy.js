import{_ as o,c as a,o as n,ag as t}from"./chunks/framework.CUqMdM43.js";const E=JSON.parse('{"title":"Namespace Belay.Core.Exceptions","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Exceptions.md","filePath":"api/generated/Belay.Core.Exceptions.md"}'),i={name:"api/generated/Belay.Core.Exceptions.md"};function p(c,e,r,s,l,x){return n(),a("div",null,e[0]||(e[0]=[t('<h1 id="namespace-belay-core-exceptions" tabindex="-1"><a id="Belay_Core_Exceptions"></a> Namespace Belay.Core.Exceptions <a class="header-anchor" href="#namespace-belay-core-exceptions" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Exceptions&quot;&gt;&lt;/a&gt; Namespace Belay.Core.Exceptions&quot;">​</a></h1><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><p><a href="./Belay.Core.Exceptions.BelayConfigurationException.html">BelayConfigurationException</a></p><p>Exception thrown when Belay.NET configuration is invalid.</p><p><a href="./Belay.Core.Exceptions.BelayException.html">BelayException</a></p><p>Base exception class for all Belay.NET exceptions. Provides context preservation and structured error information.</p><p><a href="./Belay.Core.Exceptions.BelayValidationException.html">BelayValidationException</a></p><p>Exception thrown when validation fails.</p><p><a href="./Belay.Core.Exceptions.DeviceCodeSyntaxException.html">DeviceCodeSyntaxException</a></p><p>Exception thrown when device code has syntax errors.</p><p><a href="./Belay.Core.Exceptions.DeviceCommunicationException.html">DeviceCommunicationException</a></p><p>Exception thrown when device communication operations fail.</p><p><a href="./Belay.Core.Exceptions.DeviceConnectionException.html">DeviceConnectionException</a></p><p>Exception thrown when device connection operations fail.</p><p><a href="./Belay.Core.Exceptions.DeviceExecutionException.html">DeviceExecutionException</a></p><p>Exception thrown when device code execution fails.</p><p><a href="./Belay.Core.Exceptions.DeviceMemoryException.html">DeviceMemoryException</a></p><p>Exception thrown when device runs out of memory.</p><p><a href="./Belay.Core.Exceptions.DeviceResourceException.html">DeviceResourceException</a></p><p>Exception thrown when device resource operations fail.</p><p><a href="./Belay.Core.Exceptions.DeviceSessionException.html">DeviceSessionException</a></p><p>Exception thrown when device session operations fail.</p><p><a href="./Belay.Core.Exceptions.DeviceTimeoutException.html">DeviceTimeoutException</a></p><p>Exception thrown when device operations timeout.</p><p><a href="./Belay.Core.Exceptions.ExceptionHandlingConfiguration.html">ExceptionHandlingConfiguration</a></p><p>Configuration for exception handling behavior.</p><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><p><a href="./Belay.Core.Exceptions.IErrorMapper.html">IErrorMapper</a></p><p>Interface for mapping exceptions and device errors to structured Belay exceptions.</p><p><a href="./Belay.Core.Exceptions.IExceptionEnricher.html">IExceptionEnricher</a></p><p>Interface for enriching exceptions with additional context.</p><p><a href="./Belay.Core.Exceptions.IGlobalExceptionHandler.html">IGlobalExceptionHandler</a></p><p>Interface for global exception handling across the application.</p>',33)]))}const d=o(i,[["render",p]]);export{E as __pageData,d as default};
