import{_ as l,C as t,c as r,o,ag as p,G as a,w as h,a as i}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ApplyPoliciesAndExecuteAsync<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.md"}'),c={name:"api/generated/Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.md"};function d(k,e,y,g,u,_){const s=t("xref"),n=t("placeholder");return o(),r("div",null,[e[2]||(e[2]=p('<h1 id="method-applypoliciesandexecuteasync-t" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_"></a> Method ApplyPoliciesAndExecuteAsync&lt;T&gt; <a class="header-anchor" href="#method-applypoliciesandexecuteasync-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_&quot;&gt;&lt;/a&gt; Method ApplyPoliciesAndExecuteAsync&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="applypoliciesandexecuteasync-t-string-cancellationtoken-string" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_"></a> ApplyPoliciesAndExecuteAsync&lt;T&gt;(string, CancellationToken, string?) <a class="header-anchor" href="#applypoliciesandexecuteasync-t-string-cancellationtoken-string" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_&quot;&gt;&lt;/a&gt; ApplyPoliciesAndExecuteAsync&lt;T\\&gt;\\(string, CancellationToken, string?\\)&quot;">​</a></h2><p>Applies executor-specific policies around Python code execution.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApplyPoliciesAndExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pythonCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callingMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>pythonCode</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The Python code to execute on the device.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><p><code>callingMethod</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>?</p><p>The method that initiated this execution (optional).</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;T&gt;</p><p>The result of the Python code execution with policies applied.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The expected return type.</p><h2 id="applypoliciesandexecuteasync-string-cancellationtoken-string" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync_System_String_System_Threading_CancellationToken_System_String_"></a> ApplyPoliciesAndExecuteAsync(string, CancellationToken, string?) <a class="header-anchor" href="#applypoliciesandexecuteasync-string-cancellationtoken-string" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync_System_String_System_Threading_CancellationToken_System_String_&quot;&gt;&lt;/a&gt; ApplyPoliciesAndExecuteAsync\\(string, CancellationToken, string?\\)&quot;">​</a></h2><p>Applies executor-specific policies around Python code execution without returning a value.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplyPoliciesAndExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pythonCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callingMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>pythonCode</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The Python code to execute on the device.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><p><code>callingMethod</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>?</p><p>The method that initiated this execution (optional).</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',30)),a(n,null,{default:h(()=>[e[0]||(e[0]=i("A ",-1)),a(s,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=i(" representing the asynchronous operation.",-1))]),_:1,__:[0,1]})])}const A=l(c,[["render",d]]);export{m as __pageData,A as default};
