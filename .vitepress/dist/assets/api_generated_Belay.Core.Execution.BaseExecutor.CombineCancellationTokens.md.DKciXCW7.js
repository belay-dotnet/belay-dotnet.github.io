import{_ as a,c as n,o as t,ag as o}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Method CombineCancellationTokens","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.CombineCancellationTokens.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.CombineCancellationTokens.md"}'),i={name:"api/generated/Belay.Core.Execution.BaseExecutor.CombineCancellationTokens.md"};function l(s,e,r,c,k,h){return t(),n("div",null,e[0]||(e[0]=[o('<h1 id="method-combinecancellationtokens" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_CombineCancellationTokens_System_Threading_CancellationToken_System_Threading_CancellationTokenSource_System_Threading_CancellationTokenSource__"></a> Method CombineCancellationTokens <a class="header-anchor" href="#method-combinecancellationtokens" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_CombineCancellationTokens_System_Threading_CancellationToken_System_Threading_CancellationTokenSource_System_Threading_CancellationTokenSource__&quot;&gt;&lt;/a&gt; Method CombineCancellationTokens&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="combinecancellationtokens-cancellationtoken-cancellationtokensource-out-cancellationtokensource" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_CombineCancellationTokens_System_Threading_CancellationToken_System_Threading_CancellationTokenSource_System_Threading_CancellationTokenSource__"></a> CombineCancellationTokens(CancellationToken, CancellationTokenSource?, out CancellationTokenSource?) <a class="header-anchor" href="#combinecancellationtokens-cancellationtoken-cancellationtokensource-out-cancellationtokensource" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_CombineCancellationTokens_System_Threading_CancellationToken_System_Threading_CancellationTokenSource_System_Threading_CancellationTokenSource__&quot;&gt;&lt;/a&gt; CombineCancellationTokens\\(CancellationToken, CancellationTokenSource?, out CancellationTokenSource?\\)&quot;">​</a></h2><p>Combines a cancellation token with an optional timeout cancellation token source.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CombineCancellationTokens</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationTokenSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeoutCts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CancellationTokenSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linkedCts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>The original cancellation token.</p><p><code>timeoutCts</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtokensource" target="_blank" rel="noreferrer">CancellationTokenSource</a>?</p><p>Optional timeout cancellation token source.</p><p><code>linkedCts</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtokensource" target="_blank" rel="noreferrer">CancellationTokenSource</a>?</p><p>Output parameter for the linked token source that needs disposal.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>A combined cancellation token.</p>',15)]))}const _=a(i,[["render",l]]);export{d as __pageData,_ as default};
