import{_ as t,c as o,o as a,ag as r}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ConvertComplexObjectToPython","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.ConvertComplexObjectToPython.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.ConvertComplexObjectToPython.md"}'),s={name:"api/generated/Belay.Core.Execution.BaseExecutor.ConvertComplexObjectToPython.md"};function n(i,e,l,c,p,h){return a(),o("div",null,e[0]||(e[0]=[r('<h1 id="method-convertcomplexobjecttopython" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ConvertComplexObjectToPython_System_Object_"></a> Method ConvertComplexObjectToPython <a class="header-anchor" href="#method-convertcomplexobjecttopython" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ConvertComplexObjectToPython_System_Object_&quot;&gt;&lt;/a&gt; Method ConvertComplexObjectToPython&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="convertcomplexobjecttopython-object" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ConvertComplexObjectToPython_System_Object_"></a> ConvertComplexObjectToPython(object?) <a class="header-anchor" href="#convertcomplexobjecttopython-object" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ConvertComplexObjectToPython_System_Object_&quot;&gt;&lt;/a&gt; ConvertComplexObjectToPython\\(object?\\)&quot;">​</a></h2><p>Converts complex objects to Python representation. Uses JSON serialization as fallback for complex types.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConvertComplexObjectToPython</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>value</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p>',9)]))}const _=t(s,[["render",n]]);export{m as __pageData,_ as default};
