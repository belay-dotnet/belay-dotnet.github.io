import{_ as t,c as a,o as i,ag as s}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Method CreateTimeoutCts","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.CreateTimeoutCts.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.CreateTimeoutCts.md"}'),r={name:"api/generated/Belay.Core.Execution.BaseExecutor.CreateTimeoutCts.md"};function o(n,e,l,c,u,h){return i(),a("div",null,e[0]||(e[0]=[s('<h1 id="method-createtimeoutcts" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_CreateTimeoutCts_System_Nullable_System_Int32__"></a> Method CreateTimeoutCts <a class="header-anchor" href="#method-createtimeoutcts" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_CreateTimeoutCts_System_Nullable_System_Int32__&quot;&gt;&lt;/a&gt; Method CreateTimeoutCts&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="createtimeoutcts-int" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_CreateTimeoutCts_System_Nullable_System_Int32__"></a> CreateTimeoutCts(int?) <a class="header-anchor" href="#createtimeoutcts-int" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_CreateTimeoutCts_System_Nullable_System_Int32__&quot;&gt;&lt;/a&gt; CreateTimeoutCts\\(int?\\)&quot;">​</a></h2><p>Creates a timeout cancellation token source if a timeout is specified.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CancellationTokenSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CreateTimeoutCts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeoutMs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>timeoutMs</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a>?</p><p>The timeout in milliseconds, or null for no timeout.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtokensource" target="_blank" rel="noreferrer">CancellationTokenSource</a>?</p><p>A cancellation token source, or null if no timeout specified.</p>',11)]))}const m=t(r,[["render",o]]);export{d as __pageData,m as default};
