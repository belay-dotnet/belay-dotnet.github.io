import{_ as r,C as a,c as o,o as l,ag as c,G as t,w as h,a as n}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ExecuteOnDeviceAsync<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.ExecuteOnDeviceAsync.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.ExecuteOnDeviceAsync.md"}'),p={name:"api/generated/Belay.Core.Execution.BaseExecutor.ExecuteOnDeviceAsync.md"};function d(k,e,u,y,_,g){const s=a("xref"),i=a("placeholder");return l(),o("div",null,[e[2]||(e[2]=c('<h1 id="method-executeondeviceasync-t" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync__1_System_String_System_Threading_CancellationToken_"></a> Method ExecuteOnDeviceAsync&lt;T&gt; <a class="header-anchor" href="#method-executeondeviceasync-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync__1_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method ExecuteOnDeviceAsync&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="executeondeviceasync-t-string-cancellationtoken" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync__1_System_String_System_Threading_CancellationToken_"></a> ExecuteOnDeviceAsync&lt;T&gt;(string, CancellationToken) <a class="header-anchor" href="#executeondeviceasync-t-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync__1_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; ExecuteOnDeviceAsync&lt;T\\&gt;\\(string, CancellationToken\\)&quot;">​</a></h2><p>Executes Python code directly on the device without additional policies. This is used as the final execution step after policies have been applied.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecuteOnDeviceAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pythonCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>pythonCode</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The Python code to execute.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;T&gt;</p><p>The result of the Python code execution.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The expected return type.</p><h2 id="executeondeviceasync-string-cancellationtoken" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync_System_String_System_Threading_CancellationToken_"></a> ExecuteOnDeviceAsync(string, CancellationToken) <a class="header-anchor" href="#executeondeviceasync-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; ExecuteOnDeviceAsync\\(string, CancellationToken\\)&quot;">​</a></h2><p>Executes Python code directly on the device without returning a value.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteOnDeviceAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pythonCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>pythonCode</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The Python code to execute.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',26)),t(i,null,{default:h(()=>[e[0]||(e[0]=n("A ",-1)),t(s,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=n(" representing the asynchronous operation.",-1))]),_:1,__:[0,1]})])}const x=r(p,[["render",d]]);export{m as __pageData,x as default};
