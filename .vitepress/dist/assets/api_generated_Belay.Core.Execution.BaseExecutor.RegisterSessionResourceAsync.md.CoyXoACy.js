import{_ as s,c as a,o as i,ag as r}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Method RegisterSessionResourceAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.RegisterSessionResourceAsync.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.RegisterSessionResourceAsync.md"}'),t={name:"api/generated/Belay.Core.Execution.BaseExecutor.RegisterSessionResourceAsync.md"};function n(o,e,c,l,h,u){return i(),a("div",null,e[0]||(e[0]=[r('<h1 id="method-registersessionresourceasync" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_RegisterSessionResourceAsync_Belay_Core_Sessions_ISessionResource_System_Threading_CancellationToken_"></a> Method RegisterSessionResourceAsync <a class="header-anchor" href="#method-registersessionresourceasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_RegisterSessionResourceAsync_Belay_Core_Sessions_ISessionResource_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method RegisterSessionResourceAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="registersessionresourceasync-isessionresource-cancellationtoken" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_RegisterSessionResourceAsync_Belay_Core_Sessions_ISessionResource_System_Threading_CancellationToken_"></a> RegisterSessionResourceAsync(ISessionResource, CancellationToken) <a class="header-anchor" href="#registersessionresourceasync-isessionresource-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_RegisterSessionResourceAsync_Belay_Core_Sessions_ISessionResource_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; RegisterSessionResourceAsync\\(ISessionResource, CancellationToken\\)&quot;">​</a></h2><p>Registers a session resource for automatic cleanup.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> virtual</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegisterSessionResourceAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ISessionResource</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>resource</code> <a href="./Belay.Core.Sessions.ISessionResource.html">ISessionResource</a></p><p>The resource to register.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task representing the asynchronous operation.</p>',13)]))}const _=s(t,[["render",n]]);export{d as __pageData,_ as default};
