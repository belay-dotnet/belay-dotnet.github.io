import{_ as s,c as a,o,ag as t}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Method ThrowIfDisposed","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.ThrowIfDisposed.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.ThrowIfDisposed.md"}'),i={name:"api/generated/Belay.Core.Execution.BaseExecutor.ThrowIfDisposed.md"};function r(d,e,n,p,h,l){return o(),a("div",null,e[0]||(e[0]=[t('<h1 id="method-throwifdisposed" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ThrowIfDisposed"></a> Method ThrowIfDisposed <a class="header-anchor" href="#method-throwifdisposed" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ThrowIfDisposed&quot;&gt;&lt;/a&gt; Method ThrowIfDisposed&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="throwifdisposed" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor_ThrowIfDisposed"></a> ThrowIfDisposed() <a class="header-anchor" href="#throwifdisposed" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor_ThrowIfDisposed&quot;&gt;&lt;/a&gt; ThrowIfDisposed\\(\\)&quot;">​</a></h2><p>Throws an exception if the executor has been disposed.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThrowIfDisposed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',5)]))}const _=s(i,[["render",r]]);export{u as __pageData,_ as default};
