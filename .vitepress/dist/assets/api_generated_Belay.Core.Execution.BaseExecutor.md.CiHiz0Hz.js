import{_ as n,C as r,c as s,o as i,ag as t,j as c,a as o,G as l}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Class BaseExecutor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.BaseExecutor.md","filePath":"api/generated/Belay.Core.Execution.BaseExecutor.md"}'),_={name:"api/generated/Belay.Core.Execution.BaseExecutor.md"};function u(h,e,p,y,x,m){const a=r("xref");return i(),s("div",null,[e[2]||(e[2]=t('<h1 id="class-baseexecutor" tabindex="-1"><a id="Belay_Core_Execution_BaseExecutor"></a> Class BaseExecutor <a class="header-anchor" href="#class-baseexecutor" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_BaseExecutor&quot;&gt;&lt;/a&gt; Class BaseExecutor&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><p>Base class for all method executors that provides common functionality for applying policies around Device.ExecuteAsync calls.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IExecutor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Execution.BaseExecutor.html">BaseExecutor</a></p><h4 id="derived" tabindex="-1">Derived <a class="header-anchor" href="#derived" aria-label="Permalink to &quot;Derived&quot;">​</a></h4><p><a href="./Belay.Core.Execution.EnhancedExecutor.html">EnhancedExecutor</a>, <a href="./Belay.Core.Execution.SetupExecutor.html">SetupExecutor</a>, <a href="./Belay.Core.Execution.TaskExecutor.html">TaskExecutor</a>, <a href="./Belay.Core.Execution.TeardownExecutor.html">TeardownExecutor</a>, <a href="./Belay.Core.Execution.ThreadExecutor.html">ThreadExecutor</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Execution.IExecutor.html">IExecutor</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Execution.BaseExecutor.-ctor.html#Belay_Core_Execution_BaseExecutor__ctor_Belay_Core_Device_Belay_Core_Sessions_IDeviceSessionManager_Microsoft_Extensions_Logging_ILogger_Belay_Core_Exceptions_IErrorMapper_Belay_Core_Execution_IExecutionContextService_">BaseExecutor(Device, IDeviceSessionManager, ILogger, IErrorMapper?, IExecutionContextService?)</a></p>',14)),c("p",null,[e[0]||(e[0]=o("Initializes a new instance of the ",-1)),l(a,{href:"Belay.Core.Execution.BaseExecutor","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=o(" class.",-1))]),e[3]||(e[3]=t('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Execution.BaseExecutor.CurrentSession.html#Belay_Core_Execution_BaseExecutor_CurrentSession">CurrentSession</a></p><p>Gets the current device session if available.</p><p><a href="./Belay.Core.Execution.BaseExecutor.Device.html#Belay_Core_Execution_BaseExecutor_Device">Device</a></p><p>Gets the device instance to execute Python code on.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ErrorMapper.html#Belay_Core_Execution_BaseExecutor_ErrorMapper">ErrorMapper</a></p><p>Gets the error mapper for mapping exceptions.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecutionContextService.html#Belay_Core_Execution_BaseExecutor_ExecutionContextService">ExecutionContextService</a></p><p>Gets the execution context service for secure method context access.</p><p><a href="./Belay.Core.Execution.BaseExecutor.Logger.html#Belay_Core_Execution_BaseExecutor_Logger">Logger</a></p><p>Gets logger for diagnostic information.</p><p><a href="./Belay.Core.Execution.BaseExecutor.SessionManager.html#Belay_Core_Execution_BaseExecutor_SessionManager">SessionManager</a></p><p>Gets the session manager for coordinating device sessions.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_">ApplyPoliciesAndExecuteAsync&lt;T&gt;(string, CancellationToken, string?)</a></p><p>Applies executor-specific policies around Python code execution.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync_System_String_System_Threading_CancellationToken_System_String_">ApplyPoliciesAndExecuteAsync(string, CancellationToken, string?)</a></p><p>Applies executor-specific policies around Python code execution without returning a value.</p><p><a href="./Belay.Core.Execution.BaseExecutor.CanHandle.html#Belay_Core_Execution_BaseExecutor_CanHandle_System_Reflection_MethodInfo_">CanHandle(MethodInfo)</a></p><p>Validates that a method can be handled by this executor.</p><p><a href="./Belay.Core.Execution.BaseExecutor.CombineCancellationTokens.html#Belay_Core_Execution_BaseExecutor_CombineCancellationTokens_System_Threading_CancellationToken_System_Threading_CancellationTokenSource_System_Threading_CancellationTokenSource__">CombineCancellationTokens(CancellationToken, CancellationTokenSource?, out CancellationTokenSource?)</a></p><p>Combines a cancellation token with an optional timeout cancellation token source.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertBytesToPython.html#Belay_Core_Execution_BaseExecutor_ConvertBytesToPython_System_Byte___">ConvertBytesToPython(byte[])</a></p><p>Converts a byte array to Python bytes literal.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertComplexObjectToPython.html#Belay_Core_Execution_BaseExecutor_ConvertComplexObjectToPython_System_Object_">ConvertComplexObjectToPython(object?)</a></p><p>Converts complex objects to Python representation. Uses JSON serialization as fallback for complex types.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertDictionaryToPython.html#Belay_Core_Execution_BaseExecutor_ConvertDictionaryToPython_System_Collections_IDictionary_">ConvertDictionaryToPython(IDictionary)</a></p><p>Converts a dictionary to Python dict literal.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertEnumToPython.html#Belay_Core_Execution_BaseExecutor_ConvertEnumToPython_System_Enum_">ConvertEnumToPython(Enum)</a></p><p>Converts an enum to Python representation.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertListToPython.html#Belay_Core_Execution_BaseExecutor_ConvertListToPython_System_Collections_IList_">ConvertListToPython(IList)</a></p><p>Converts a list/array to Python list literal.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertResult.html#Belay_Core_Execution_BaseExecutor_ConvertResult__1_System_Object_">ConvertResult&lt;T&gt;(object?)</a></p><p>Converts a result object to the expected type.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertStringToPython.html#Belay_Core_Execution_BaseExecutor_ConvertStringToPython_System_String_">ConvertStringToPython(string)</a></p><p>Converts a string to Python string literal with proper escaping.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ConvertToPythonValue.html#Belay_Core_Execution_BaseExecutor_ConvertToPythonValue_System_Object_">ConvertToPythonValue(object?)</a></p><p>Converts a .NET value to its Python string representation. Handles complex types including arrays, dictionaries, and custom objects.</p><p><a href="./Belay.Core.Execution.BaseExecutor.CreateTimeoutCts.html#Belay_Core_Execution_BaseExecutor_CreateTimeoutCts_System_Nullable_System_Int32__">CreateTimeoutCts(int?)</a></p><p>Creates a timeout cancellation token source if a timeout is specified.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync__1_System_Reflection_MethodInfo_System_Object_System_Object___System_Threading_CancellationToken_">ExecuteAsync&lt;T&gt;(MethodInfo, object?, object?[]?, CancellationToken)</a></p><p>Executes a method with attribute-specific policies applied.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync_System_Reflection_MethodInfo_System_Object_System_Object___System_Threading_CancellationToken_">ExecuteAsync(MethodInfo, object?, object?[]?, CancellationToken)</a></p><p>Executes a method without returning a value.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteInSessionAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteInSessionAsync__1_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_">ExecuteInSessionAsync&lt;T&gt;(Func&lt;IDeviceSession, Task&lt;T&gt;&gt;, CancellationToken)</a></p><p>Executes an operation within a session context, providing access to session state and resources.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteInSessionAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteInSessionAsync_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task__System_Threading_CancellationToken_">ExecuteInSessionAsync(Func&lt;IDeviceSession, Task&gt;, CancellationToken)</a></p><p>Executes an operation within a session context without returning a value.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteOnDeviceAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync__1_System_String_System_Threading_CancellationToken_">ExecuteOnDeviceAsync&lt;T&gt;(string, CancellationToken)</a></p><p>Executes Python code directly on the device without additional policies. This is used as the final execution step after policies have been applied.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteOnDeviceAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteOnDeviceAsync_System_String_System_Threading_CancellationToken_">ExecuteOnDeviceAsync(string, CancellationToken)</a></p><p>Executes Python code directly on the device without returning a value.</p><p><a href="./Belay.Core.Execution.BaseExecutor.ExecuteWithSessionOptimizationAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteWithSessionOptimizationAsync__1_Belay_Core_Sessions_IDeviceSession_System_String_System_Threading_CancellationToken_">ExecuteWithSessionOptimizationAsync&lt;T&gt;(IDeviceSession, string, CancellationToken)</a></p><p>Executes Python code with session-based optimizations.</p><p><a href="./Belay.Core.Execution.BaseExecutor.GenerateCacheKey.html#Belay_Core_Execution_BaseExecutor_GenerateCacheKey_System_String_System_Object___">GenerateCacheKey(string, params object?[]?)</a></p><p>Generates a cache key for the given Python code and parameters.</p><p><a href="./Belay.Core.Execution.BaseExecutor.GenerateDeviceMethodCall.html#Belay_Core_Execution_BaseExecutor_GenerateDeviceMethodCall_System_Reflection_MethodInfo_System_Object___">GenerateDeviceMethodCall(MethodInfo, object?[]?)</a></p><p>Generates a device method call assuming the method is already deployed. This supports the pattern where methods represent deployed Python functions. NOTE: This strategy is disabled until method deployment infrastructure is implemented.</p><p><a href="./Belay.Core.Execution.BaseExecutor.GenerateParameterList.html#Belay_Core_Execution_BaseExecutor_GenerateParameterList_System_Object___">GenerateParameterList(object?[]?)</a></p><p>Generates a Python parameter list from the method parameters.</p><p><a href="./Belay.Core.Execution.BaseExecutor.GeneratePythonMethodCall.html#Belay_Core_Execution_BaseExecutor_GeneratePythonMethodCall_System_Reflection_MethodInfo_System_Object_System_Object___">GeneratePythonMethodCall(MethodInfo, object?, object?[]?)</a></p><p>Generates Python code to invoke the specified method with parameters. This method handles three patterns:</p><ol><li>Methods that return Python code strings (most common)</li><li>Methods with PythonCodeAttribute containing embedded code</li><li>Simple expression methods that can be transpiled.</li></ol><p><a href="./Belay.Core.Execution.BaseExecutor.GetCallingMethod.html#Belay_Core_Execution_BaseExecutor_GetCallingMethod_System_Int32_">GetCallingMethod(int)</a></p><p>Gets the calling method information from the execution context. SECURITY NOTE: This is a secure replacement for stack frame reflection.</p><p><a href="./Belay.Core.Execution.BaseExecutor.GetCurrentMethodContext.html#Belay_Core_Execution_BaseExecutor_GetCurrentMethodContext">GetCurrentMethodContext()</a></p><p>Gets the current method execution context (secure replacement for stack frame inspection).</p><p><a href="./Belay.Core.Execution.BaseExecutor.GetEmbeddedPythonCode.html#Belay_Core_Execution_BaseExecutor_GetEmbeddedPythonCode_System_Reflection_MethodInfo_System_Object___">GetEmbeddedPythonCode(MethodInfo, object?[]?)</a></p><p>Attempts to get embedded Python code from method attributes.</p><p><a href="./Belay.Core.Execution.BaseExecutor.IsDeployableMethod.html#Belay_Core_Execution_BaseExecutor_IsDeployableMethod_System_Reflection_MethodInfo_">IsDeployableMethod(MethodInfo)</a></p><p>Checks if a method appears to be deployable to the device. This is a heuristic for determining if a method represents device-side code.</p><p><a href="./Belay.Core.Execution.BaseExecutor.IsSimpleType.html#Belay_Core_Execution_BaseExecutor_IsSimpleType_System_Type_">IsSimpleType(Type)</a></p><p>Checks if a type is simple enough to be marshaled to Python.</p><p><a href="./Belay.Core.Execution.BaseExecutor.RegisterSessionResourceAsync.html#Belay_Core_Execution_BaseExecutor_RegisterSessionResourceAsync_Belay_Core_Sessions_ISessionResource_System_Threading_CancellationToken_">RegisterSessionResourceAsync(ISessionResource, CancellationToken)</a></p><p>Registers a session resource for automatic cleanup.</p><p><a href="./Belay.Core.Execution.BaseExecutor.TryInvokeMethodForPythonCode.html#Belay_Core_Execution_BaseExecutor_TryInvokeMethodForPythonCode_System_Reflection_MethodInfo_System_Object_System_Object___">TryInvokeMethodForPythonCode(MethodInfo, object?, object?[]?)</a></p><p>Attempts to invoke the method to get Python code string. This supports the pattern where C# methods return Python code to execute.</p>',77))])}const C=n(_,[["render",u]]);export{d as __pageData,C as default};
