import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.CUqMdM43.js";const g=JSON.parse('{"title":"Method CreateProxy<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.DeviceEnhancedExtensions.CreateProxy.md","filePath":"api/generated/Belay.Core.Execution.DeviceEnhancedExtensions.CreateProxy.md"}'),r={name:"api/generated/Belay.Core.Execution.DeviceEnhancedExtensions.CreateProxy.md"};function o(n,e,l,h,p,c){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="method-createproxy-t" tabindex="-1"><a id="Belay_Core_Execution_DeviceEnhancedExtensions_CreateProxy__1_Belay_Core_Device_Microsoft_Extensions_Logging_ILogger_"></a> Method CreateProxy&lt;T&gt; <a class="header-anchor" href="#method-createproxy-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_DeviceEnhancedExtensions_CreateProxy__1_Belay_Core_Device_Microsoft_Extensions_Logging_ILogger_&quot;&gt;&lt;/a&gt; Method CreateProxy&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="createproxy-t-device-ilogger" tabindex="-1"><a id="Belay_Core_Execution_DeviceEnhancedExtensions_CreateProxy__1_Belay_Core_Device_Microsoft_Extensions_Logging_ILogger_"></a> CreateProxy&lt;T&gt;(Device, ILogger?) <a class="header-anchor" href="#createproxy-t-device-ilogger" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_DeviceEnhancedExtensions_CreateProxy__1_Belay_Core_Device_Microsoft_Extensions_Logging_ILogger_&quot;&gt;&lt;/a&gt; CreateProxy&lt;T\\&gt;\\(Device, ILogger?\\)&quot;">​</a></h2><p>Creates a device proxy that automatically routes method calls through the enhanced executor. This enables seamless attribute-based programming where C# methods are executed on MicroPython devices.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreateProxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Device</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ILogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>device</code> <a href="./Belay.Core.Device.html">Device</a></p><p>The device to create the proxy for.</p><p><code>logger</code> <a href="https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger" target="_blank" rel="noreferrer">ILogger</a>?</p><p>Optional logger for proxy operations.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p>T</p><p>A proxy instance that routes method calls to the device.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The interface or abstract class to proxy.</p>',16)]))}const _=a(r,[["render",o]]);export{g as __pageData,_ as default};
