import{_ as t,c as a,o,ag as i}from"./chunks/framework.CUqMdM43.js";const _=JSON.parse('{"title":"Method Invoke","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.DeviceProxy-1.Invoke.md","filePath":"api/generated/Belay.Core.Execution.DeviceProxy-1.Invoke.md"}'),s={name:"api/generated/Belay.Core.Execution.DeviceProxy-1.Invoke.md"};function n(r,e,h,l,d,c){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-invoke" tabindex="-1"><a id="Belay_Core_Execution_DeviceProxy_1_Invoke_System_Reflection_MethodInfo_System_Object___"></a> Method Invoke <a class="header-anchor" href="#method-invoke" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_DeviceProxy_1_Invoke_System_Reflection_MethodInfo_System_Object___&quot;&gt;&lt;/a&gt; Method Invoke&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="invoke-methodinfo-object" tabindex="-1"><a id="Belay_Core_Execution_DeviceProxy_1_Invoke_System_Reflection_MethodInfo_System_Object___"></a> Invoke(MethodInfo?, object?[]?) <a class="header-anchor" href="#invoke-methodinfo-object" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_DeviceProxy_1_Invoke_System_Reflection_MethodInfo_System_Object___&quot;&gt;&lt;/a&gt; Invoke\\(MethodInfo?, object?\\[\\]?\\)&quot;">​</a></h2><p>Intercepts method calls and routes them through the enhanced executor.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Invoke</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MethodInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">targetMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?[]? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>targetMethod</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a>?</p><p>The method being called.</p><p><code>args</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?[]?</p><p>The method arguments.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?</p><p>The result of the method execution.</p>',13)]))}const k=t(s,[["render",n]]);export{_ as __pageData,k as default};
