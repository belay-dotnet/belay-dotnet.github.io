import{_ as t,c as o,o as a,ag as n}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Method SetContext","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.ExecutionContextService.SetContext.md","filePath":"api/generated/Belay.Core.Execution.ExecutionContextService.SetContext.md"}'),i={name:"api/generated/Belay.Core.Execution.ExecutionContextService.SetContext.md"};function s(r,e,c,l,x,h){return a(),o("div",null,e[0]||(e[0]=[n('<h1 id="method-setcontext" tabindex="-1"><a id="Belay_Core_Execution_ExecutionContextService_SetContext_Belay_Core_Execution_IMethodExecutionContext_"></a> Method SetContext <a class="header-anchor" href="#method-setcontext" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ExecutionContextService_SetContext_Belay_Core_Execution_IMethodExecutionContext_&quot;&gt;&lt;/a&gt; Method SetContext&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="setcontext-imethodexecutioncontext" tabindex="-1"><a id="Belay_Core_Execution_ExecutionContextService_SetContext_Belay_Core_Execution_IMethodExecutionContext_"></a> SetContext(IMethodExecutionContext) <a class="header-anchor" href="#setcontext-imethodexecutioncontext" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ExecutionContextService_SetContext_Belay_Core_Execution_IMethodExecutionContext_&quot;&gt;&lt;/a&gt; SetContext\\(IMethodExecutionContext\\)&quot;">​</a></h2><p>Sets the current execution context for the current async context.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDisposable</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IMethodExecutionContext</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>context</code> <a href="./Belay.Core.Execution.IMethodExecutionContext.html">IMethodExecutionContext</a></p><p>The execution context to set.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><p>A disposable that restores the previous context when disposed.</p>',11)]))}const p=t(i,[["render",s]]);export{u as __pageData,p as default};
