import{_ as t,c as o,o as a,ag as n}from"./chunks/framework.CUqMdM43.js";const x=JSON.parse('{"title":"Interface IMethodExecutionContext","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.IMethodExecutionContext.md","filePath":"api/generated/Belay.Core.Execution.IMethodExecutionContext.md"}'),i={name:"api/generated/Belay.Core.Execution.IMethodExecutionContext.md"};function r(c,e,h,s,u,p){return a(),o("div",null,e[0]||(e[0]=[n('<h1 id="interface-imethodexecutioncontext" tabindex="-1"><a id="Belay_Core_Execution_IMethodExecutionContext"></a> Interface IMethodExecutionContext <a class="header-anchor" href="#interface-imethodexecutioncontext" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_IMethodExecutionContext&quot;&gt;&lt;/a&gt; Interface IMethodExecutionContext&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><p>Provides method execution context without relying on stack trace inspection. This replaces the security-vulnerable stack frame reflection pattern.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IMethodExecutionContext</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Execution.IMethodExecutionContext.Instance.html#Belay_Core_Execution_IMethodExecutionContext_Instance">Instance</a></p><p>Gets the instance the method is being called on (null for static methods).</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.Method.html#Belay_Core_Execution_IMethodExecutionContext_Method">Method</a></p><p>Gets the method being executed.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.MethodName.html#Belay_Core_Execution_IMethodExecutionContext_MethodName">MethodName</a></p><p>Gets the method name being executed.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.Parameters.html#Belay_Core_Execution_IMethodExecutionContext_Parameters">Parameters</a></p><p>Gets the parameters passed to the method.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.SetupAttribute.html#Belay_Core_Execution_IMethodExecutionContext_SetupAttribute">SetupAttribute</a></p><p>Gets the Setup attribute if present.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.TaskAttribute.html#Belay_Core_Execution_IMethodExecutionContext_TaskAttribute">TaskAttribute</a></p><p>Gets the Task attribute if present.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.TeardownAttribute.html#Belay_Core_Execution_IMethodExecutionContext_TeardownAttribute">TeardownAttribute</a></p><p>Gets the Teardown attribute if present.</p><p><a href="./Belay.Core.Execution.IMethodExecutionContext.ThreadAttribute.html#Belay_Core_Execution_IMethodExecutionContext_ThreadAttribute">ThreadAttribute</a></p><p>Gets the Thread attribute if present.</p>',21)]))}const l=t(i,[["render",r]]);export{x as __pageData,l as default};
