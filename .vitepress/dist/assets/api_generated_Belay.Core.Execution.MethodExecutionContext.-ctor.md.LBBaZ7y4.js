import{_ as o,C as a,c as n,o as r,ag as t,j as h,a as s,G as l}from"./chunks/framework.CUqMdM43.js";const x=JSON.parse('{"title":"Constructor MethodExecutionContext","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.MethodExecutionContext.-ctor.md","filePath":"api/generated/Belay.Core.Execution.MethodExecutionContext.-ctor.md"}'),d={name:"api/generated/Belay.Core.Execution.MethodExecutionContext.-ctor.md"};function c(p,e,_,k,m,u){const i=a("xref");return r(),n("div",null,[e[2]||(e[2]=t('<h1 id="constructor-methodexecutioncontext" tabindex="-1"><a id="Belay_Core_Execution_MethodExecutionContext__ctor_System_Reflection_MethodInfo_System_Object_System_Object___System_String_"></a> Constructor MethodExecutionContext <a class="header-anchor" href="#constructor-methodexecutioncontext" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodExecutionContext__ctor_System_Reflection_MethodInfo_System_Object_System_Object___System_String_&quot;&gt;&lt;/a&gt; Constructor MethodExecutionContext&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="methodexecutioncontext-methodinfo-object-object-string" tabindex="-1"><a id="Belay_Core_Execution_MethodExecutionContext__ctor_System_Reflection_MethodInfo_System_Object_System_Object___System_String_"></a> MethodExecutionContext(MethodInfo?, object?, object?[]?, string?) <a class="header-anchor" href="#methodexecutioncontext-methodinfo-object-object-string" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodExecutionContext__ctor_System_Reflection_MethodInfo_System_Object_System_Object___System_String_&quot;&gt;&lt;/a&gt; MethodExecutionContext\\(MethodInfo?, object?, object?\\[\\]?, string?\\)&quot;">​</a></h2>',3)),h("p",null,[e[0]||(e[0]=s("Initializes a new instance of the ",-1)),l(i,{href:"Belay.Core.Execution.MethodExecutionContext","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=s(" class.",-1))]),e[3]||(e[3]=t('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MethodExecutionContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MethodInfo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> method, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> methodName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>method</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a>?</p><p>The method being executed.</p><p><code>instance</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?</p><p>The instance the method is called on.</p><p><code>parameters</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?[]?</p><p>The parameters passed to the method.</p><p><code>methodName</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>?</p><p>Override for the method name if needed.</p>',10))])}const y=o(d,[["render",c]]);export{x as __pageData,y as default};
