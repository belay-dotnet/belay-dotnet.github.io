import{_ as t,c as a,o,ag as i}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ForMethodName","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.MethodExecutionContext.ForMethodName.md","filePath":"api/generated/Belay.Core.Execution.MethodExecutionContext.ForMethodName.md"}'),s={name:"api/generated/Belay.Core.Execution.MethodExecutionContext.ForMethodName.md"};function r(n,e,h,d,l,p){return o(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-formethodname" tabindex="-1"><a id="Belay_Core_Execution_MethodExecutionContext_ForMethodName_System_String_System_Object___"></a> Method ForMethodName <a class="header-anchor" href="#method-formethodname" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodExecutionContext_ForMethodName_System_String_System_Object___&quot;&gt;&lt;/a&gt; Method ForMethodName&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="formethodname-string-object" tabindex="-1"><a id="Belay_Core_Execution_MethodExecutionContext_ForMethodName_System_String_System_Object___"></a> ForMethodName(string, object?[]?) <a class="header-anchor" href="#formethodname-string-object" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodExecutionContext_ForMethodName_System_String_System_Object___&quot;&gt;&lt;/a&gt; ForMethodName\\(string, object?\\[\\]?\\)&quot;">​</a></h2><p>Creates a context for a method call without reflection data.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MethodExecutionContext</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ForMethodName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> methodName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?[]? </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parameters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>methodName</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The name of the method being called.</p><p><code>parameters</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a>?[]?</p><p>The parameters passed to the method.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="./Belay.Core.Execution.MethodExecutionContext.html">MethodExecutionContext</a></p><p>A method execution context.</p>',13)]))}const _=t(s,[["render",r]]);export{m as __pageData,_ as default};
