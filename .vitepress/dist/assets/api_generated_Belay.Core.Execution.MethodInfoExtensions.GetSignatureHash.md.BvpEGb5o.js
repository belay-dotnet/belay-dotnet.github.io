import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.CUqMdM43.js";const c=JSON.parse('{"title":"Method GetSignatureHash","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.MethodInfoExtensions.GetSignatureHash.md","filePath":"api/generated/Belay.Core.Execution.MethodInfoExtensions.GetSignatureHash.md"}'),n={name:"api/generated/Belay.Core.Execution.MethodInfoExtensions.GetSignatureHash.md"};function o(r,e,h,l,d,p){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-getsignaturehash" tabindex="-1"><a id="Belay_Core_Execution_MethodInfoExtensions_GetSignatureHash_System_Reflection_MethodInfo_"></a> Method GetSignatureHash <a class="header-anchor" href="#method-getsignaturehash" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodInfoExtensions_GetSignatureHash_System_Reflection_MethodInfo_&quot;&gt;&lt;/a&gt; Method GetSignatureHash&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="getsignaturehash-methodinfo" tabindex="-1"><a id="Belay_Core_Execution_MethodInfoExtensions_GetSignatureHash_System_Reflection_MethodInfo_"></a> GetSignatureHash(MethodInfo) <a class="header-anchor" href="#getsignaturehash-methodinfo" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_MethodInfoExtensions_GetSignatureHash_System_Reflection_MethodInfo_&quot;&gt;&lt;/a&gt; GetSignatureHash\\(MethodInfo\\)&quot;">​</a></h2><p>Generates a simple hash of the method signature for caching.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetSignatureHash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">this</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MethodInfo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>method</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a></p><p>The method to hash.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>A hash string representing the method signature.</p>',11)]))}const _=t(n,[["render",o]]);export{c as __pageData,_ as default};
