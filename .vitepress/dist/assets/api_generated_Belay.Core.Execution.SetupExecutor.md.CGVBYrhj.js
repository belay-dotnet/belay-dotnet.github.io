import{_ as n,C as s,c,o as l,j as t,ag as r,a as o,G as i}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Class SetupExecutor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.SetupExecutor.md","filePath":"api/generated/Belay.Core.Execution.SetupExecutor.md"}'),u={name:"api/generated/Belay.Core.Execution.SetupExecutor.md"};function p(h,e,x,_,d,E){const a=s("xref");return l(),c("div",null,[e[4]||(e[4]=t("h1",{id:"class-setupexecutor",tabindex:"-1"},[t("a",{id:"Belay_Core_Execution_SetupExecutor"}),o(" Class SetupExecutor "),t("a",{class:"header-anchor",href:"#class-setupexecutor","aria-label":'Permalink to "<a id="Belay_Core_Execution_SetupExecutor"></a> Class SetupExecutor"'},"​")],-1)),e[5]||(e[5]=t("p",null,[o("Namespace: "),t("a",{href:"./Belay.Core.Execution.html"},"Belay.Core.Execution"),t("br"),o(" Assembly: Belay.Core.dll")],-1)),t("p",null,[e[0]||(e[0]=o("Executor for methods decorated with the ",-1)),i(a,{href:"Belay.Attributes.SetupAttribute","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=o(". Handles device initialization methods with order-based execution, critical failure handling, and extended timeouts for hardware initialization.",-1))]),e[6]||(e[6]=r('<div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetupExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IExecutor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Execution.BaseExecutor.html">BaseExecutor</a> ← <a href="./Belay.Core.Execution.SetupExecutor.html">SetupExecutor</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Execution.IExecutor.html">IExecutor</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Belay.Core.Execution.BaseExecutor.Priority.html#Belay_Core_Execution_BaseExecutor_Priority">BaseExecutor.Priority</a>, <a href="./Belay.Core.Execution.BaseExecutor.CanHandle.html#Belay_Core_Execution_BaseExecutor_CanHandle_System_Reflection_MethodInfo_">BaseExecutor.CanHandle(MethodInfo)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync__1_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync&lt;T&gt;(ExecutionContext, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync(ExecutionContext, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.CleanupAsync.html#Belay_Core_Execution_BaseExecutor_CleanupAsync_System_Threading_CancellationToken_">BaseExecutor.CleanupAsync(CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.Dispose.html#Belay_Core_Execution_BaseExecutor_Dispose">BaseExecutor.Dispose()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p> The SetupExecutor is responsible for executing initialization methods during device connection. It enforces the execution order, handles critical vs non-critical failures, and applies appropriate timeouts for hardware setup. </p><p> Key features: <ul><li>Order-based execution (lower Order values execute first)</li><li>Critical failure handling (can fail device connection)</li><li>Extended timeout support for hardware initialization</li><li>State tracking for initialization completion</li></ul></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Execution.SetupExecutor.-ctor.html#Belay_Core_Execution_SetupExecutor__ctor_Microsoft_Extensions_Logging_ILogger_Belay_Core_Execution_SetupExecutor__">SetupExecutor(ILogger&lt;SetupExecutor&gt;?)</a></p>',12)),t("p",null,[e[2]||(e[2]=o("Initializes a new instance of the ",-1)),i(a,{href:"Belay.Core.Execution.SetupExecutor","data-throw-if-not-resolved":"false"}),e[3]||(e[3]=o(" class.",-1))]),e[7]||(e[7]=r('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Execution.SetupExecutor.Priority.html#Belay_Core_Execution_SetupExecutor_Priority">Priority</a></p><p>Gets the execution priority for this executor. Setup has high priority (90) to ensure initialization occurs early.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Execution.SetupExecutor.ApplyExecutionPolicies.html#Belay_Core_Execution_SetupExecutor_ApplyExecutionPolicies_Belay_Core_Execution_ExecutionContext_">ApplyExecutionPolicies(ExecutionContext)</a></p><p>Applies setup-specific execution policies from the SetupAttribute.</p><p><a href="./Belay.Core.Execution.SetupExecutor.CanHandle.html#Belay_Core_Execution_SetupExecutor_CanHandle_System_Reflection_MethodInfo_">CanHandle(MethodInfo)</a></p><p>Determines whether this executor can handle the specified method.</p><p><a href="./Belay.Core.Execution.SetupExecutor.CleanupAsync.html#Belay_Core_Execution_SetupExecutor_CleanupAsync_System_Threading_CancellationToken_">CleanupAsync(CancellationToken)</a></p><p>Performs cleanup when the executor is disposed. Ensures any pending setup operations are properly handled.</p><p><a href="./Belay.Core.Execution.SetupExecutor.ExecuteAsync.html#Belay_Core_Execution_SetupExecutor_ExecuteAsync__1_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">ExecuteAsync&lt;T&gt;(ExecutionContext, CancellationToken)</a></p><p>Executes setup methods with special error handling for critical vs non-critical setup.</p><p><a href="./Belay.Core.Execution.SetupExecutor.GeneratePythonCodeAsync.html#Belay_Core_Execution_SetupExecutor_GeneratePythonCodeAsync_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">GeneratePythonCodeAsync(ExecutionContext, CancellationToken)</a></p><p>Generates Python code for setup method execution. Setup methods typically execute the method body directly without special handling.</p><p><a href="./Belay.Core.Execution.SetupExecutor.GetCachingPolicyFromAttributes.html#Belay_Core_Execution_SetupExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_">GetCachingPolicyFromAttributes(MethodInfo)</a></p><p>Gets caching policy from SetupAttribute. Setup methods typically don&#39;t use caching as they&#39;re one-time operations.</p><p><a href="./Belay.Core.Execution.SetupExecutor.GetTimeoutFromAttributes.html#Belay_Core_Execution_SetupExecutor_GetTimeoutFromAttributes_System_Reflection_MethodInfo_">GetTimeoutFromAttributes(MethodInfo)</a></p><p>Gets timeout configuration from SetupAttribute.</p>',18))])}const C=n(u,[["render",p]]);export{m as __pageData,C as default};
