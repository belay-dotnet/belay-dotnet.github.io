import{_ as t,c as a,o as i,ag as o}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Method GetCachingPolicyFromAttributes","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.TaskExecutor.GetCachingPolicyFromAttributes.md","filePath":"api/generated/Belay.Core.Execution.TaskExecutor.GetCachingPolicyFromAttributes.md"}'),r={name:"api/generated/Belay.Core.Execution.TaskExecutor.GetCachingPolicyFromAttributes.md"};function s(n,e,c,l,h,d){return i(),a("div",null,e[0]||(e[0]=[o('<h1 id="method-getcachingpolicyfromattributes" tabindex="-1"><a id="Belay_Core_Execution_TaskExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_"></a> Method GetCachingPolicyFromAttributes <a class="header-anchor" href="#method-getcachingpolicyfromattributes" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_TaskExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_&quot;&gt;&lt;/a&gt; Method GetCachingPolicyFromAttributes&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="getcachingpolicyfromattributes-methodinfo" tabindex="-1"><a id="Belay_Core_Execution_TaskExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_"></a> GetCachingPolicyFromAttributes(MethodInfo) <a class="header-anchor" href="#getcachingpolicyfromattributes-methodinfo" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_TaskExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_&quot;&gt;&lt;/a&gt; GetCachingPolicyFromAttributes\\(MethodInfo\\)&quot;">​</a></h2><p>Gets caching policy from method attributes.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> override</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GetCachingPolicyFromAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MethodInfo</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>method</code> <a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a></p><p>The method to inspect.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noreferrer">bool</a></p><p>True if caching should be used; otherwise, false.</p>',11)]))}const m=t(r,[["render",s]]);export{u as __pageData,m as default};
