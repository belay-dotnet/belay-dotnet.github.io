import{_ as r,C as s,c as n,o as i,ag as t,j as c,a as o,G as l}from"./chunks/framework.CUqMdM43.js";const y=JSON.parse('{"title":"Class TaskExecutor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.TaskExecutor.md","filePath":"api/generated/Belay.Core.Execution.TaskExecutor.md"}'),u={name:"api/generated/Belay.Core.Execution.TaskExecutor.md"};function h(_,e,x,p,E,d){const a=s("xref");return i(),n("div",null,[e[2]||(e[2]=t('<h1 id="class-taskexecutor" tabindex="-1"><a id="Belay_Core_Execution_TaskExecutor"></a> Class TaskExecutor <a class="header-anchor" href="#class-taskexecutor" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_TaskExecutor&quot;&gt;&lt;/a&gt; Class TaskExecutor&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><p>Executor for methods decorated with the TaskAttribute. Handles standard method execution with optional caching and timeout configuration.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TaskExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IExecutor</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Execution.BaseExecutor.html">BaseExecutor</a> ← <a href="./Belay.Core.Execution.TaskExecutor.html">TaskExecutor</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Execution.IExecutor.html">IExecutor</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Belay.Core.Execution.BaseExecutor.Priority.html#Belay_Core_Execution_BaseExecutor_Priority">BaseExecutor.Priority</a>, <a href="./Belay.Core.Execution.BaseExecutor.CanHandle.html#Belay_Core_Execution_BaseExecutor_CanHandle_System_Reflection_MethodInfo_">BaseExecutor.CanHandle(MethodInfo)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync__1_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync&lt;T&gt;(ExecutionContext, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync(ExecutionContext, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.CleanupAsync.html#Belay_Core_Execution_BaseExecutor_CleanupAsync_System_Threading_CancellationToken_">BaseExecutor.CleanupAsync(CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.Dispose.html#Belay_Core_Execution_BaseExecutor_Dispose">BaseExecutor.Dispose()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Execution.TaskExecutor.-ctor.html#Belay_Core_Execution_TaskExecutor__ctor_Microsoft_Extensions_Logging_ILogger_Belay_Core_Execution_TaskExecutor__">TaskExecutor(ILogger&lt;TaskExecutor&gt;?)</a></p>',12)),c("p",null,[e[0]||(e[0]=o("Initializes a new instance of the ",-1)),l(a,{href:"Belay.Core.Execution.TaskExecutor","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=o(" class.",-1))]),e[3]||(e[3]=t('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Execution.TaskExecutor.Priority.html#Belay_Core_Execution_TaskExecutor_Priority">Priority</a></p><p>Gets the priority of this executor. Higher values indicate higher priority. Used to determine execution order when multiple executors can handle the same method.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Execution.TaskExecutor.ApplyExecutionPolicies.html#Belay_Core_Execution_TaskExecutor_ApplyExecutionPolicies_Belay_Core_Execution_ExecutionContext_">ApplyExecutionPolicies(ExecutionContext)</a></p><p>Applies execution policies from method attributes to the execution context.</p><p><a href="./Belay.Core.Execution.TaskExecutor.CanHandle.html#Belay_Core_Execution_TaskExecutor_CanHandle_System_Reflection_MethodInfo_">CanHandle(MethodInfo)</a></p><p>Determines whether this executor can handle the specified method.</p><p><a href="./Belay.Core.Execution.TaskExecutor.GeneratePythonCodeAsync.html#Belay_Core_Execution_TaskExecutor_GeneratePythonCodeAsync_Belay_Core_Execution_ExecutionContext_System_Threading_CancellationToken_">GeneratePythonCodeAsync(ExecutionContext, CancellationToken)</a></p><p>Generates Python code for the method execution. Subclasses can override this to implement specialized code generation strategies.</p><p><a href="./Belay.Core.Execution.TaskExecutor.GetCachingPolicyFromAttributes.html#Belay_Core_Execution_TaskExecutor_GetCachingPolicyFromAttributes_System_Reflection_MethodInfo_">GetCachingPolicyFromAttributes(MethodInfo)</a></p><p>Gets caching policy from method attributes.</p><p><a href="./Belay.Core.Execution.TaskExecutor.GetTimeoutFromAttributes.html#Belay_Core_Execution_TaskExecutor_GetTimeoutFromAttributes_System_Reflection_MethodInfo_">GetTimeoutFromAttributes(MethodInfo)</a></p><p>Gets timeout configuration from method attributes.</p>',14))])}const C=r(u,[["render",h]]);export{y as __pageData,C as default};
