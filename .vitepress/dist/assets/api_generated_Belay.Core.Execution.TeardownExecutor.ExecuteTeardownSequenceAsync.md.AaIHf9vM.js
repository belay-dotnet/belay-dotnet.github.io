import{_ as n,c as a,o as t,ag as i}from"./chunks/framework.CUqMdM43.js";const _=JSON.parse('{"title":"Method ExecuteTeardownSequenceAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.TeardownExecutor.ExecuteTeardownSequenceAsync.md","filePath":"api/generated/Belay.Core.Execution.TeardownExecutor.ExecuteTeardownSequenceAsync.md"}'),o={name:"api/generated/Belay.Core.Execution.TeardownExecutor.ExecuteTeardownSequenceAsync.md"};function s(r,e,c,l,d,h){return t(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-executeteardownsequenceasync" tabindex="-1"><a id="Belay_Core_Execution_TeardownExecutor_ExecuteTeardownSequenceAsync_System_Collections_Generic_IEnumerable_System_Reflection_MethodInfo__Belay_Core_IDeviceConnection_System_Threading_CancellationToken_"></a> Method ExecuteTeardownSequenceAsync <a class="header-anchor" href="#method-executeteardownsequenceasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_TeardownExecutor_ExecuteTeardownSequenceAsync_System_Collections_Generic_IEnumerable_System_Reflection_MethodInfo__Belay_Core_IDeviceConnection_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method ExecuteTeardownSequenceAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="executeteardownsequenceasync-ienumerable-methodinfo-ideviceconnection-cancellationtoken" tabindex="-1"><a id="Belay_Core_Execution_TeardownExecutor_ExecuteTeardownSequenceAsync_System_Collections_Generic_IEnumerable_System_Reflection_MethodInfo__Belay_Core_IDeviceConnection_System_Threading_CancellationToken_"></a> ExecuteTeardownSequenceAsync(IEnumerable&lt;MethodInfo&gt;, IDeviceConnection, CancellationToken) <a class="header-anchor" href="#executeteardownsequenceasync-ienumerable-methodinfo-ideviceconnection-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_TeardownExecutor_ExecuteTeardownSequenceAsync_System_Collections_Generic_IEnumerable_System_Reflection_MethodInfo__Belay_Core_IDeviceConnection_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; ExecuteTeardownSequenceAsync\\(IEnumerable&lt;MethodInfo\\&gt;, IDeviceConnection, CancellationToken\\)&quot;">​</a></h2><p>Executes multiple teardown methods in the correct order. This is typically called by the device disconnection process.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteTeardownSequenceAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IEnumerable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MethodInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">teardownMethods</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDeviceConnection</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>teardownMethods</code> <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noreferrer">IEnumerable</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.reflection.methodinfo" target="_blank" rel="noreferrer">MethodInfo</a>&gt;</p><p>The teardown methods to execute.</p><p><code>device</code> <a href="./Belay.Core.IDeviceConnection.html">IDeviceConnection</a></p><p>The device connection.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token for the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task representing the asynchronous teardown operation.</p>',15)]))}const u=n(o,[["render",s]]);export{_ as __pageData,u as default};
