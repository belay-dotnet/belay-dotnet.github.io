import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.CUqMdM43.js";const _=JSON.parse('{"title":"Method ProcessAsync<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.ProcessAsync.md","filePath":"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.ProcessAsync.md"}'),n={name:"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.ProcessAsync.md"};function r(o,e,l,c,h,p){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-processasync-t" tabindex="-1"><a id="Belay_Core_Execution_ThreadAttributePipelineStage_ProcessAsync__1_Belay_Core_Execution_ExecutionContext___0__"></a> Method ProcessAsync&lt;T&gt; <a class="header-anchor" href="#method-processasync-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ThreadAttributePipelineStage_ProcessAsync__1_Belay_Core_Execution_ExecutionContext___0__&quot;&gt;&lt;/a&gt; Method ProcessAsync&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><h2 id="processasync-t-executioncontext-t" tabindex="-1"><a id="Belay_Core_Execution_ThreadAttributePipelineStage_ProcessAsync__1_Belay_Core_Execution_ExecutionContext___0__"></a> ProcessAsync&lt;T&gt;(ExecutionContext&lt;T&gt;) <a class="header-anchor" href="#processasync-t-executioncontext-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ThreadAttributePipelineStage_ProcessAsync__1_Belay_Core_Execution_ExecutionContext___0__&quot;&gt;&lt;/a&gt; ProcessAsync&lt;T\\&gt;\\(ExecutionContext&lt;T\\&gt;\\)&quot;">​</a></h2><p>Processes Thread attribute-specific logic.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecutionContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ProcessAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecutionContext</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>context</code> <a href="./Belay.Core.Execution.ExecutionContext-1.html">ExecutionContext</a>&lt;T&gt;</p><p>The execution context to process.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;<a href="./Belay.Core.Execution.ExecutionContext-1.html">ExecutionContext</a>&lt;T&gt;&gt;</p><p>The processed execution context.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The expected return type.</p>',14)]))}const u=t(n,[["render",r]]);export{_ as __pageData,u as default};
