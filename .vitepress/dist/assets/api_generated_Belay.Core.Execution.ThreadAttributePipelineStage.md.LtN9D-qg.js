import{_ as t,c as a,o as r,ag as i}from"./chunks/framework.CUqMdM43.js";const b=JSON.parse('{"title":"Class ThreadAttributePipelineStage","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.md","filePath":"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.md"}'),s={name:"api/generated/Belay.Core.Execution.ThreadAttributePipelineStage.md"};function o(n,e,l,c,h,p){return r(),a("div",null,e[0]||(e[0]=[i('<h1 id="class-threadattributepipelinestage" tabindex="-1"><a id="Belay_Core_Execution_ThreadAttributePipelineStage"></a> Class ThreadAttributePipelineStage <a class="header-anchor" href="#class-threadattributepipelinestage" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ThreadAttributePipelineStage&quot;&gt;&lt;/a&gt; Class ThreadAttributePipelineStage&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><p>Thread attribute pipeline stage that handles Thread attribute-specific processing.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThreadAttributePipelineStage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IPipelineStage</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Execution.ThreadAttributePipelineStage.html">ThreadAttributePipelineStage</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Execution.IPipelineStage.html">IPipelineStage</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Execution.ThreadAttributePipelineStage.ProcessAsync.html#Belay_Core_Execution_ThreadAttributePipelineStage_ProcessAsync__1_Belay_Core_Execution_ExecutionContext___0__">ProcessAsync&lt;T&gt;(ExecutionContext&lt;T&gt;)</a></p><p>Processes Thread attribute-specific logic.</p>',13)]))}const m=t(s,[["render",o]]);export{b as __pageData,m as default};
