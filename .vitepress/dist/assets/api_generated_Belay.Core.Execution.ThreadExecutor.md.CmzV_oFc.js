import{_ as r,C as n,c as s,o as c,ag as t,j as i,a,G as l}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Class ThreadExecutor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.ThreadExecutor.md","filePath":"api/generated/Belay.Core.Execution.ThreadExecutor.md"}'),h={name:"api/generated/Belay.Core.Execution.ThreadExecutor.md"};function _(d,e,u,p,y,x){const o=n("xref");return c(),s("div",null,[e[2]||(e[2]=t('<h1 id="class-threadexecutor" tabindex="-1"><a id="Belay_Core_Execution_ThreadExecutor"></a> Class ThreadExecutor <a class="header-anchor" href="#class-threadexecutor" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Execution_ThreadExecutor&quot;&gt;&lt;/a&gt; Class ThreadExecutor&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Execution.html">Belay.Core.Execution</a><br> Assembly: Belay.Core.dll</p><p>Executor for methods decorated with the [Thread] attribute. Applies thread-specific policies such as background execution and lifecycle management.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ThreadExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BaseExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IExecutor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Execution.BaseExecutor.html">BaseExecutor</a> ← <a href="./Belay.Core.Execution.ThreadExecutor.html">ThreadExecutor</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Execution.IExecutor.html">IExecutor</a>, <a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="./Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_">BaseExecutor.ApplyPoliciesAndExecuteAsync&lt;T&gt;(string, CancellationToken, string?)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ApplyPoliciesAndExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ApplyPoliciesAndExecuteAsync_System_String_System_Threading_CancellationToken_System_String_">BaseExecutor.ApplyPoliciesAndExecuteAsync(string, CancellationToken, string?)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync__1_System_Reflection_MethodInfo_System_Object_System_Object___System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync&lt;T&gt;(MethodInfo, object?, object?[]?, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.ExecuteAsync.html#Belay_Core_Execution_BaseExecutor_ExecuteAsync_System_Reflection_MethodInfo_System_Object_System_Object___System_Threading_CancellationToken_">BaseExecutor.ExecuteAsync(MethodInfo, object?, object?[]?, CancellationToken)</a>, <a href="./Belay.Core.Execution.BaseExecutor.CanHandle.html#Belay_Core_Execution_BaseExecutor_CanHandle_System_Reflection_MethodInfo_">BaseExecutor.CanHandle(MethodInfo)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Execution.ThreadExecutor.-ctor.html#Belay_Core_Execution_ThreadExecutor__ctor_Belay_Core_Device_Belay_Core_Sessions_IDeviceSessionManager_Microsoft_Extensions_Logging_ILogger_Belay_Core_Execution_ThreadExecutor__Belay_Core_Execution_IExecutionContextService_">ThreadExecutor(Device, IDeviceSessionManager, ILogger&lt;ThreadExecutor&gt;, IExecutionContextService?)</a></p>',12)),i("p",null,[e[0]||(e[0]=a("Initializes a new instance of the ",-1)),l(o,{href:"Belay.Core.Execution.ThreadExecutor","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" class.",-1))]),e[3]||(e[3]=t('<h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Execution.ThreadExecutor.ApplyPoliciesAndExecuteAsync.html#Belay_Core_Execution_ThreadExecutor_ApplyPoliciesAndExecuteAsync__1_System_String_System_Threading_CancellationToken_System_String_">ApplyPoliciesAndExecuteAsync&lt;T&gt;(string, CancellationToken, string?)</a></p><p>Applies thread policies and executes the Python code in a background thread. Thread methods run asynchronously on the device without blocking the host.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.CanHandle.html#Belay_Core_Execution_ThreadExecutor_CanHandle_System_Reflection_MethodInfo_">CanHandle(MethodInfo)</a></p><p>Validates that a method can be handled by this executor.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.CheckThreadHealthAsync.html#Belay_Core_Execution_ThreadExecutor_CheckThreadHealthAsync_System_Threading_CancellationToken_">CheckThreadHealthAsync(CancellationToken)</a></p><p>Checks the health of all running threads and updates their status.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.ClearCacheAsync.html#Belay_Core_Execution_ThreadExecutor_ClearCacheAsync">ClearCacheAsync()</a></p><p>Clears the cache of deployed methods.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.Dispose.html#Belay_Core_Execution_ThreadExecutor_Dispose">Dispose()</a></p><p>Disposes of the executor resources.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.GetDeployedMethodsAsync.html#Belay_Core_Execution_ThreadExecutor_GetDeployedMethodsAsync">GetDeployedMethodsAsync()</a></p><p>Gets all deployed methods in the thread executor.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.GetRunningThreads.html#Belay_Core_Execution_ThreadExecutor_GetRunningThreads">GetRunningThreads()</a></p><p>Gets information about all currently running threads.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.StopAllThreadsAsync.html#Belay_Core_Execution_ThreadExecutor_StopAllThreadsAsync_System_Threading_CancellationToken_">StopAllThreadsAsync(CancellationToken)</a></p><p>Stops all running threads.</p><p><a href="./Belay.Core.Execution.ThreadExecutor.StopThreadAsync.html#Belay_Core_Execution_ThreadExecutor_StopThreadAsync_System_String_System_Threading_CancellationToken_">StopThreadAsync(string, CancellationToken)</a></p><p>Stops a specific thread by name.</p>',19))])}const C=r(h,[["render",_]]);export{m as __pageData,C as default};
