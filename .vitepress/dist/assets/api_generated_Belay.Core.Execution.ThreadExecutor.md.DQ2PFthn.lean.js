import{_ as i,C as s,c,o as l,j as t,ag as r,a,G as n}from"./chunks/framework.CUqMdM43.js";const y=JSON.parse('{"title":"Class ThreadExecutor","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Execution.ThreadExecutor.md","filePath":"api/generated/Belay.Core.Execution.ThreadExecutor.md"}'),h={name:"api/generated/Belay.Core.Execution.ThreadExecutor.md"};function u(d,e,_,p,x,m){const o=s("xref");return l(),c("div",null,[e[4]||(e[4]=t("h1",{id:"class-threadexecutor",tabindex:"-1"},[t("a",{id:"Belay_Core_Execution_ThreadExecutor"}),a(" Class ThreadExecutor "),t("a",{class:"header-anchor",href:"#class-threadexecutor","aria-label":'Permalink to "<a id="Belay_Core_Execution_ThreadExecutor"></a> Class ThreadExecutor"'},"â€‹")],-1)),e[5]||(e[5]=t("p",null,[a("Namespace: "),t("a",{href:"./Belay.Core.Execution.html"},"Belay.Core.Execution"),t("br"),a(" Assembly: Belay.Core.dll")],-1)),t("p",null,[e[0]||(e[0]=a("Executor for methods decorated with the ",-1)),n(o,{href:"Belay.Attributes.ThreadAttribute","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(". Handles background thread execution on MicroPython devices with lifecycle management, auto-restart capabilities, priority handling, and runtime limits.",-1))]),e[6]||(e[6]=r("",12)),t("p",null,[e[2]||(e[2]=a("Initializes a new instance of the ",-1)),n(o,{href:"Belay.Core.Execution.ThreadExecutor","data-throw-if-not-resolved":"false"}),e[3]||(e[3]=a(" class.",-1))]),e[7]||(e[7]=r("",24))])}const C=i(h,[["render",u]]);export{y as __pageData,C as default};
