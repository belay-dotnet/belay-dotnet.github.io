import{_ as r,C as i,c as o,o as s,ag as a,j as l,a as t,G as c}from"./chunks/framework.CUqMdM43.js";const f=JSON.parse('{"title":"Class LinuxSerialConnection","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.LinuxSerialConnection.md","filePath":"api/generated/Belay.Core.LinuxSerialConnection.md"}'),p={name:"api/generated/Belay.Core.LinuxSerialConnection.md"};function h(m,e,d,u,C,_){const n=i("xref");return s(),o("div",null,[e[2]||(e[2]=a('<h1 id="class-linuxserialconnection" tabindex="-1"><a id="Belay_Core_LinuxSerialConnection"></a> Class LinuxSerialConnection <a class="header-anchor" href="#class-linuxserialconnection" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_LinuxSerialConnection&quot;&gt;&lt;/a&gt; Class LinuxSerialConnection&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><p>Minimal Linux-compatible serial connection using file I/O operations. Simple cross-platform serial communication for MicroPython devices.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LinuxSerialConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.LinuxSerialConnection.html">LinuxSerialConnection</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.LinuxSerialConnection.-ctor.html#Belay_Core_LinuxSerialConnection__ctor_System_String_">LinuxSerialConnection(string)</a></p>',12)),l("p",null,[e[0]||(e[0]=t("Initializes a new instance of the ",-1)),c(n,{href:"Belay.Core.LinuxSerialConnection","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(" class.",-1))]),e[3]||(e[3]=a('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.LinuxSerialConnection.IsOpen.html#Belay_Core_LinuxSerialConnection_IsOpen">IsOpen</a></p><p>Gets a value indicating whether the connection is open.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.LinuxSerialConnection.Close.html#Belay_Core_LinuxSerialConnection_Close">Close()</a></p><p>Closes the serial connection.</p><p><a href="./Belay.Core.LinuxSerialConnection.Dispose.html#Belay_Core_LinuxSerialConnection_Dispose">Dispose()</a></p><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</p><p><a href="./Belay.Core.LinuxSerialConnection.GetStream.html#Belay_Core_LinuxSerialConnection_GetStream">GetStream()</a></p><p>Gets the underlying stream for advanced protocol operations.</p><p><a href="./Belay.Core.LinuxSerialConnection.OpenAsync.html#Belay_Core_LinuxSerialConnection_OpenAsync">OpenAsync()</a></p><p>Opens the serial connection.</p><p><a href="./Belay.Core.LinuxSerialConnection.ReadExistingAsync.html#Belay_Core_LinuxSerialConnection_ReadExistingAsync">ReadExistingAsync()</a></p><p>Reads existing data from the port with simple timeout.</p><p><a href="./Belay.Core.LinuxSerialConnection.WriteAsync.html#Belay_Core_LinuxSerialConnection_WriteAsync_System_String_">WriteAsync(string)</a></p><p>Writes a string to the serial port.</p>',16))])}const y=r(p,[["render",h]]);export{f as __pageData,y as default};
