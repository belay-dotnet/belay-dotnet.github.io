import{_ as a,c as n,o as s,ag as t}from"./chunks/framework.CUqMdM43.js";const y=JSON.parse('{"title":"Method OpenAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.ProcessSerialConnection.OpenAsync.md","filePath":"api/generated/Belay.Core.ProcessSerialConnection.OpenAsync.md"}'),r={name:"api/generated/Belay.Core.ProcessSerialConnection.OpenAsync.md"};function o(i,e,l,c,p,d){return s(),n("div",null,e[0]||(e[0]=[t('<h1 id="method-openasync" tabindex="-1"><a id="Belay_Core_ProcessSerialConnection_OpenAsync"></a> Method OpenAsync <a class="header-anchor" href="#method-openasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_ProcessSerialConnection_OpenAsync&quot;&gt;&lt;/a&gt; Method OpenAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="openasync" tabindex="-1"><a id="Belay_Core_ProcessSerialConnection_OpenAsync"></a> OpenAsync() <a class="header-anchor" href="#openasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_ProcessSerialConnection_OpenAsync&quot;&gt;&lt;/a&gt; OpenAsync\\(\\)&quot;">​</a></h2><p>Opens the serial connection using process-based configuration.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OpenAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',7)]))}const _=a(r,[["render",o]]);export{y as __pageData,_ as default};
