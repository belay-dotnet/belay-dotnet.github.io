import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method ReadWithTimeoutAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.ProcessSerialConnection.ReadWithTimeoutAsync.md","filePath":"api/generated/Belay.Core.ProcessSerialConnection.ReadWithTimeoutAsync.md"}'),n={name:"api/generated/Belay.Core.ProcessSerialConnection.ReadWithTimeoutAsync.md"};function r(o,e,l,h,d,c){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="method-readwithtimeoutasync" tabindex="-1"><a id="Belay_Core_ProcessSerialConnection_ReadWithTimeoutAsync_System_Int32_"></a> Method ReadWithTimeoutAsync <a class="header-anchor" href="#method-readwithtimeoutasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_ProcessSerialConnection_ReadWithTimeoutAsync_System_Int32_&quot;&gt;&lt;/a&gt; Method ReadWithTimeoutAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="readwithtimeoutasync-int" tabindex="-1"><a id="Belay_Core_ProcessSerialConnection_ReadWithTimeoutAsync_System_Int32_"></a> ReadWithTimeoutAsync(int) <a class="header-anchor" href="#readwithtimeoutasync-int" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_ProcessSerialConnection_ReadWithTimeoutAsync_System_Int32_&quot;&gt;&lt;/a&gt; ReadWithTimeoutAsync\\(int\\)&quot;">​</a></h2><p>Reads available data from the port using timeout-controlled cat.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadWithTimeoutAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> timeoutMs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>timeoutMs</code> <a href="https://learn.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noreferrer">int</a></p><p>Timeout in milliseconds.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>&gt;</p><p>Available data as string.</p>',11)]))}const u=a(n,[["render",r]]);export{m as __pageData,u as default};
