import{_ as a,c as t,o,ag as s}from"./chunks/framework.CUqMdM43.js";const k=JSON.parse('{"title":"Method ExecuteCodeAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.ExecuteCodeAsync.md","filePath":"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.ExecuteCodeAsync.md"}'),i={name:"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.ExecuteCodeAsync.md"};function n(l,e,r,c,p,d){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="method-executecodeasync" tabindex="-1"><a id="Belay_Core_Protocol_AdaptiveRawReplProtocol_ExecuteCodeAsync_System_String_System_Threading_CancellationToken_"></a> Method ExecuteCodeAsync <a class="header-anchor" href="#method-executecodeasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Protocol_AdaptiveRawReplProtocol_ExecuteCodeAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method ExecuteCodeAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Protocol.html">Belay.Core.Protocol</a><br> Assembly: Belay.Core.dll</p><h2 id="executecodeasync-string-cancellationtoken" tabindex="-1"><a id="Belay_Core_Protocol_AdaptiveRawReplProtocol_ExecuteCodeAsync_System_String_System_Threading_CancellationToken_"></a> ExecuteCodeAsync(string, CancellationToken) <a class="header-anchor" href="#executecodeasync-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Protocol_AdaptiveRawReplProtocol_ExecuteCodeAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; ExecuteCodeAsync\\(string, CancellationToken\\)&quot;">​</a></h2><p>Execute code using the adaptive Raw REPL protocol with automatic optimization.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">RawReplResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ExecuteCodeAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>code</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The Python code to execute.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;<a href="./Belay.Core.Protocol.RawReplResponse.html">RawReplResponse</a>&gt;</p><p>The result of code execution.</p>',13)]))}const _=a(i,[["render",n]]);export{k as __pageData,_ as default};
