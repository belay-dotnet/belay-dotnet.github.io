import{_ as r,C as l,c as i,o as s,ag as t,j as p,a as o,G as c}from"./chunks/framework.CUqMdM43.js";const f=JSON.parse('{"title":"Class AdaptiveRawReplProtocol","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.md","filePath":"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.md"}'),n={name:"api/generated/Belay.Core.Protocol.AdaptiveRawReplProtocol.md"};function d(h,e,_,m,P,b){const a=l("xref");return s(),i("div",null,[e[2]||(e[2]=t('<h1 id="class-adaptiverawreplprotocol" tabindex="-1"><a id="Belay_Core_Protocol_AdaptiveRawReplProtocol"></a> Class AdaptiveRawReplProtocol <a class="header-anchor" href="#class-adaptiverawreplprotocol" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Protocol_AdaptiveRawReplProtocol&quot;&gt;&lt;/a&gt; Class AdaptiveRawReplProtocol&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Protocol.html">Belay.Core.Protocol</a><br> Assembly: Belay.Core.dll</p><p>Adaptive implementation of MicroPython Raw REPL protocol that auto-detects device capabilities and adjusts protocol parameters for optimal compatibility and performance.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AdaptiveRawReplProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.html">AdaptiveRawReplProtocol</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.-ctor.html#Belay_Core_Protocol_AdaptiveRawReplProtocol__ctor_System_IO_Stream_Microsoft_Extensions_Logging_ILogger_Belay_Core_Protocol_AdaptiveRawReplProtocol__Belay_Core_Protocol_RawReplConfiguration_">AdaptiveRawReplProtocol(Stream, ILogger&lt;AdaptiveRawReplProtocol&gt;, RawReplConfiguration?)</a></p>',12)),p("p",null,[e[0]||(e[0]=o("Initializes a new instance of the ",-1)),c(a,{href:"Belay.Core.Protocol.AdaptiveRawReplProtocol","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=o(" class.",-1))]),e[3]||(e[3]=t('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.Configuration.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_Configuration">Configuration</a></p><p>Gets the current configuration being used.</p><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.CurrentState.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_CurrentState">CurrentState</a></p><p>Gets the current state of the protocol.</p><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.DetectedCapabilities.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_DetectedCapabilities">DetectedCapabilities</a></p><p>Gets the detected device capabilities, if available.</p><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.Metrics.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_Metrics">Metrics</a></p><p>Gets the current protocol metrics.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.Dispose.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_Dispose">Dispose()</a></p><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</p><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.ExecuteCodeAsync.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_ExecuteCodeAsync_System_String_System_Threading_CancellationToken_">ExecuteCodeAsync(string, CancellationToken)</a></p><p>Execute code using the adaptive Raw REPL protocol with automatic optimization.</p><p><a href="./Belay.Core.Protocol.AdaptiveRawReplProtocol.InitializeAsync.html#Belay_Core_Protocol_AdaptiveRawReplProtocol_InitializeAsync_System_Threading_CancellationToken_">InitializeAsync(CancellationToken)</a></p><p>Initialize the adaptive Raw REPL protocol with capability detection.</p>',16))])}const u=r(n,[["render",d]]);export{f as __pageData,u as default};
