import{_ as r,C as l,c as s,o as n,ag as o,j as i,a as t,G as c}from"./chunks/framework.CUqMdM43.js";const f=JSON.parse('{"title":"Class RawReplProtocol","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Protocol.RawReplProtocol.md","filePath":"api/generated/Belay.Core.Protocol.RawReplProtocol.md"}'),p={name:"api/generated/Belay.Core.Protocol.RawReplProtocol.md"};function h(d,e,m,_,R,P){const a=l("xref");return n(),s("div",null,[e[2]||(e[2]=o('<h1 id="class-rawreplprotocol" tabindex="-1"><a id="Belay_Core_Protocol_RawReplProtocol"></a> Class RawReplProtocol <a class="header-anchor" href="#class-rawreplprotocol" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Protocol_RawReplProtocol&quot;&gt;&lt;/a&gt; Class RawReplProtocol&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Protocol.html">Belay.Core.Protocol</a><br> Assembly: Belay.Core.dll</p><p>Implementation of MicroPython Raw REPL protocol with support for both raw mode and raw-paste mode.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RawReplProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Protocol.RawReplProtocol.html">RawReplProtocol</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h2><p> This class handles the low-level Raw REPL protocol communication with MicroPython devices. It supports both the original raw mode (Ctrl+A) and the newer raw-paste mode with flow control for reliable transfer of larger code blocks. </p><p> The protocol handles: <ul><li>Mode switching between normal REPL and raw modes</li><li>Flow control for large data transfers</li><li>Error detection and recovery</li><li>Timeout handling for device communication</li></ul></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.RawReplProtocol.-ctor.html#Belay_Core_Protocol_RawReplProtocol__ctor_System_IO_Stream_Microsoft_Extensions_Logging_ILogger_Belay_Core_Protocol_RawReplProtocol__">RawReplProtocol(Stream, ILogger&lt;RawReplProtocol&gt;)</a></p>',15)),i("p",null,[e[0]||(e[0]=t("Initializes a new instance of the ",-1)),c(a,{href:"Belay.Core.Protocol.RawReplProtocol","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(" class.",-1))]),e[3]||(e[3]=o('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.RawReplProtocol.CurrentState.html#Belay_Core_Protocol_RawReplProtocol_CurrentState">CurrentState</a></p><p>Gets current state of the Raw REPL protocol.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Protocol.RawReplProtocol.Dispose.html#Belay_Core_Protocol_RawReplProtocol_Dispose">Dispose()</a></p><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</p><p><a href="./Belay.Core.Protocol.RawReplProtocol.EnterRawModeAsync.html#Belay_Core_Protocol_RawReplProtocol_EnterRawModeAsync_System_Threading_CancellationToken_">EnterRawModeAsync(CancellationToken)</a></p><p>Enter raw REPL mode.</p><p><a href="./Belay.Core.Protocol.RawReplProtocol.ExecuteCodeAsync.html#Belay_Core_Protocol_RawReplProtocol_ExecuteCodeAsync_System_String_System_Boolean_System_Threading_CancellationToken_">ExecuteCodeAsync(string, bool, CancellationToken)</a></p><p>Execute code using the Raw REPL protocol.</p><p><a href="./Belay.Core.Protocol.RawReplProtocol.ExitRawModeAsync.html#Belay_Core_Protocol_RawReplProtocol_ExitRawModeAsync_System_Threading_CancellationToken_">ExitRawModeAsync(CancellationToken)</a></p><p>Exit raw REPL mode back to normal mode.</p><p><a href="./Belay.Core.Protocol.RawReplProtocol.InitializeAsync.html#Belay_Core_Protocol_RawReplProtocol_InitializeAsync_System_Threading_CancellationToken_">InitializeAsync(CancellationToken)</a></p><p>Initialize the Raw REPL protocol.</p>',14))])}const y=r(p,[["render",h]]);export{f as __pageData,y as default};
