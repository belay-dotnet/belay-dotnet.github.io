import{_ as a,c as i,o,ag as p}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Enum DeviceFeature","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.DeviceFeature.md","filePath":"api/generated/Belay.Core.Sessions.DeviceFeature.md"}'),s={name:"api/generated/Belay.Core.Sessions.DeviceFeature.md"};function t(c,e,r,d,n,l){return o(),i("div",null,e[0]||(e[0]=[p('<h1 id="enum-devicefeature" tabindex="-1"><a id="Belay_Core_Sessions_DeviceFeature"></a> Enum DeviceFeature <a class="header-anchor" href="#enum-devicefeature" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_DeviceFeature&quot;&gt;&lt;/a&gt; Enum DeviceFeature&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Individual device features that can be tested.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceFeature</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p><code>ADC = 1</code></p><p>Analog-to-Digital Converter.</p><p><code>Audio = 14</code></p><p>Audio processing.</p><p><code>Bluetooth = 10</code></p><p>Bluetooth connectivity.</p><p><code>CryptoAccel = 11</code></p><p>Hardware crypto acceleration.</p><p><code>Display = 13</code></p><p>Display controller.</p><p><code>FileSystem = 8</code></p><p>File system access.</p><p><code>GPIO = 0</code></p><p>GPIO pin control.</p><p><code>I2C = 3</code></p><p>I2C communication.</p><p><code>PWM = 2</code></p><p>Pulse Width Modulation.</p><p><code>RTC = 6</code></p><p>Real-time clock.</p><p><code>SPI = 4</code></p><p>SPI communication.</p><p><code>Threading = 7</code></p><p>Threading support.</p><p><code>Timer = 5</code></p><p>Hardware timers.</p><p><code>TouchSensor = 12</code></p><p>Touch sensor support.</p><p><code>WiFi = 9</code></p><p>WiFi connectivity.</p>',35)]))}const m=a(s,[["render",t]]);export{h as __pageData,m as default};
