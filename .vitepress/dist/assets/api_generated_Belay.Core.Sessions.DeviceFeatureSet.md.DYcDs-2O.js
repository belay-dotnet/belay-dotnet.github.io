import{_ as a,c as s,o as i,ag as p}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Enum DeviceFeatureSet","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.DeviceFeatureSet.md","filePath":"api/generated/Belay.Core.Sessions.DeviceFeatureSet.md"}'),t={name:"api/generated/Belay.Core.Sessions.DeviceFeatureSet.md"};function o(c,e,r,n,d,l){return i(),s("div",null,e[0]||(e[0]=[p(`<h1 id="enum-devicefeatureset" tabindex="-1"><a id="Belay_Core_Sessions_DeviceFeatureSet"></a> Enum DeviceFeatureSet <a class="header-anchor" href="#enum-devicefeatureset" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_DeviceFeatureSet&quot;&gt;&lt;/a&gt; Enum DeviceFeatureSet&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Represents a set of device features.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceFeatureSet</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p><code>ADC = 2</code></p><p>Analog-to-Digital Converter.</p><p><code>Audio = 16384</code></p><p>Audio processing capabilities.</p><p><code>Bluetooth = 1024</code></p><p>Bluetooth connectivity.</p><p><code>CryptoAccel = 2048</code></p><p>Hardware cryptographic acceleration.</p><p><code>Display = 8192</code></p><p>Display controller.</p><p><code>FileSystem = 256</code></p><p>File system access.</p><p><code>GPIO = 1</code></p><p>Basic GPIO pin control.</p><p><code>I2C = 8</code></p><p>I2C communication protocol.</p><p><code>None = 0</code></p><p>No features detected.</p><p><code>PWM = 4</code></p><p>Pulse Width Modulation.</p><p><code>RTC = 64</code></p><p>Real-time clock.</p><p><code>SPI = 16</code></p><p>SPI communication protocol.</p><p><code>Threading = 128</code></p><p>Threading support.</p><p><code>Timer = 32</code></p><p>Hardware timers.</p><p><code>TouchSensor = 4096</code></p><p>Touch sensor support.</p><p><code>WiFi = 512</code></p><p>WiFi connectivity.</p>`,37)]))}const m=a(t,[["render",o]]);export{h as __pageData,m as default};
