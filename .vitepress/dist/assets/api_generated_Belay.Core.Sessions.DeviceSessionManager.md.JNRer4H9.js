import{_ as i,C as o,c as t,o as r,ag as s,j as c,a,G as l}from"./chunks/framework.CUqMdM43.js";const C=JSON.parse('{"title":"Class DeviceSessionManager","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.DeviceSessionManager.md","filePath":"api/generated/Belay.Core.Sessions.DeviceSessionManager.md"}'),_={name:"api/generated/Belay.Core.Sessions.DeviceSessionManager.md"};function p(h,e,S,m,d,g){const n=o("xref");return r(),t("div",null,[e[2]||(e[2]=s('<h1 id="class-devicesessionmanager" tabindex="-1"><a id="Belay_Core_Sessions_DeviceSessionManager"></a> Class DeviceSessionManager <a class="header-anchor" href="#class-devicesessionmanager" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_DeviceSessionManager&quot;&gt;&lt;/a&gt; Class DeviceSessionManager&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Manages device sessions and provides session coordination.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceSessionManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDeviceSessionManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IAsyncDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Sessions.DeviceSessionManager.html">DeviceSessionManager</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.html">IDeviceSessionManager</a>, <a href="https://learn.microsoft.com/dotnet/api/system.iasyncdisposable" target="_blank" rel="noreferrer">IAsyncDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.DeviceSessionManager.-ctor.html#Belay_Core_Sessions_DeviceSessionManager__ctor_Microsoft_Extensions_Logging_ILoggerFactory_">DeviceSessionManager(ILoggerFactory)</a></p>',12)),c("p",null,[e[0]||(e[0]=a("Initializes a new instance of the ",-1)),l(n,{href:"Belay.Core.Sessions.DeviceSessionManager","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" class.",-1))]),e[3]||(e[3]=s('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.DeviceSessionManager.Capabilities.html#Belay_Core_Sessions_DeviceSessionManager_Capabilities">Capabilities</a></p><p>Gets the device capabilities if they have been detected.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.CurrentSessionId.html#Belay_Core_Sessions_DeviceSessionManager_CurrentSessionId">CurrentSessionId</a></p><p>Gets the current session identifier, if any.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.State.html#Belay_Core_Sessions_DeviceSessionManager_State">State</a></p><p>Gets the current state of the session manager.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.DeviceSessionManager.CreateSessionAsync.html#Belay_Core_Sessions_DeviceSessionManager_CreateSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Threading_CancellationToken_">CreateSessionAsync(IDeviceCommunication, CancellationToken)</a></p><p>Creates a new session for device operations.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.DisposeAsync.html#Belay_Core_Sessions_DeviceSessionManager_DisposeAsync">DisposeAsync()</a></p><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.EndSessionAsync.html#Belay_Core_Sessions_DeviceSessionManager_EndSessionAsync_System_String_System_Threading_CancellationToken_">EndSessionAsync(string, CancellationToken)</a></p><p>Ends the specified session and cleans up its resources.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.ExecuteInSessionAsync.html#Belay_Core_Sessions_DeviceSessionManager_ExecuteInSessionAsync__1_Belay_Core_Communication_IDeviceCommunication_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_">ExecuteInSessionAsync&lt;T&gt;(IDeviceCommunication, Func&lt;IDeviceSession, Task&lt;T&gt;&gt;, CancellationToken)</a></p><p>Executes an operation within a session context, creating one if necessary.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.ExecuteInSessionAsync.html#Belay_Core_Sessions_DeviceSessionManager_ExecuteInSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task__System_Threading_CancellationToken_">ExecuteInSessionAsync(IDeviceCommunication, Func&lt;IDeviceSession, Task&gt;, CancellationToken)</a></p><p>Executes an operation within a session context, creating one if necessary.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.GetOrCreateSessionAsync.html#Belay_Core_Sessions_DeviceSessionManager_GetOrCreateSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Threading_CancellationToken_">GetOrCreateSessionAsync(IDeviceCommunication, CancellationToken)</a></p><p>Gets the current session or creates a new one if none exists.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.GetSessionStatsAsync.html#Belay_Core_Sessions_DeviceSessionManager_GetSessionStatsAsync_System_Threading_CancellationToken_">GetSessionStatsAsync(CancellationToken)</a></p><p>Gets statistics about the session manager.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.CapabilitiesChanged.html#Belay_Core_Sessions_DeviceSessionManager_CapabilitiesChanged">CapabilitiesChanged</a></p><p>Occurs when device capabilities are detected or updated.</p><p><a href="./Belay.Core.Sessions.DeviceSessionManager.StateChanged.html#Belay_Core_Sessions_DeviceSessionManager_StateChanged">StateChanged</a></p><p>Occurs when the session manager state changes.</p>',26))])}const u=i(_,[["render",p]]);export{C as __pageData,u as default};
