import{_ as s,c as a,o as i,ag as t}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Enum DeviceSessionState","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.DeviceSessionState.md","filePath":"api/generated/Belay.Core.Sessions.DeviceSessionState.md"}'),n={name:"api/generated/Belay.Core.Sessions.DeviceSessionState.md"};function o(r,e,p,d,l,c){return i(),a("div",null,e[0]||(e[0]=[t('<h1 id="enum-devicesessionstate" tabindex="-1"><a id="Belay_Core_Sessions_DeviceSessionState"></a> Enum DeviceSessionState <a class="header-anchor" href="#enum-devicesessionstate" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_DeviceSessionState&quot;&gt;&lt;/a&gt; Enum DeviceSessionState&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Represents the possible states of a device session manager.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceSessionState</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="fields" tabindex="-1">Fields <a class="header-anchor" href="#fields" aria-label="Permalink to &quot;Fields&quot;">​</a></h2><p><code>Active = 1</code></p><p>Session manager is active and ready to create sessions.</p><p><code>Disposed = 3</code></p><p>Session manager has been disposed.</p><p><code>Inactive = 0</code></p><p>Session manager is inactive.</p><p><code>Shutdown = 2</code></p><p>Session manager is shutting down.</p>',13)]))}const m=s(n,[["render",o]]);export{h as __pageData,m as default};
