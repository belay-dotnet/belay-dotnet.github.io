import{_ as s,c as a,o as n,ag as i}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"Interface IDeviceSessionManager","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.IDeviceSessionManager.md","filePath":"api/generated/Belay.Core.Sessions.IDeviceSessionManager.md"}'),o={name:"api/generated/Belay.Core.Sessions.IDeviceSessionManager.md"};function t(r,e,c,l,_,p){return n(),a("div",null,e[0]||(e[0]=[i('<h1 id="interface-idevicesessionmanager" tabindex="-1"><a id="Belay_Core_Sessions_IDeviceSessionManager"></a> Interface IDeviceSessionManager <a class="header-anchor" href="#interface-idevicesessionmanager" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IDeviceSessionManager&quot;&gt;&lt;/a&gt; Interface IDeviceSessionManager&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Manages device sessions and provides session coordination.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IDeviceSessionManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IAsyncDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.iasyncdisposable" target="_blank" rel="noreferrer">IAsyncDisposable</a></p><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.Capabilities.html#Belay_Core_Sessions_IDeviceSessionManager_Capabilities">Capabilities</a></p><p>Gets the device capabilities if they have been detected.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.CurrentSessionId.html#Belay_Core_Sessions_IDeviceSessionManager_CurrentSessionId">CurrentSessionId</a></p><p>Gets the current session identifier, if any.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.State.html#Belay_Core_Sessions_IDeviceSessionManager_State">State</a></p><p>Gets the current state of the session manager.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.CreateSessionAsync.html#Belay_Core_Sessions_IDeviceSessionManager_CreateSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Threading_CancellationToken_">CreateSessionAsync(IDeviceCommunication, CancellationToken)</a></p><p>Creates a new session for device operations.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.EndSessionAsync.html#Belay_Core_Sessions_IDeviceSessionManager_EndSessionAsync_System_String_System_Threading_CancellationToken_">EndSessionAsync(string, CancellationToken)</a></p><p>Ends the specified session and cleans up its resources.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.ExecuteInSessionAsync.html#Belay_Core_Sessions_IDeviceSessionManager_ExecuteInSessionAsync__1_Belay_Core_Communication_IDeviceCommunication_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task___0___System_Threading_CancellationToken_">ExecuteInSessionAsync&lt;T&gt;(IDeviceCommunication, Func&lt;IDeviceSession, Task&lt;T&gt;&gt;, CancellationToken)</a></p><p>Executes an operation within a session context, creating one if necessary.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.ExecuteInSessionAsync.html#Belay_Core_Sessions_IDeviceSessionManager_ExecuteInSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Func_Belay_Core_Sessions_IDeviceSession_System_Threading_Tasks_Task__System_Threading_CancellationToken_">ExecuteInSessionAsync(IDeviceCommunication, Func&lt;IDeviceSession, Task&gt;, CancellationToken)</a></p><p>Executes an operation within a session context, creating one if necessary.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.GetOrCreateSessionAsync.html#Belay_Core_Sessions_IDeviceSessionManager_GetOrCreateSessionAsync_Belay_Core_Communication_IDeviceCommunication_System_Threading_CancellationToken_">GetOrCreateSessionAsync(IDeviceCommunication, CancellationToken)</a></p><p>Gets the current session or creates a new one if none exists.</p><p><a href="./Belay.Core.Sessions.IDeviceSessionManager.GetSessionStatsAsync.html#Belay_Core_Sessions_IDeviceSessionManager_GetSessionStatsAsync_System_Threading_CancellationToken_">GetSessionStatsAsync(CancellationToken)</a></p><p>Gets statistics about the session manager.</p>',26)]))}const m=s(o,[["render",t]]);export{h as __pageData,m as default};
