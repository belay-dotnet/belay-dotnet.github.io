import{_ as a,C as r,c as o,o as i,ag as n,j as c,a as t,G as l}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method RegisterExecutorAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.IExecutorContext.RegisterExecutorAsync.md","filePath":"api/generated/Belay.Core.Sessions.IExecutorContext.RegisterExecutorAsync.md"}'),p={name:"api/generated/Belay.Core.Sessions.IExecutorContext.RegisterExecutorAsync.md"};function h(d,e,y,u,_,g){const s=r("xref");return i(),o("div",null,[e[2]||(e[2]=n('<h1 id="method-registerexecutorasync" tabindex="-1"><a id="Belay_Core_Sessions_IExecutorContext_RegisterExecutorAsync_System_Type_System_Object_"></a> Method RegisterExecutorAsync <a class="header-anchor" href="#method-registerexecutorasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IExecutorContext_RegisterExecutorAsync_System_Type_System_Object_&quot;&gt;&lt;/a&gt; Method RegisterExecutorAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><h2 id="registerexecutorasync-type-object" tabindex="-1"><a id="Belay_Core_Sessions_IExecutorContext_RegisterExecutorAsync_System_Type_System_Object_"></a> RegisterExecutorAsync(Type, object) <a class="header-anchor" href="#registerexecutorasync-type-object" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IExecutorContext_RegisterExecutorAsync_System_Type_System_Object_&quot;&gt;&lt;/a&gt; RegisterExecutorAsync\\(Type, object\\)&quot;">​</a></h2><p>Registers an executor with the session for coordination.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegisterExecutorAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> executorType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">object</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> executorInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>executorType</code> <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noreferrer">Type</a></p><p>The type of executor being registered.</p><p><code>executorInstance</code> <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a></p><p>The executor instance being registered.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',12)),c("p",null,[e[0]||(e[0]=t("A ",-1)),l(s,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(" representing the asynchronous operation.",-1))])])}const k=a(p,[["render",h]]);export{m as __pageData,k as default};
