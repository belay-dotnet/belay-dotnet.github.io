import{_ as t,c as s,o as a,ag as i}from"./chunks/framework.CUqMdM43.js";const _=JSON.parse('{"title":"Interface IFileSystemContext","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.IFileSystemContext.md","filePath":"api/generated/Belay.Core.Sessions.IFileSystemContext.md"}'),o={name:"api/generated/Belay.Core.Sessions.IFileSystemContext.md"};function n(r,e,l,c,p,y){return a(),s("div",null,e[0]||(e[0]=[i('<h1 id="interface-ifilesystemcontext" tabindex="-1"><a id="Belay_Core_Sessions_IFileSystemContext"></a> Interface IFileSystemContext <a class="header-anchor" href="#interface-ifilesystemcontext" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IFileSystemContext&quot;&gt;&lt;/a&gt; Interface IFileSystemContext&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Provides file system context and state management for a device session.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> IFileSystemContext</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.IFileSystemContext.CachedFileInfo.html#Belay_Core_Sessions_IFileSystemContext_CachedFileInfo">CachedFileInfo</a></p><p>Gets cached file metadata for improved performance.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.Capabilities.html#Belay_Core_Sessions_IFileSystemContext_Capabilities">Capabilities</a></p><p>Gets the file system capabilities of the device.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.CurrentDirectory.html#Belay_Core_Sessions_IFileSystemContext_CurrentDirectory">CurrentDirectory</a></p><p>Gets or sets the current working directory on the device.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.IsFileSystemSupported.html#Belay_Core_Sessions_IFileSystemContext_IsFileSystemSupported">IsFileSystemSupported</a></p><p>Gets a value indicating whether file system operations are supported.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.IFileSystemContext.ClearCache.html#Belay_Core_Sessions_IFileSystemContext_ClearCache">ClearCache()</a></p><p>Clears all cached file system information.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.GetFileMetadataAsync.html#Belay_Core_Sessions_IFileSystemContext_GetFileMetadataAsync_System_String_System_Threading_CancellationToken_">GetFileMetadataAsync(string, CancellationToken)</a></p><p>Gets file metadata from cache or queries the device if not cached.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.InvalidateCacheAsync.html#Belay_Core_Sessions_IFileSystemContext_InvalidateCacheAsync_System_String_System_Threading_CancellationToken_">InvalidateCacheAsync(string, CancellationToken)</a></p><p>Invalidates cached file information for the specified path.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.ListDirectoryAsync.html#Belay_Core_Sessions_IFileSystemContext_ListDirectoryAsync_System_String_System_Boolean_System_Threading_CancellationToken_">ListDirectoryAsync(string, bool, CancellationToken)</a></p><p>Lists the contents of a directory with caching support.</p><p><a href="./Belay.Core.Sessions.IFileSystemContext.RefreshDirectoryAsync.html#Belay_Core_Sessions_IFileSystemContext_RefreshDirectoryAsync_System_String_System_Threading_CancellationToken_">RefreshDirectoryAsync(string, CancellationToken)</a></p><p>Refreshes the directory cache for the specified path.</p>',24)]))}const m=t(o,[["render",n]]);export{_ as __pageData,m as default};
