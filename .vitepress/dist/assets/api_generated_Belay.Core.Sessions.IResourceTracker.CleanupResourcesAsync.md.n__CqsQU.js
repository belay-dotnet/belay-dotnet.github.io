import{_ as n,C as r,c as t,o,ag as l,j as i,a,G as c}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method CleanupResourcesAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.IResourceTracker.CleanupResourcesAsync.md","filePath":"api/generated/Belay.Core.Sessions.IResourceTracker.CleanupResourcesAsync.md"}'),p={name:"api/generated/Belay.Core.Sessions.IResourceTracker.CleanupResourcesAsync.md"};function u(d,e,h,k,_,y){const s=r("xref");return o(),t("div",null,[e[2]||(e[2]=l('<h1 id="method-cleanupresourcesasync" tabindex="-1"><a id="Belay_Core_Sessions_IResourceTracker_CleanupResourcesAsync_System_Threading_CancellationToken_"></a> Method CleanupResourcesAsync <a class="header-anchor" href="#method-cleanupresourcesasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IResourceTracker_CleanupResourcesAsync_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method CleanupResourcesAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><h2 id="cleanupresourcesasync-cancellationtoken" tabindex="-1"><a id="Belay_Core_Sessions_IResourceTracker_CleanupResourcesAsync_System_Threading_CancellationToken_"></a> CleanupResourcesAsync(CancellationToken) <a class="header-anchor" href="#cleanupresourcesasync-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_IResourceTracker_CleanupResourcesAsync_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; CleanupResourcesAsync\\(CancellationToken\\)&quot;">​</a></h2><p>Cleans up all resources tracked by this session.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CleanupResourcesAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',10)),i("p",null,[e[0]||(e[0]=a("A ",-1)),c(s,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" representing the asynchronous operation.",-1))])])}const T=n(p,[["render",u]]);export{m as __pageData,T as default};
