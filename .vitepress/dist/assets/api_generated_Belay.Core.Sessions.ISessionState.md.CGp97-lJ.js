import{_ as s,c as t,o as a,ag as i}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Interface ISessionState","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.ISessionState.md","filePath":"api/generated/Belay.Core.Sessions.ISessionState.md"}'),o={name:"api/generated/Belay.Core.Sessions.ISessionState.md"};function n(r,e,l,S,_,p){return a(),t("div",null,e[0]||(e[0]=[i('<h1 id="interface-isessionstate" tabindex="-1"><a id="Belay_Core_Sessions_ISessionState"></a> Interface ISessionState <a class="header-anchor" href="#interface-isessionstate" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_ISessionState&quot;&gt;&lt;/a&gt; Interface ISessionState&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><p>Provides session-scoped state management for device operations.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ISessionState</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.ISessionState.Keys.html#Belay_Core_Sessions_ISessionState_Keys">Keys</a></p><p>Gets all keys in the session state.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Sessions.ISessionState.Clear.html#Belay_Core_Sessions_ISessionState_Clear">Clear()</a></p><p>Clears all values from the session state.</p><p><a href="./Belay.Core.Sessions.ISessionState.ContainsKey.html#Belay_Core_Sessions_ISessionState_ContainsKey_System_String_">ContainsKey(string)</a></p><p>Checks whether the session state contains the specified key.</p><p><a href="./Belay.Core.Sessions.ISessionState.Get.html#Belay_Core_Sessions_ISessionState_Get__1_System_String___0_">Get&lt;T&gt;(string, T)</a></p><p>Gets a value from the session state.</p><p><a href="./Belay.Core.Sessions.ISessionState.Remove.html#Belay_Core_Sessions_ISessionState_Remove_System_String_">Remove(string)</a></p><p>Removes a value from the session state.</p><p><a href="./Belay.Core.Sessions.ISessionState.Set.html#Belay_Core_Sessions_ISessionState_Set__1_System_String___0_">Set&lt;T&gt;(string, T)</a></p><p>Sets a value in the session state.</p><p><a href="./Belay.Core.Sessions.ISessionState.TryGet.html#Belay_Core_Sessions_ISessionState_TryGet__1_System_String___0__">TryGet&lt;T&gt;(string, out T)</a></p><p>Attempts to get a value from the session state.</p>',20)]))}const m=s(o,[["render",n]]);export{d as __pageData,m as default};
