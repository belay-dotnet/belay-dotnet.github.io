import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.CUqMdM43.js";const k=JSON.parse('{"title":"Method Get<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Sessions.SessionState.Get.md","filePath":"api/generated/Belay.Core.Sessions.SessionState.Get.md"}'),r={name:"api/generated/Belay.Core.Sessions.SessionState.Get.md"};function n(l,e,o,h,p,d){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="method-get-t" tabindex="-1"><a id="Belay_Core_Sessions_SessionState_Get__1_System_String___0_"></a> Method Get&lt;T&gt; <a class="header-anchor" href="#method-get-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_SessionState_Get__1_System_String___0_&quot;&gt;&lt;/a&gt; Method Get&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Sessions.html">Belay.Core.Sessions</a><br> Assembly: Belay.Core.dll</p><h2 id="get-t-string-t" tabindex="-1"><a id="Belay_Core_Sessions_SessionState_Get__1_System_String___0_"></a> Get&lt;T&gt;(string, T) <a class="header-anchor" href="#get-t-string-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Sessions_SessionState_Get__1_System_String___0_&quot;&gt;&lt;/a&gt; Get&lt;T\\&gt;\\(string, T\\)&quot;">​</a></h2><p>Gets a value from the session state.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defaultValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>key</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The key of the value to retrieve.</p><p><code>defaultValue</code> T</p><p>The default value to return if the key is not found.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p>T</p><p>The value associated with the key, or the default value if not found.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The type of the value to retrieve.</p>',16)]))}const g=t(r,[["render",n]]);export{k as __pageData,g as default};
