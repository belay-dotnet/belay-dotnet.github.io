import{_ as a,c as t,o as s,ag as r}from"./chunks/framework.CUqMdM43.js";const k=JSON.parse('{"title":"Method GetOrCreateAsync<T>","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.SimpleCache.GetOrCreateAsync.md","filePath":"api/generated/Belay.Core.SimpleCache.GetOrCreateAsync.md"}'),i={name:"api/generated/Belay.Core.SimpleCache.GetOrCreateAsync.md"};function n(l,e,h,p,c,o){return s(),t("div",null,e[0]||(e[0]=[r('<h1 id="method-getorcreateasync-t" tabindex="-1"><a id="Belay_Core_SimpleCache_GetOrCreateAsync__1_System_String_System_Func_System_Threading_Tasks_Task___0___"></a> Method GetOrCreateAsync&lt;T&gt; <a class="header-anchor" href="#method-getorcreateasync-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_SimpleCache_GetOrCreateAsync__1_System_String_System_Func_System_Threading_Tasks_Task___0___&quot;&gt;&lt;/a&gt; Method GetOrCreateAsync&lt;T\\&gt;&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="getorcreateasync-t-string-func-task-t" tabindex="-1"><a id="Belay_Core_SimpleCache_GetOrCreateAsync__1_System_String_System_Func_System_Threading_Tasks_Task___0___"></a> GetOrCreateAsync&lt;T&gt;(string, Func&lt;Task&lt;T&gt;&gt;) <a class="header-anchor" href="#getorcreateasync-t-string-func-task-t" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_SimpleCache_GetOrCreateAsync__1_System_String_System_Func_System_Threading_Tasks_Task___0___&quot;&gt;&lt;/a&gt; GetOrCreateAsync&lt;T\\&gt;\\(string, Func&lt;Task&lt;T\\&gt;\\&gt;\\)&quot;">​</a></h2><p>Gets a cached value or creates it asynchronously using the factory function. Thread-safe implementation prevents multiple concurrent factory executions.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetOrCreateAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>key</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The cache key.</p><p><code>factory</code> <a href="https://learn.microsoft.com/dotnet/api/system.func-1" target="_blank" rel="noreferrer">Func</a>&lt;<a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;T&gt;&gt;</p><p>The async factory function to create the value if not cached.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1" target="_blank" rel="noreferrer">Task</a>&lt;T&gt;</p><p>The cached or newly created value.</p><h3 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h3><p><code>T</code></p><p>The type of the cached value.</p>',16)]))}const d=a(i,[["render",n]]);export{k as __pageData,d as default};
