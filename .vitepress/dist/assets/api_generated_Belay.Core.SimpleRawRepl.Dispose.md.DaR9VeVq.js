import{_ as a,c as s,o as i,ag as t}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method Dispose","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.SimpleRawRepl.Dispose.md","filePath":"api/generated/Belay.Core.SimpleRawRepl.Dispose.md"}'),l={name:"api/generated/Belay.Core.SimpleRawRepl.Dispose.md"};function o(p,e,r,n,d,h){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="method-dispose" tabindex="-1"><a id="Belay_Core_SimpleRawRepl_Dispose"></a> Method Dispose <a class="header-anchor" href="#method-dispose" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_SimpleRawRepl_Dispose&quot;&gt;&lt;/a&gt; Method Dispose&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.html">Belay.Core</a><br> Assembly: Belay.Core.dll</p><h2 id="dispose" tabindex="-1"><a id="Belay_Core_SimpleRawRepl_Dispose"></a> Dispose() <a class="header-anchor" href="#dispose" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_SimpleRawRepl_Dispose&quot;&gt;&lt;/a&gt; Dispose\\(\\)&quot;">​</a></h2><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Dispose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="remarks" tabindex="-1">Remarks <a class="header-anchor" href="#remarks" aria-label="Permalink to &quot;Remarks&quot;">​</a></h3><p>This method uses a timeout to prevent hanging during disposal if the device is unresponsive. Any pending operations will be cancelled and the raw REPL state will be reset safely.</p>',7)]))}const _=a(l,[["render",o]]);export{m as __pageData,_ as default};
