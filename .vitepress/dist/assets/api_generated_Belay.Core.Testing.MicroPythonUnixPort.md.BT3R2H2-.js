import{_ as t,c as r,o,ag as a}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Class MicroPythonUnixPort","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Testing.MicroPythonUnixPort.md","filePath":"api/generated/Belay.Core.Testing.MicroPythonUnixPort.md"}'),i={name:"api/generated/Belay.Core.Testing.MicroPythonUnixPort.md"};function n(s,e,l,c,h,p){return o(),r("div",null,e[0]||(e[0]=[a('<h1 id="class-micropythonunixport" tabindex="-1"><a id="Belay_Core_Testing_MicroPythonUnixPort"></a> Class MicroPythonUnixPort <a class="header-anchor" href="#class-micropythonunixport" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Testing_MicroPythonUnixPort&quot;&gt;&lt;/a&gt; Class MicroPythonUnixPort&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Testing.html">Belay.Core.Testing</a><br> Assembly: Belay.Core.dll</p><p>Supports all classes in the .NET class hierarchy and provides low-level services to derived classes. This is the ultimate base class of all .NET classes; it is the root of the type hierarchy.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MicroPythonUnixPort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Testing.MicroPythonUnixPort.html">MicroPythonUnixPort</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.BuildUnixPort.html#Belay_Core_Testing_MicroPythonUnixPort_BuildUnixPort">BuildUnixPort()</a></p><p>Build the MicroPython unix port (synchronous wrapper).</p><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.BuildUnixPortAsync.html#Belay_Core_Testing_MicroPythonUnixPort_BuildUnixPortAsync_System_String_System_Threading_CancellationToken_">BuildUnixPortAsync(string, CancellationToken)</a></p><p>Build the MicroPython unix port if source is available.</p><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.FindExecutableAsync.html#Belay_Core_Testing_MicroPythonUnixPort_FindExecutableAsync">FindExecutableAsync()</a></p><p>Find the MicroPython unix port executable.</p><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.FindMicroPythonExecutable.html#Belay_Core_Testing_MicroPythonUnixPort_FindMicroPythonExecutable">FindMicroPythonExecutable()</a></p><p>Find the MicroPython unix port executable (synchronous wrapper).</p><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.GetBuiltExecutablePath.html#Belay_Core_Testing_MicroPythonUnixPort_GetBuiltExecutablePath_System_String_">GetBuiltExecutablePath(string)</a></p><p>Get the expected path to the built unix port executable.</p><p><a href="./Belay.Core.Testing.MicroPythonUnixPort.IsValidMicroPythonExecutableAsync.html#Belay_Core_Testing_MicroPythonUnixPort_IsValidMicroPythonExecutableAsync_System_String_">IsValidMicroPythonExecutableAsync(string)</a></p><p>Check if a path points to a valid MicroPython executable.</p>',21)]))}const b=t(i,[["render",n]]);export{d as __pageData,b as default};
