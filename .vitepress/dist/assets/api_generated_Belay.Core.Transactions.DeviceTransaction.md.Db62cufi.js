import{_ as n,C as r,c as i,o,ag as a,j as c,a as t,G as l}from"./chunks/framework.CUqMdM43.js";const f=JSON.parse('{"title":"Class DeviceTransaction","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.Transactions.DeviceTransaction.md","filePath":"api/generated/Belay.Core.Transactions.DeviceTransaction.md"}'),p={name:"api/generated/Belay.Core.Transactions.DeviceTransaction.md"};function h(m,e,d,_,T,b){const s=r("xref");return o(),i("div",null,[e[2]||(e[2]=a('<h1 id="class-devicetransaction" tabindex="-1"><a id="Belay_Core_Transactions_DeviceTransaction"></a> Class DeviceTransaction <a class="header-anchor" href="#class-devicetransaction" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core_Transactions_DeviceTransaction&quot;&gt;&lt;/a&gt; Class DeviceTransaction&quot;">​</a></h1><p>Namespace: <a href="./Belay.Core.Transactions.html">Belay.Core.Transactions</a><br> Assembly: Belay.Core.dll</p><p>Implementation of device transaction using compensating actions pattern. Since we can&#39;t have true ACID transactions with external devices, we use compensating actions.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> sealed</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceTransaction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDeviceTransaction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IDisposable</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Core.Transactions.DeviceTransaction.html">DeviceTransaction</a></p><h4 id="implements" tabindex="-1">Implements <a class="header-anchor" href="#implements" aria-label="Permalink to &quot;Implements&quot;">​</a></h4><p><a href="./Belay.Core.Transactions.IDeviceTransaction.html">IDeviceTransaction</a>, <a href="https://learn.microsoft.com/dotnet/api/system.idisposable" target="_blank" rel="noreferrer">IDisposable</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><p><a href="./Belay.Core.Transactions.DeviceTransaction.-ctor.html#Belay_Core_Transactions_DeviceTransaction__ctor">DeviceTransaction()</a></p>',12)),c("p",null,[e[0]||(e[0]=t("Initializes a new instance of the ",-1)),l(s,{href:"Belay.Core.Transactions.DeviceTransaction","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=t(" class.",-1))]),e[3]||(e[3]=a('<h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><p><a href="./Belay.Core.Transactions.DeviceTransaction.IsActive.html#Belay_Core_Transactions_DeviceTransaction_IsActive">IsActive</a></p><p>Gets a value indicating whether the transaction is still active.</p><p><a href="./Belay.Core.Transactions.DeviceTransaction.TransactionId.html#Belay_Core_Transactions_DeviceTransaction_TransactionId">TransactionId</a></p><p>Gets the unique transaction identifier.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Core.Transactions.DeviceTransaction.CommitAsync.html#Belay_Core_Transactions_DeviceTransaction_CommitAsync_System_Threading_CancellationToken_">CommitAsync(CancellationToken)</a></p><p>Commits all operations in this transaction.</p><p><a href="./Belay.Core.Transactions.DeviceTransaction.Dispose.html#Belay_Core_Transactions_DeviceTransaction_Dispose">Dispose()</a></p><p>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</p><p><a href="./Belay.Core.Transactions.DeviceTransaction.RegisterCompensatingAction.html#Belay_Core_Transactions_DeviceTransaction_RegisterCompensatingAction_System_Func_System_Threading_CancellationToken_System_Threading_Tasks_Task__System_String_">RegisterCompensatingAction(Func&lt;CancellationToken, Task&gt;, string)</a></p><p>Registers a compensating action to be executed if the transaction is rolled back.</p><p><a href="./Belay.Core.Transactions.DeviceTransaction.RollbackAsync.html#Belay_Core_Transactions_DeviceTransaction_RollbackAsync_System_Threading_CancellationToken_">RollbackAsync(CancellationToken)</a></p><p>Rolls back all operations in this transaction by executing compensating actions.</p>',14))])}const k=n(p,[["render",h]]);export{f as __pageData,k as default};
