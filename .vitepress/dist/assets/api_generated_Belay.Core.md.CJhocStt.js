import{_ as a,c as t,o as i,ag as o}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Namespace Belay.Core","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core.md","filePath":"api/generated/Belay.Core.md"}'),r={name:"api/generated/Belay.Core.md"};function c(n,e,p,l,s,h){return i(),t("div",null,e[0]||(e[0]=[o('<h1 id="namespace-belay-core" tabindex="-1"><a id="Belay_Core"></a> Namespace Belay.Core <a class="header-anchor" href="#namespace-belay-core" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Core&quot;&gt;&lt;/a&gt; Namespace Belay.Core&quot;">​</a></h1><h3 id="namespaces" tabindex="-1">Namespaces <a class="header-anchor" href="#namespaces" aria-label="Permalink to &quot;Namespaces&quot;">​</a></h3><p><a href="./Belay.Core.Examples.html">Belay.Core.Examples</a></p><p><a href="./Belay.Core.Execution.html">Belay.Core.Execution</a></p><p><a href="./Belay.Core.Testing.html">Belay.Core.Testing</a></p><h3 id="classes" tabindex="-1">Classes <a class="header-anchor" href="#classes" aria-label="Permalink to &quot;Classes&quot;">​</a></h3><p><a href="./Belay.Core.AdaptiveRawReplProtocol.html">AdaptiveRawReplProtocol</a></p><p>Adaptive implementation of MicroPython Raw REPL protocol that auto-detects device capabilities and adjusts protocol parameters for optimal compatibility and performance. Restored from working tagged release with full sophisticated functionality.</p><p><a href="./Belay.Core.AttributeHandler.html">AttributeHandler</a></p><p>Simple attribute handler that replaces the complex executor hierarchy. Handles method attributes with direct, understandable logic.</p><p><a href="./Belay.Core.Device.html">Device</a></p><p>Main entry point for MicroPython device communication. Provides a high-level interface for connecting to and interacting with MicroPython devices.</p><p><a href="./Belay.Core.DeviceConnection.html">DeviceConnection</a></p><p>Simplified device connection that handles both serial and subprocess communication. Uses only basic Raw REPL protocol per aggressive simplification strategy.</p><p><a href="./Belay.Core.DeviceDiscovery.html">DeviceDiscovery</a></p><p>Simple device discovery that returns available serial ports. Replaces complex detection logic with basic port enumeration.</p><p><a href="./Belay.Core.DeviceException.html">DeviceException</a></p><p>Simple exception for all device-related errors. Replaces complex exception hierarchy with single, focused exception type.</p><p><a href="./Belay.Core.DeviceOutputEventArgs.html">DeviceOutputEventArgs</a></p><p>Represents the output received from a device.</p><p><a href="./Belay.Core.DeviceReplCapabilities.html">DeviceReplCapabilities</a></p><p>Detected capabilities of a MicroPython device.</p><p><a href="./Belay.Core.DeviceState.html">DeviceState</a></p><p>Simple state tracking for MicroPython device operations. Replaces complex session management with lightweight state tracking aligned with single-threaded MicroPython device constraints.</p><p><a href="./Belay.Core.DeviceStateChangeEventArgs.html">DeviceStateChangeEventArgs</a></p><p>Represents a change in device connection state.</p><p><a href="./Belay.Core.DirectExecutor.html">DirectExecutor</a></p><p>Direct executor that handles all attribute types via AttributeHandler. Replaces the complex executor hierarchy with a single, focused implementation.</p><p><a href="./Belay.Core.LinuxSerialConnection.html">LinuxSerialConnection</a></p><p>Minimal Linux-compatible serial connection using file I/O operations. Simple cross-platform serial communication for MicroPython devices.</p><p><a href="./Belay.Core.ProcessSerialConnection.html">ProcessSerialConnection</a></p><p>Process-based serial connection that uses external processes for I/O like mpremote does. This approach avoids the FileStream blocking issues on Linux serial devices.</p><p><a href="./Belay.Core.RawReplConfiguration.html">RawReplConfiguration</a></p><p>Configuration options for the Raw REPL protocol.</p><p><a href="./Belay.Core.RawReplProtocol.html">RawReplProtocol</a></p><p>Simple, documented Raw REPL protocol implementation. Replaces complex protocol abstractions with direct, understandable code. See ICD-001 for protocol specification.</p><p><a href="./Belay.Core.RawReplResponse.html">RawReplResponse</a></p><p>Response from Raw REPL code execution.</p><p><a href="./Belay.Core.ReplProtocolMetrics.html">ReplProtocolMetrics</a></p><p>Metrics for Raw REPL protocol operations.</p><p><a href="./Belay.Core.ResultParser.html">ResultParser</a></p><p>Simple result parser that replaces complex result mapping infrastructure. Handles conversion from device output to strongly-typed results.</p><p><a href="./Belay.Core.SimpleCache.html">SimpleCache</a></p><p>Simple, efficient caching implementation that replaces the complex caching infrastructure. Uses basic memoization suitable for MicroPython device operations.</p><p><a href="./Belay.Core.SimpleDeviceCapabilities.html">SimpleDeviceCapabilities</a></p><p>Simplified device capabilities with efficient batched detection. Replaces sequential capability detection with single optimized call.</p><p><a href="./Belay.Core.SimplifiedCapabilityDetection.html">SimplifiedCapabilityDetection</a></p><p>Provides simplified capability detection for MicroPython devices using a single batched approach. Replaces the complex sequential detection system with efficient batched detection.</p><p><a href="./Belay.Core.SimplifiedDevice.html">SimplifiedDevice</a></p><p>Simplified device implementation using direct AttributeHandler and IDeviceConnection. Replaces complex executor hierarchy with direct, documented interfaces per ICD-002.</p><h3 id="interfaces" tabindex="-1">Interfaces <a class="header-anchor" href="#interfaces" aria-label="Permalink to &quot;Interfaces&quot;">​</a></h3><p><a href="./Belay.Core.IDeviceConnection.html">IDeviceConnection</a></p><p>Simplified device connection interface that replaces the complex IDeviceCommunication hierarchy. Focuses on essential operations without over-abstraction. See ICD-002 for complete specification.</p><h3 id="enums" tabindex="-1">Enums <a class="header-anchor" href="#enums" aria-label="Permalink to &quot;Enums&quot;">​</a></h3><p><a href="./Belay.Core.DeviceConnection.ConnectionType.html">DeviceConnection.ConnectionType</a></p><p>Connection types supported by this device connection.</p><p><a href="./Belay.Core.DeviceConnection.ConnectionType.html">DeviceConnection.ConnectionType</a></p><p>Connection types supported by this device connection.</p><p><a href="./Belay.Core.DeviceConnectionState.html">DeviceConnectionState</a></p><p>Represents the connection state of a device.</p><p><a href="./Belay.Core.RawReplState.html">RawReplState</a></p><p>Represents the current state of the Raw REPL protocol.</p><p><a href="./Belay.Core.SimpleDeviceFeatureSet.html">SimpleDeviceFeatureSet</a></p><p>Hardware features that can be detected on MicroPython devices.</p>',64)]))}const f=a(r,[["render",c]]);export{d as __pageData,f as default};
