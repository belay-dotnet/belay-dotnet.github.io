import{_ as o,c as t,o as a,ag as n}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Belay.Core API Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Core/README.md","filePath":"api/generated/Belay.Core/README.md"}'),r={name:"api/generated/Belay.Core/README.md"};function i(s,e,c,l,d,m){return a(),t("div",null,e[0]||(e[0]=[n('<h1 id="belay-core-api-documentation" tabindex="-1">Belay.Core API Documentation <a class="header-anchor" href="#belay-core-api-documentation" aria-label="Permalink to &quot;Belay.Core API Documentation&quot;">​</a></h1><p>Complete API documentation for the Belay.Core namespace.</p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>The Belay.Core namespace provides:</p><ul><li><strong>Device</strong> - Main entry point for MicroPython device communication</li><li><strong>Communication interfaces</strong> - Serial and subprocess communication</li><li><strong>Protocol implementations</strong> - Raw REPL protocol handling</li><li><strong>Execution framework</strong> - Task, Setup, Thread, and Teardown executors</li><li><strong>Session management</strong> - Device session coordination</li><li><strong>Exception handling</strong> - Comprehensive error handling</li><li><strong>Discovery services</strong> - Automatic device discovery</li><li><strong>Testing utilities</strong> - MicroPython unix port integration</li></ul><h2 id="generated-documentation" tabindex="-1">Generated Documentation <a class="header-anchor" href="#generated-documentation" aria-label="Permalink to &quot;Generated Documentation&quot;">​</a></h2><p><em>Complete API reference generated by DocFX from XML documentation comments.</em></p>',7)]))}const g=o(r,[["render",i]]);export{u as __pageData,g as default};
