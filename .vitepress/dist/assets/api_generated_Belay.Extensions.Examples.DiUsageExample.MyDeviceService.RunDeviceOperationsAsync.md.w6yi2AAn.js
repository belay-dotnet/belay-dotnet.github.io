import{_ as a,c as s,o as i,ag as n}from"./chunks/framework.CUqMdM43.js";const u=JSON.parse('{"title":"Method RunDeviceOperationsAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Extensions.Examples.DiUsageExample.MyDeviceService.RunDeviceOperationsAsync.md","filePath":"api/generated/Belay.Extensions.Examples.DiUsageExample.MyDeviceService.RunDeviceOperationsAsync.md"}'),t={name:"api/generated/Belay.Extensions.Examples.DiUsageExample.MyDeviceService.RunDeviceOperationsAsync.md"};function r(p,e,o,c,l,d){return i(),s("div",null,e[0]||(e[0]=[n('<h1 id="method-rundeviceoperationsasync" tabindex="-1"><a id="Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync"></a> Method RunDeviceOperationsAsync <a class="header-anchor" href="#method-rundeviceoperationsasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync&quot;&gt;&lt;/a&gt; Method RunDeviceOperationsAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Extensions.Examples.html">Belay.Extensions.Examples</a><br> Assembly: Belay.Extensions.dll</p><h2 id="rundeviceoperationsasync" tabindex="-1"><a id="Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync"></a> RunDeviceOperationsAsync() <a class="header-anchor" href="#rundeviceoperationsasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync&quot;&gt;&lt;/a&gt; RunDeviceOperationsAsync\\(\\)&quot;">​</a></h2><p>Run some operations on a device.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RunDeviceOperationsAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task representing the operation.</p><h2 id="rundeviceoperationsasync-1" tabindex="-1"><a id="Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync"></a> RunDeviceOperationsAsync() <a class="header-anchor" href="#rundeviceoperationsasync-1" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_Examples_DiUsageExample_MyDeviceService_RunDeviceOperationsAsync&quot;&gt;&lt;/a&gt; RunDeviceOperationsAsync\\(\\)&quot;">​</a></h2><p>Run some operations on a device.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RunDeviceOperationsAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p><p>A task representing the operation.</p>',14)]))}const v=a(t,[["render",r]]);export{u as __pageData,v as default};
