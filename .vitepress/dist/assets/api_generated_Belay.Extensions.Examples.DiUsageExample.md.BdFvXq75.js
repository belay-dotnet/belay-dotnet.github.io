import{_ as a,c as t,o as s,ag as o}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Class DiUsageExample","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Extensions.Examples.DiUsageExample.md","filePath":"api/generated/Belay.Extensions.Examples.DiUsageExample.md"}'),n={name:"api/generated/Belay.Extensions.Examples.DiUsageExample.md"};function i(r,e,l,p,c,m){return s(),t("div",null,e[0]||(e[0]=[o('<h1 id="class-diusageexample" tabindex="-1"><a id="Belay_Extensions_Examples_DiUsageExample"></a> Class DiUsageExample <a class="header-anchor" href="#class-diusageexample" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_Examples_DiUsageExample&quot;&gt;&lt;/a&gt; Class DiUsageExample&quot;">​</a></h1><p>Namespace: <a href="./Belay.Extensions.Examples.html">Belay.Extensions.Examples</a><br> Assembly: Belay.Extensions.dll</p><p>Example showing how to use Belay.NET with dependency injection.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DiUsageExample</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Extensions.Examples.DiUsageExample.html">DiUsageExample</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Extensions.Examples.DiUsageExample.ConfigureWebApplication.html#Belay_Extensions_Examples_DiUsageExample_ConfigureWebApplication_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_">ConfigureWebApplication(IServiceCollection, IConfiguration)</a></p><p>Example of setting up Belay.NET with ASP.NET Core. Note: Requires Microsoft.Extensions.Hosting and Microsoft.AspNetCore.App packages.</p><p><a href="./Belay.Extensions.Examples.DiUsageExample.RunConsoleExample.html#Belay_Extensions_Examples_DiUsageExample_RunConsoleExample">RunConsoleExample()</a></p><p>Example of setting up Belay.NET with dependency injection in a console application. Note: In a real application you would add logging and use a proper hosting framework.</p>',13)]))}const b=a(n,[["render",i]]);export{d as __pageData,b as default};
