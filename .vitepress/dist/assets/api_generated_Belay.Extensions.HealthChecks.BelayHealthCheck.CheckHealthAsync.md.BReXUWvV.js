import{_ as h,C as l,c as i,o,ag as c,j as t,a,G as n}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Method CheckHealthAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Extensions.HealthChecks.BelayHealthCheck.CheckHealthAsync.md","filePath":"api/generated/Belay.Extensions.HealthChecks.BelayHealthCheck.CheckHealthAsync.md"}'),r={name:"api/generated/Belay.Extensions.HealthChecks.BelayHealthCheck.CheckHealthAsync.md"};function k(d,e,p,C,_,y){const s=l("xref");return o(),i("div",null,[e[4]||(e[4]=c('<h1 id="method-checkhealthasync" tabindex="-1"><a id="Belay_Extensions_HealthChecks_BelayHealthCheck_CheckHealthAsync_Microsoft_Extensions_Diagnostics_HealthChecks_HealthCheckContext_System_Threading_CancellationToken_"></a> Method CheckHealthAsync <a class="header-anchor" href="#method-checkhealthasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_HealthChecks_BelayHealthCheck_CheckHealthAsync_Microsoft_Extensions_Diagnostics_HealthChecks_HealthCheckContext_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method CheckHealthAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Extensions.HealthChecks.html">Belay.Extensions.HealthChecks</a><br> Assembly: Belay.Extensions.dll</p><h2 id="checkhealthasync-healthcheckcontext-cancellationtoken" tabindex="-1"><a id="Belay_Extensions_HealthChecks_BelayHealthCheck_CheckHealthAsync_Microsoft_Extensions_Diagnostics_HealthChecks_HealthCheckContext_System_Threading_CancellationToken_"></a> CheckHealthAsync(HealthCheckContext, CancellationToken) <a class="header-anchor" href="#checkhealthasync-healthcheckcontext-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Extensions_HealthChecks_BelayHealthCheck_CheckHealthAsync_Microsoft_Extensions_Diagnostics_HealthChecks_HealthCheckContext_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; CheckHealthAsync\\(HealthCheckContext, CancellationToken\\)&quot;">​</a></h2><p>Runs the health check, returning the status of the component being checked.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HealthCheckResult</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CheckHealthAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HealthCheckContext</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>context</code> <a href="https://learn.microsoft.com/dotnet/api/microsoft.extensions.diagnostics.healthchecks.healthcheckcontext" target="_blank" rel="noreferrer">HealthCheckContext</a></p><p>A context object associated with the current execution.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p>',9)),t("p",null,[e[0]||(e[0]=a("A ",-1)),n(s,{href:"System.Threading.CancellationToken","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" that can be used to cancel the health check.",-1))]),e[5]||(e[5]=t("h3",{id:"returns",tabindex:"-1"},[a("Returns "),t("a",{class:"header-anchor",href:"#returns","aria-label":'Permalink to "Returns"'},"​")],-1)),e[6]||(e[6]=t("p",null,[t("a",{href:"https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1",target:"_blank",rel:"noreferrer"},"Task"),a("<"),t("a",{href:"https://learn.microsoft.com/dotnet/api/microsoft.extensions.diagnostics.healthchecks.healthcheckresult",target:"_blank",rel:"noreferrer"},"HealthCheckResult"),a(">")],-1)),t("p",null,[e[2]||(e[2]=a("A ",-1)),n(s,{href:"System.Threading.Tasks.Task%601","data-throw-if-not-resolved":"false"}),e[3]||(e[3]=a(" that completes when the health check has finished, yielding the status of the component being checked.",-1))])])}const H=h(r,[["render",k]]);export{m as __pageData,H as default};
