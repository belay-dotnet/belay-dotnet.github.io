import{_ as t,c as a,o as s,ag as i}from"./chunks/framework.CUqMdM43.js";const m=JSON.parse('{"title":"Class DeviceExtensions","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Sync.DeviceExtensions.md","filePath":"api/generated/Belay.Sync.DeviceExtensions.md"}'),n={name:"api/generated/Belay.Sync.DeviceExtensions.md"};function r(o,e,c,l,h,p){return s(),a("div",null,e[0]||(e[0]=[i('<h1 id="class-deviceextensions" tabindex="-1"><a id="Belay_Sync_DeviceExtensions"></a> Class DeviceExtensions <a class="header-anchor" href="#class-deviceextensions" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Sync_DeviceExtensions&quot;&gt;&lt;/a&gt; Class DeviceExtensions&quot;">​</a></h1><p>Namespace: <a href="./Belay.Sync.html">Belay.Sync</a><br> Assembly: Belay.Sync.dll</p><p>Extension methods to add file system support to Device instances. This approach avoids circular dependencies between Belay.Core and Belay.Sync.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceExtensions</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="inheritance" tabindex="-1">Inheritance <a class="header-anchor" href="#inheritance" aria-label="Permalink to &quot;Inheritance&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noreferrer">object</a> ← <a href="./Belay.Sync.DeviceExtensions.html">DeviceExtensions</a></p><h4 id="inherited-members" tabindex="-1">Inherited Members <a class="header-anchor" href="#inherited-members" aria-label="Permalink to &quot;Inherited Members&quot;">​</a></h4><p><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noreferrer">object.Equals(object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)" target="_blank" rel="noreferrer">object.Equals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noreferrer">object.GetHashCode()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noreferrer">object.GetType()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone" target="_blank" rel="noreferrer">object.MemberwiseClone()</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.referenceequals" target="_blank" rel="noreferrer">object.ReferenceEquals(object?, object?)</a>, <a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noreferrer">object.ToString()</a></p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><p><a href="./Belay.Sync.DeviceExtensions.FileSystem.html#Belay_Sync_DeviceExtensions_FileSystem_Belay_Core_Device_">FileSystem(Device)</a></p><p>Gets a DeviceFileSystem instance for the specified device with lazy initialization. This is the recommended approach for performance-sensitive scenarios.</p><p><a href="./Belay.Sync.DeviceExtensions.GetFileSystem.html#Belay_Sync_DeviceExtensions_GetFileSystem_Belay_Core_Device_Microsoft_Extensions_Logging_ILogger_Belay_Sync_DeviceFileSystem__">GetFileSystem(Device, ILogger&lt;DeviceFileSystem&gt;?)</a></p><p>Gets or creates a DeviceFileSystem instance for the specified device.</p>',13)]))}const y=t(n,[["render",r]]);export{m as __pageData,y as default};
