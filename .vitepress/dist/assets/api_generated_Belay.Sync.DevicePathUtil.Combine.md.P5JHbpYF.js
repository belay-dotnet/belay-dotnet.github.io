import{_ as a,c as t,o as i,ag as s}from"./chunks/framework.CUqMdM43.js";const d=JSON.parse('{"title":"Method Combine","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Sync.DevicePathUtil.Combine.md","filePath":"api/generated/Belay.Sync.DevicePathUtil.Combine.md"}'),n={name:"api/generated/Belay.Sync.DevicePathUtil.Combine.md"};function r(l,e,o,h,p,c){return i(),t("div",null,e[0]||(e[0]=[s('<h1 id="method-combine" tabindex="-1"><a id="Belay_Sync_DevicePathUtil_Combine_System_String___"></a> Method Combine <a class="header-anchor" href="#method-combine" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Sync_DevicePathUtil_Combine_System_String___&quot;&gt;&lt;/a&gt; Method Combine&quot;">​</a></h1><p>Namespace: <a href="./Belay.Sync.html">Belay.Sync</a><br> Assembly: Belay.Sync.dll</p><h2 id="combine-params-string" tabindex="-1"><a id="Belay_Sync_DevicePathUtil_Combine_System_String___"></a> Combine(params string[]) <a class="header-anchor" href="#combine-params-string" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Sync_DevicePathUtil_Combine_System_String___&quot;&gt;&lt;/a&gt; Combine\\(params string\\[\\]\\)&quot;">​</a></h2><p>Combines multiple path segments into a single device path.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Combine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>paths</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a>[]</p><p>The path segments to combine.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The combined device path.</p><h3 id="exceptions" tabindex="-1">Exceptions <a class="header-anchor" href="#exceptions" aria-label="Permalink to &quot;Exceptions&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noreferrer">ArgumentException</a></p><p>Thrown when any path segment is invalid.</p>',14)]))}const _=a(n,[["render",r]]);export{d as __pageData,_ as default};
