import{_ as r,C as n,c as o,o as c,ag as p,G as s,j as t,w as d,a}from"./chunks/framework.CUqMdM43.js";const F=JSON.parse('{"title":"Method DeleteFileAsync","description":"","frontmatter":{},"headers":[],"relativePath":"api/generated/Belay.Sync.IDeviceFileSystem.DeleteFileAsync.md","filePath":"api/generated/Belay.Sync.IDeviceFileSystem.DeleteFileAsync.md"}'),h={name:"api/generated/Belay.Sync.IDeviceFileSystem.DeleteFileAsync.md"};function y(k,e,m,_,g,f){const i=n("xref"),l=n("placeholder");return c(),o("div",null,[e[2]||(e[2]=p('<h1 id="method-deletefileasync" tabindex="-1"><a id="Belay_Sync_IDeviceFileSystem_DeleteFileAsync_System_String_System_Threading_CancellationToken_"></a> Method DeleteFileAsync <a class="header-anchor" href="#method-deletefileasync" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Sync_IDeviceFileSystem_DeleteFileAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; Method DeleteFileAsync&quot;">​</a></h1><p>Namespace: <a href="./Belay.Sync.html">Belay.Sync</a><br> Assembly: Belay.Sync.dll</p><h2 id="deletefileasync-string-cancellationtoken" tabindex="-1"><a id="Belay_Sync_IDeviceFileSystem_DeleteFileAsync_System_String_System_Threading_CancellationToken_"></a> DeleteFileAsync(string, CancellationToken) <a class="header-anchor" href="#deletefileasync-string-cancellationtoken" aria-label="Permalink to &quot;&lt;a id=&quot;Belay_Sync_IDeviceFileSystem_DeleteFileAsync_System_String_System_Threading_CancellationToken_&quot;&gt;&lt;/a&gt; DeleteFileAsync\\(string, CancellationToken\\)&quot;">​</a></h2><p>Deletes a file from the device.</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeleteFileAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CancellationToken</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cancellationToken</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><p><code>path</code> <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noreferrer">string</a></p><p>The file path to delete.</p><p><code>cancellationToken</code> <a href="https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken" target="_blank" rel="noreferrer">CancellationToken</a></p><p>Cancellation token to cancel the operation.</p><h3 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><a href="https://learn.microsoft.com/dotnet/api/system.threading.tasks.task" target="_blank" rel="noreferrer">Task</a></p>',12)),s(l,null,{default:d(()=>[e[0]||(e[0]=a("A ",-1)),s(i,{href:"System.Threading.Tasks.Task","data-throw-if-not-resolved":"false"}),e[1]||(e[1]=a(" representing the asynchronous operation.",-1))]),_:1,__:[0,1]}),e[3]||(e[3]=t("h3",{id:"exceptions",tabindex:"-1"},[a("Exceptions "),t("a",{class:"header-anchor",href:"#exceptions","aria-label":'Permalink to "Exceptions"'},"​")],-1)),e[4]||(e[4]=t("p",null,[t("a",{href:"https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception",target:"_blank",rel:"noreferrer"},"FileNotFoundException")],-1)),e[5]||(e[5]=t("p",null,"Thrown when the file does not exist.",-1)),e[6]||(e[6]=t("p",null,[t("a",{href:"https://learn.microsoft.com/dotnet/api/system.unauthorizedaccessexception",target:"_blank",rel:"noreferrer"},"UnauthorizedAccessException")],-1)),e[7]||(e[7]=t("p",null,"Thrown when access is denied.",-1))])}const S=r(h,[["render",y]]);export{F as __pageData,S as default};
