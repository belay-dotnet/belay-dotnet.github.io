import{_ as t,c as a,o as n,ag as r}from"./chunks/framework.CUqMdM43.js";const h=JSON.parse('{"title":"API Reference","description":"","frontmatter":{},"headers":[],"relativePath":"api/index.md","filePath":"api/index.md"}'),i={name:"api/index.md"};function o(s,e,l,c,d,u){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="api-reference" tabindex="-1">API Reference <a class="header-anchor" href="#api-reference" aria-label="Permalink to &quot;API Reference&quot;">​</a></h1><p>Comprehensive API documentation automatically generated from XML comments.</p><h2 id="generated-documentation" tabindex="-1">Generated Documentation <a class="header-anchor" href="#generated-documentation" aria-label="Permalink to &quot;Generated Documentation&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">API Documentation Status</p><p>API documentation is automatically generated from XML comments during the CI build process. If you see 404 errors, the site may be in the middle of a deployment update.</p></div><ul><li><strong><a href="./generated/Belay.Attributes.html">Belay.Attributes</a></strong> - Attribute-based method decorators for device operations</li><li><strong><a href="./generated/Belay.Core.html">Belay.Core</a></strong> - Core device communication and session management</li><li><strong><a href="./generated/Belay.Extensions.html">Belay.Extensions</a></strong> - Dependency injection and configuration extensions</li><li><strong><a href="./generated/Belay.Sync.html">Belay.Sync</a></strong> - File synchronization utilities for device storage</li></ul><h2 id="quick-reference" tabindex="-1">Quick Reference <a class="header-anchor" href="#quick-reference" aria-label="Permalink to &quot;Quick Reference&quot;">​</a></h2><h3 id="core-classes" tabindex="-1">Core Classes <a class="header-anchor" href="#core-classes" aria-label="Permalink to &quot;Core Classes&quot;">​</a></h3><ul><li><strong>Device</strong> - Main device connection and communication</li><li><strong>TaskExecutor</strong> - Handles [Task] attribute methods</li><li><strong>EnhancedExecutor</strong> - Advanced method interception framework</li><li><strong>DeviceProxy</strong> - Dynamic proxy for transparent method routing</li></ul><h3 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-label="Permalink to &quot;Attributes&quot;">​</a></h3><ul><li><strong>TaskAttribute</strong> - Execute methods as tasks with caching and timeout</li><li><strong>ThreadAttribute</strong> - Background thread execution</li><li><strong>SetupAttribute</strong> - Device initialization methods</li><li><strong>TeardownAttribute</strong> - Device cleanup methods</li></ul><h2 id="usage-examples" tabindex="-1">Usage Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage Examples&quot;">​</a></h2><p>For practical examples, see the <a href="/examples/">Examples</a> section.</p>',12)]))}const g=t(i,[["render",o]]);export{h as __pageData,g as default};
