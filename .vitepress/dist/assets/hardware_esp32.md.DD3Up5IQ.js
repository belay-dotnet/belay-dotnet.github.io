import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.CUqMdM43.js";const E=JSON.parse('{"title":"ESP32 Setup Guide","description":"","frontmatter":{},"headers":[],"relativePath":"hardware/esp32.md","filePath":"hardware/esp32.md"}'),t={name:"hardware/esp32.md"};function e(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="esp32-setup-guide" tabindex="-1">ESP32 Setup Guide <a class="header-anchor" href="#esp32-setup-guide" aria-label="Permalink to &quot;ESP32 Setup Guide&quot;">‚Äã</a></h1><div class="warning custom-block"><p class="custom-block-title">Documentation in Progress</p><p>This documentation is currently being developed. ESP32 support is fully implemented and tested.</p><p><strong>Status</strong>: ‚úÖ Core functionality complete, üìù Documentation in progress<br><strong>Expected completion</strong>: After hardware validation documentation phase</p></div><h2 id="coming-soon" tabindex="-1">Coming Soon <a class="header-anchor" href="#coming-soon" aria-label="Permalink to &quot;Coming Soon&quot;">‚Äã</a></h2><p>This page will provide complete setup instructions for ESP32 development boards, including:</p><ul><li><strong>Firmware Installation</strong>: MicroPython firmware installation for various ESP32 boards</li><li><strong>Driver Installation</strong>: CP210x and CH340 USB-to-serial driver setup</li><li><strong>WiFi Configuration</strong>: Connecting ESP32 to WiFi networks</li><li><strong>WebREPL Setup</strong>: Wireless programming and debugging (planned for v0.3.0)</li><li><strong>Pin Mapping</strong>: ESP32-specific GPIO and peripheral configuration</li><li><strong>Power Management</strong>: Sleep modes and power optimization</li><li><strong>Board Variants</strong>: Support for ESP32, ESP32-S2, ESP32-S3, and ESP32-C3</li></ul><h2 id="quick-start-preview" tabindex="-1">Quick Start Preview <a class="header-anchor" href="#quick-start-preview" aria-label="Permalink to &quot;Quick Start Preview&quot;">‚Äã</a></h2><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Example of what&#39;s coming - ESP32-specific device control</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Esp32Controller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Device</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitializeEsp32Async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">from machine import Pin, PWM, ADC</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import network</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># GPIO setup</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">led = Pin(2, Pin.OUT)  # Built-in LED (varies by board)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">button = Pin(0, Pin.IN, Pin.PULL_UP)  # Boot button</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">adc = ADC(Pin(36))  # Analog input</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pwm = PWM(Pin(4))</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pwm.freq(1000)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"># WiFi setup (optional)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wlan = network.WLAN(network.STA_IF)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wlan.active(True)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ConnectWiFiAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ssid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> code</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $@&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wlan.connect(&#39;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssid</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;, &#39;{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">password</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">import time</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">timeout = 10</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">while not wlan.isconnected() and timeout &gt; 0:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    time.sleep(1)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    timeout -= 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">print(&#39;Connected&#39; if wlan.isconnected() else &#39;Failed&#39;)</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">wlan.isconnected()</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> connected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(code);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">connected)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DeviceExecutionException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;WiFi connection failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWiFiStatusAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;str(wlan.ifconfig()) if wlan.isconnected() else &#39;Not connected&#39;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadAnalogAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;adc.read()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SetLedAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;led.{&#39;on&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;off&#39;}()&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Usage</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> esp32</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Device.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FromConnectionString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;serial:COM3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> esp32.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> controller</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Esp32Controller</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> controller.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InitializeEsp32Async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Connect to WiFi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> controller.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectWiFiAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;YourNetworkName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;YourPassword&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> wifiStatus</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> controller.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetWiFiStatusAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;WiFi Status: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wifiStatus</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Read analog sensor</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> analogValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> controller.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadAnalogAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;Analog reading: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">analogValue</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><h2 id="popular-esp32-boards" tabindex="-1">Popular ESP32 Boards <a class="header-anchor" href="#popular-esp32-boards" aria-label="Permalink to &quot;Popular ESP32 Boards&quot;">‚Äã</a></h2><h3 id="esp32-devkit-v1" tabindex="-1">ESP32 DevKit V1 <a class="header-anchor" href="#esp32-devkit-v1" aria-label="Permalink to &quot;ESP32 DevKit V1&quot;">‚Äã</a></h3><ul><li><strong>USB Chip</strong>: CP2102 or CH340</li><li><strong>Built-in LED</strong>: Pin 2</li><li><strong>Flash Button</strong>: Pin 0</li><li><strong>ADC Pins</strong>: 0, 2, 4, 12-15, 25-27, 32-39</li></ul><h3 id="esp32-s2-s3" tabindex="-1">ESP32-S2/S3 <a class="header-anchor" href="#esp32-s2-s3" aria-label="Permalink to &quot;ESP32-S2/S3&quot;">‚Äã</a></h3><ul><li><strong>Native USB</strong>: Direct USB connection without USB-to-serial chip</li><li><strong>Enhanced Features</strong>: More GPIO, better WiFi performance</li><li><strong>Pin Differences</strong>: Refer to board-specific pinout diagrams</li></ul><h3 id="esp32-c3" tabindex="-1">ESP32-C3 <a class="header-anchor" href="#esp32-c3" aria-label="Permalink to &quot;ESP32-C3&quot;">‚Äã</a></h3><ul><li><strong>RISC-V Architecture</strong>: Different from ARM-based ESP32</li><li><strong>WiFi + Bluetooth 5</strong>: Full wireless stack</li><li><strong>Fewer Pins</strong>: Compact form factor with fewer GPIO</li></ul><h2 id="firmware-installation" tabindex="-1">Firmware Installation <a class="header-anchor" href="#firmware-installation" aria-label="Permalink to &quot;Firmware Installation&quot;">‚Äã</a></h2><h3 id="using-esptool-py" tabindex="-1">Using esptool.py <a class="header-anchor" href="#using-esptool-py" aria-label="Permalink to &quot;Using esptool.py&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Install esptool</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> esptool</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Erase flash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esptool.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --chip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> esp32</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COM3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> erase_flash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Flash MicroPython firmware</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">esptool.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --chip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> esp32</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --port</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> COM3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --baud</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 460800</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> write_flash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0x1000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> esp32-20210902-v1.17.bin</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="board-specific-notes" tabindex="-1">Board-Specific Notes <a class="header-anchor" href="#board-specific-notes" aria-label="Permalink to &quot;Board-Specific Notes&quot;">‚Äã</a></h3><ul><li><strong>ESP32</strong>: Standard installation process</li><li><strong>ESP32-S2</strong>: May require holding boot button during flashing</li><li><strong>ESP32-C3</strong>: Different partition layout, use C3-specific firmware</li></ul><h2 id="common-gpio-pin-functions" tabindex="-1">Common GPIO Pin Functions <a class="header-anchor" href="#common-gpio-pin-functions" aria-label="Permalink to &quot;Common GPIO Pin Functions&quot;">‚Äã</a></h2><table tabindex="0"><thead><tr><th>Pin</th><th>Function</th><th>Notes</th></tr></thead><tbody><tr><td>0</td><td>Boot/Flash</td><td>Pull-up resistor, boot button</td></tr><tr><td>1</td><td>TX</td><td>UART0 transmit</td></tr><tr><td>2</td><td>LED</td><td>Built-in LED on many boards</td></tr><tr><td>3</td><td>RX</td><td>UART0 receive</td></tr><tr><td>4-5</td><td>GPIO</td><td>General purpose I/O</td></tr><tr><td>6-11</td><td>Flash</td><td>Connected to SPI flash (don&#39;t use)</td></tr><tr><td>12-15</td><td>GPIO</td><td>General purpose, ADC2</td></tr><tr><td>16-17</td><td>GPIO</td><td>General purpose</td></tr><tr><td>18-19</td><td>GPIO</td><td>SPI pins</td></tr><tr><td>21-22</td><td>GPIO</td><td>I2C pins (SDA/SCL)</td></tr><tr><td>25-27</td><td>GPIO</td><td>ADC2, DAC</td></tr><tr><td>32-39</td><td>GPIO</td><td>ADC1 (36-39 input only)</td></tr></tbody></table><h2 id="related-documentation" tabindex="-1">Related Documentation <a class="header-anchor" href="#related-documentation" aria-label="Permalink to &quot;Related Documentation&quot;">‚Äã</a></h2><ul><li><a href="/hardware/compatibility.html">Hardware Compatibility</a> - ESP32 variant compatibility</li><li><a href="/hardware/connections.html">Connection Types</a> - USB and WebREPL setup</li><li><a href="/guide/getting-started.html">Getting Started</a> - Basic Belay.NET setup</li><li><a href="/examples/multiple-devices.html">Multiple Devices</a> - Managing multiple ESP32s</li></ul><p><strong>Need immediate help?</strong> Check <a href="https://docs.micropython.org/en/latest/esp32/quickref.html" target="_blank" rel="noreferrer">ESP32 MicroPython documentation</a> or our <a href="https://github.com/belay-dotnet/Belay.NET/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a>.</p>`,24)]))}const c=i(t,[["render",e]]);export{E as __pageData,c as default};
