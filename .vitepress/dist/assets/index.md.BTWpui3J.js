import{_ as i,c as a,o as n,ag as t}from"./chunks/framework.CUqMdM43.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"Belay.NET","text":"Control MicroPython devices from .NET","tagline":"Write C# code that seamlessly executes on microcontrollers, with full IntelliSense, type safety, and async/await support.","image":{"src":"/hero-logo.svg","alt":"Belay.NET"},"actions":[{"theme":"brand","text":"Get Started","link":"/guide/getting-started"},{"theme":"alt","text":"View on GitHub","link":"https://github.com/belay-dotnet/belay"}]},"features":[{"icon":"üöÄ","title":"Zero Configuration","details":"Connect and control devices in seconds with automatic device detection and protocol negotiation."},{"icon":"üéØ","title":"Type-Safe Remote Execution","details":"Full IntelliSense and compile-time safety for remote code with strongly-typed return values."},{"icon":"‚ö°","title":"Async First","details":"Modern async/await patterns throughout the API with proper cancellation token support."},{"icon":"üè∑Ô∏è","title":"Attribute-Based Programming","details":"Decorate methods to run seamlessly on devices with [Task], [Setup], [Teardown], and [Thread] attributes."},{"icon":"üì¶","title":"Dependency Injection Ready","details":"First-class DI support with Microsoft.Extensions including configuration, health checks, and factory patterns."},{"icon":"üîç","title":"Built-in Monitoring","details":"Health checks, performance metrics, and comprehensive error handling with structured logging."}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),e={name:"index.md"};function l(p,s,h,r,k,o){return n(),a("div",null,s[0]||(s[0]=[t(`<h2 id="quick-example" tabindex="-1">Quick Example <a class="header-anchor" href="#quick-example" aria-label="Permalink to &quot;Quick Example&quot;">‚Äã</a></h2><p>Transform your .NET application into an IoT powerhouse:</p><div class="language-csharp vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Install: dotnet add package Belay.NET</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SmartSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Device</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitializeAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;from machine import Pin, ADC; sensor = ADC(Pin(26))&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cache</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TimeoutMs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadTemperatureAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">float</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sensor.read_u16() * 3.3 / 65536 * 100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SetLedAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ExecuteAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;led.{&#39;on&#39; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> else</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;off&#39;}(); True&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Use like any other .NET class</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sensor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SmartSensor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sensor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ConnectAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;COM3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sensor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InitializeAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> temperature</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sensor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ReadTemperatureAsync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">WriteLine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">$&quot;Current temperature: {</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">temperature</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}¬∞C&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="why-belay-net" tabindex="-1">Why Belay.NET? <a class="header-anchor" href="#why-belay-net" aria-label="Permalink to &quot;Why Belay.NET?&quot;">‚Äã</a></h2><div class="info custom-block"><p class="custom-block-title">From Python to Production</p><p>Originally inspired by the Python Belay library, Belay.NET brings the same elegant device integration to the .NET ecosystem with enterprise-grade features like dependency injection, health monitoring, and comprehensive error handling.</p></div><h3 id="perfect-for-iot-applications" tabindex="-1">Perfect for IoT Applications <a class="header-anchor" href="#perfect-for-iot-applications" aria-label="Permalink to &quot;Perfect for IoT Applications&quot;">‚Äã</a></h3><ul><li><strong>Industrial Automation</strong>: Control PLCs and industrial sensors</li><li><strong>Smart Home</strong>: Build intelligent home automation systems</li><li><strong>Research &amp; Education</strong>: Rapid prototyping for academic projects</li><li><strong>Enterprise IoT</strong>: Scalable device management with ASP.NET Core</li></ul><h3 id="supported-hardware" tabindex="-1">Supported Hardware <a class="header-anchor" href="#supported-hardware" aria-label="Permalink to &quot;Supported Hardware&quot;">‚Äã</a></h3><div class="hardware-grid"><div class="hardware-card"><h4>üîå Raspberry Pi Pico</h4><p>Full MicroPython and CircuitPython support</p><span class="status supported">Fully Supported</span></div><div class="hardware-card"><h4>üì° ESP32</h4><p>WiFi-enabled microcontroller with rich peripherals</p><span class="status supported">Fully Supported</span></div><div class="hardware-card"><h4>‚ö° PyBoard</h4><p>Original MicroPython development board</p><span class="status supported">Fully Supported</span></div><div class="hardware-card"><h4>üêç CircuitPython</h4><p>Adafruit&#39;s education-focused Python variant</p><span class="status beta">Beta Support</span></div></div><p><a href="/hardware/compatibility.html">View full compatibility matrix ‚Üí</a></p><h2 id="what-s-new-in-v0-2-0" tabindex="-1">What&#39;s New in v0.2.0 <a class="header-anchor" href="#what-s-new-in-v0-2-0" aria-label="Permalink to &quot;What&#39;s New in v0.2.0&quot;">‚Äã</a></h2><ul><li>‚ú® <strong>Dependency Injection</strong>: First-class Microsoft.Extensions.DependencyInjection support</li><li>üè• <strong>Health Checks</strong>: Built-in system and device health monitoring</li><li>‚öôÔ∏è <strong>Configuration</strong>: Comprehensive configuration management with validation</li><li>üè≠ <strong>Factory Patterns</strong>: Clean abstractions for device and communicator creation</li><li>üîß <strong>Session Management</strong>: Advanced session lifecycle and resource management</li><li>‚ùå <strong>Exception Handling</strong>: Unified exception hierarchy with device error mapping</li></ul><p><a href="/changelog.html">Read the full changelog ‚Üí</a></p>`,13)]))}const E=i(e,[["render",l]]);export{c as __pageData,E as default};
